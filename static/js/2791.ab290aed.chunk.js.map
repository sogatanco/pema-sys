{"version":3,"file":"static/js/2791.ab290aed.chunk.js","mappings":"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","sources":["components/atoms/Toast.js","layouts/breadcrumbs/BreadCrumbs.js","pages/mobil/CarUsage.js","pages/mobil/Grafik.js","pages/mobil/AvailableCar.js","pages/mobil/ListPermintaan.js","pages/mobil/PermintaanMobil.js","pages/mobil/TakeNBack.js","pages/mobil/PengisianBbm.js","pages/mobil/Setting.js","pages/mobil/Mobil.js","pages/mobil/index.js"],"sourcesContent":["import React from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst notify = (type, msg) =>\r\n  type === 'success'\r\n    ? toast.success(msg)\r\n    : type === 'create'\r\n    ? toast(msg, {\r\n        icon: '🤗',\r\n      })\r\n    : type === 'start'\r\n    ? toast('Lets get started, cheer up!', {\r\n        icon: '💪',\r\n      })\r\n    : type === 'done'\r\n    ? toast('Horeee, task done!', {\r\n        icon: '👏',\r\n      })\r\n    : toast.error(msg);\r\n\r\nexport const Toast = () => {\r\n  return (\r\n    <Toaster\r\n      toastOptions={{\r\n        className: '',\r\n        style: {\r\n          //   border: '1px solid #713200',\r\n          //   padding: '16px',\r\n          //   color: '#713200',\r\n          //   width: '800px',\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const alert = (type, msg) => {\r\n  notify(type, msg);\r\n};\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = () => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  return (\r\n    <>\r\n      <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import React from \"react\";\r\nimport Timeline from 'react-calendar-timeline';\r\n// make sure you include the timeline stylesheet or the timeline will not be styled\r\nimport './CarUsage.scss';\r\nimport moment from 'moment';\r\nimport \"moment/locale/id\";\r\n\r\n\r\nconst CarUsage = () => {\r\n    moment.locale(\"id\");\r\n    const groups = [{ id: 1, title: 'Avanza BL 123 AT' },\r\n         { id: 2, title: 'INNOVA 23 BB' },\r\n         { id: 3, title: 'INNOVA 23 BB' },\r\n         { id: 4, title: 'INNOVA 23 BB' },\r\n         { id: 5, title: 'INNOVA 23 BB' }\r\n        \r\n        ];\r\n\r\n    const items = [\r\n        {\r\n            id: 1,\r\n            group: 1,\r\n            title: 'Wahyudin',\r\n            start_time: moment(\"2023-09-14 16:34:11\", \"YYYY-MM-DD HH:mm:ss\"),\r\n            end_time: moment(\"2023-09-14 17:34:11\", \"YYYY-MM-DD HH:mm:ss\"),\r\n            bgColor: 'rgba(225, 166, 244, 0.6)',\r\n        },\r\n        {\r\n            id: 2,\r\n            group: 2,\r\n            title: 'Safrian',\r\n            start_time: moment(\"2023-09-14 15:30:00\", \"YYYY-MM-DD HH:mm:ss\"),\r\n            end_time: moment(\"2023-09-14 16:30:00\", \"YYYY-MM-DD HH:mm:ss\"),\r\n            bgColor: 'rgba(100, 200, 100, 0.6)',\r\n        },\r\n        {\r\n            id: 3,\r\n            group: 1,\r\n            title: 'Syahrial',\r\n            start_time: moment(\"2023-09-14 18:00:00\", \"YYYY-MM-DD HH:mm:ss\"),\r\n            end_time: moment(\"2025-02-27 19:00:00\", \"YYYY-MM-DD HH:mm:ss\"),\r\n            bgColor: 'rgba(225, 166, 244, 0.6)',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Timeline\r\n                groups={groups}\r\n                items={items}\r\n                defaultTimeStart={moment().add(0, 'day')}\r\n                defaultTimeEnd={moment().add(12, 'hour')}\r\n                // timeSteps={{ day: 1, hour: 1 }} // Mengatur langkah waktu \r\n                headerLabelFormats={{\r\n                    yearLong: \"YYYY\", // 2023\r\n                    yearShort: \"YY\", // 23\r\n                    monthShort: \"MMM YYYY\", // Sep 2023\r\n                    monthMedium: \"MMMM YYYY\", // September 2023\r\n                    monthLong: \"MMMM YYYY\", // September 2023\r\n                    dayShort: \"DD MMM\", // 14 Sep\r\n                    dayLong: \"dddd, DD MMM YYYY\", // Kamis, 14 Sep 2023\r\n                    hourShort: \"HH:mm\", // 16:34\r\n                    hourMedium: \"HH:mm\", // 16:34\r\n                    hourLong: \"HH:mm:ss\", // 16:34:11\r\n                }}\r\n                // itemTouchSendsClick={false}\r\n            >\r\n\r\n            </Timeline>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarUsage;\r\n","import React, { useState } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { Select, MenuItem, TextField, Box, styled } from '@mui/material';\r\n\r\n// import './Grafik.css'; // Import the CSS \r\n\r\nconst colorss = ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0', '#546E7A', '#26a69a', '#D10CE8'];\r\n\r\nconst Grafik = () => {\r\n    const [state] = React.useState({\r\n        series: [{\r\n            data: [12, 22, 10, 28, 16, 21, 13, 30]\r\n        }],\r\n        options: {\r\n            chart: {\r\n                height: 350,\r\n                type: 'bar',\r\n            },\r\n            colors: colorss,\r\n            plotOptions: {\r\n                bar: {\r\n                    columnWidth: '45%',\r\n                    distributed: true,\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            xaxis: {\r\n                categories: [\r\n                    ['AVANZA', 'BL 1243 AT'],\r\n                    ['AVANZA', 'Smith'],\r\n                    ['AVANZA', 'Williams'],\r\n                    'Amber',\r\n                    ['Peter', 'Brown'],\r\n                    ['Mary', 'Evans'],\r\n                    ['David', 'Wilson'],\r\n                    ['Lily', 'Roberts'],\r\n                ],\r\n                labels: {\r\n                    style: {\r\n                        colors: colorss,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    const [selection, setSelection] = useState('all');\r\n    const [month, setMonth] = useState('');\r\n    const [year, setYear] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n\r\n    const handleSelectionChange = (event) => {\r\n        setSelection(event.target.value);\r\n        // Reset values when selection changes\r\n        setMonth('');\r\n        setYear('');\r\n        setStartDate('');\r\n        setEndDate('');\r\n    };\r\n\r\n    const RoundedSelect = styled(Select)({\r\n        borderRadius: \"17px\",\r\n        backgroundColor: \"white\",\r\n        letterSpacing: \"0.5px\",\r\n        border: \"none\",\r\n        \"& .MuiOutlinedInput-notchedOutline\": {\r\n            borderRadius: \"17px\",\r\n            border: \"none\",\r\n        },\r\n    });\r\n\r\n\r\n\r\n    return (\r\n\r\n       \r\n                <div className=\"chart-container\">\r\n                    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                        <h4 style={{ fontWeight: 'bold', color: 'black' }}>Grafik BBM Mobil Operasional</h4>\r\n\r\n                        <Box display=\"flex\" alignItems=\"center\">\r\n\r\n                            <Box className=\"me-2\">\r\n                                <RoundedSelect\r\n                                    value={selection}\r\n                                    onChange={handleSelectionChange}\r\n                                    displayEmpty\r\n                                    size=\"small\" // Ukuran lebih kecil\r\n                                >\r\n                                    <MenuItem value=\"monthly\">Bulanan</MenuItem>\r\n                                    <MenuItem value=\"yearly\">Tahunan</MenuItem>\r\n                                    <MenuItem value=\"custom\">Kustom</MenuItem>\r\n                                    <MenuItem value=\"all\">Semua</MenuItem>\r\n                                </RoundedSelect>\r\n                            </Box>\r\n\r\n                            {selection === 'monthly' && (\r\n                                <Box display=\"flex\" alignItems=\"center\">\r\n                                    <RoundedSelect\r\n                                        value={month}\r\n                                        onChange={(e) => setMonth(e.target.value)}\r\n                                        displayEmpty\r\n                                        size=\"small\" // Ukuran lebih kecil\r\n                                        sx={{ mr: 1 }} // Margin kanan untuk jarak\r\n                                    >\r\n                                        <MenuItem value=\"\"><em>Pilih Bulan</em></MenuItem>\r\n                                        {Array.from({ length: 12 }, (_, i) => (\r\n                                            <MenuItem key={i} value={i + 1}>{`Bulan ${i + 1}`}</MenuItem>\r\n                                        ))}\r\n                                    </RoundedSelect>\r\n                                    <RoundedSelect\r\n                                        value={year}\r\n                                        onChange={(e) => setYear(e.target.value)}\r\n                                        displayEmpty\r\n                                        size=\"small\" // Ukuran lebih kecil\r\n                                    >\r\n                                        <MenuItem value=\"\"><em>Pilih Tahun</em></MenuItem>\r\n                                        {Array.from({ length: 10 }, (_, i) => (\r\n                                            <MenuItem key={i} value={2023 + i}>{2023 + i}</MenuItem>\r\n                                        ))}\r\n                                    </RoundedSelect>\r\n                                </Box>\r\n                            )}\r\n\r\n                            {selection === 'yearly' && (\r\n                                <Box>\r\n                                    <RoundedSelect\r\n                                        value={year}\r\n                                        onChange={(e) => setYear(e.target.value)}\r\n                                        displayEmpty\r\n                                        size=\"small\" // Ukuran lebih kecil\r\n                                    >\r\n                                        <MenuItem value=\"\"><em>Pilih Tahun</em></MenuItem>\r\n                                        {Array.from({ length: 10 }, (_, i) => (\r\n                                            <MenuItem key={i} value={2023 + i}>{2023 + i}</MenuItem>\r\n                                        ))}\r\n                                    </RoundedSelect>\r\n                                </Box>\r\n                            )}\r\n\r\n                            {selection === 'custom' && (\r\n                                <Box display=\"flex\" alignItems=\"center\">\r\n                                    <TextField\r\n                                        label=\"Tanggal Mulai\"\r\n                                        type=\"date\"\r\n                                        value={startDate}\r\n                                        onChange={(e) => setStartDate(e.target.value)}\r\n                                        size=\"small\" // Ukuran lebih kecil\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        sx={{ mr: 1 }} // Margin kanan untuk jarak\r\n                                    />\r\n                                    <TextField\r\n\r\n                                        label=\"Tanggal Akhir\"\r\n                                        type=\"date\"\r\n                                        value={endDate}\r\n                                        onChange={(e) => setEndDate(e.target.value)}\r\n                                        size=\"small\" // Ukuran lebih kecil\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                    />\r\n                                </Box>\r\n                            )}\r\n                        </Box>\r\n\r\n\r\n\r\n                    </Box>\r\n\r\n                    <ReactApexChart options={state.options} series={state.series} type=\"bar\" height={350} />\r\n                </div>\r\n\r\n           \r\n    );\r\n};\r\n\r\nexport default Grafik;\r\n","import React, { useRef } from 'react';\r\nimport './AvailableCar.css'; // Import CSS file\r\n\r\n// Sample data for car models\r\nconst carModels = [\r\n    { name: 'Toyota Innova', sales: 'BL 2342 AT', image: 'https://agungtoyota.co.id/app/sam/assets/product_car_model/a1f5610604298e07d5b4b2c369555fda.png' },\r\n    { name: 'Totota Avsanza', sales: 'BL 3543 LW', image: 'https://www.seva.id/_next/image?url=https%3A%2F%2Fimages.prod.seva.id%2FToyota%2FAll%20New%20Avanza%2Fmain_color%2Fhitam.png&w=640&q=75' },\r\n    { name: 'Totota Avasnza', sales: 'BL 1543 LW', image: 'https://www.seva.id/_next/image?url=https%3A%2F%2Fimages.prod.seva.id%2FToyota%2FAll%20New%20Avanza%2Fmain_color%2Fhitam.png&w=640&q=75' },\r\n    { name: 'Totota Avaehwnza', sales: 'BL 1222 LH', image: 'https://www.seva.id/_next/image?url=https%3A%2F%2Fimages.prod.seva.id%2FToyota%2FAll%20New%20Avanza%2Fmain_color%2Fhitam.png&w=640&q=75' },\r\n];\r\nconst AvailableCar = () => {\r\n    const carListRef = useRef(null);\r\n\r\n    const scrollLeft = () => {\r\n        carListRef.current.scrollLeft -= 300; // Adjust scroll amount as needed\r\n    };\r\n\r\n    const scrollRight = () => {\r\n        carListRef.current.scrollLeft += 300; // Adjust scroll amount as needed\r\n    };\r\n\r\n    return (\r\n        <div className=\"available-cars\">\r\n            <button type='button' className=\"arrow-button left-arrow\" onClick={scrollLeft}>&lt;</button>\r\n            <div className=\"car-list\" ref={carListRef}>\r\n                {carModels.map((car) => (\r\n                    <div key={car.name} className=\"car-card\">\r\n                        <img src={car.image} alt={car.name} className=\"car-image\" />\r\n                        <h4>{car.name}</h4>\r\n                        <span>{car.sales}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <button type='button' className=\"arrow-button right-arrow\" onClick={scrollRight}>&gt;</button>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default AvailableCar;\r\n","import React from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\n// Sample data\r\nconst data = [\r\n  {\r\n    namaKaryawan: 'John Doe',\r\n    keperluan: 'Meeting with clients',\r\n    dari: '2023-10-01T09:00:00',\r\n    sampai: '2023-10-01T12:00:00',\r\n    perluSopir: true,\r\n  },\r\n  {\r\n    namaKaryawan: 'Jane Smith',\r\n    keperluan: 'Site visit',\r\n    dari: '2023-10-02T10:00:00',\r\n    sampai: '2023-10-02T14:00:00',\r\n    perluSopir: false,\r\n  },\r\n  {\r\n    namaKaryawan: 'Alice Johnson',\r\n    keperluan: 'Company retreat',\r\n    dari: '2023-10-03T08:00:00',\r\n    sampai: '2023-10-03T18:00:00',\r\n    perluSopir: true,\r\n  },\r\n  {\r\n    namaKaryawan: 'Bob Brown',\r\n    keperluan: 'Training session',\r\n    dari: '2023-10-04T09:30:00',\r\n    sampai: '2023-10-04T12:30:00',\r\n    perluSopir: false,\r\n  },\r\n  {\r\n    namaKaryawan: 'Charlie Davis',\r\n    keperluan: 'Product launch',\r\n    dari: '2023-10-05T11:00:00',\r\n    sampai: '2023-10-05T15:00:00',\r\n    perluSopir: true,\r\n  },\r\n];\r\n\r\n// Define the columns\r\nconst columns = [\r\n  {\r\n    name: 'Nama Karyawan',\r\n    selector: row => row.namaKaryawan,\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Keperluan',\r\n    selector: row => row.keperluan,\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Dari',\r\n    selector: row => new Date(row.dari).toLocaleString(),\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Sampai',\r\n    selector: row => new Date(row.sampai).toLocaleString(),\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Perlu Sopir',\r\n    selector: row => (row.perluSopir ? 'Ya' : 'Tidak'),\r\n    sortable: true,\r\n  },\r\n];\r\n\r\nconst ListPermintaan = () => {\r\n  return (\r\n    <DataTable\r\n      title=\"List Permintaan Kendaraan\"\r\n      columns={columns}\r\n      data={data}\r\n      pagination\r\n      highlightOnHover\r\n      striped\r\n    />\r\n  );\r\n};\r\n\r\nexport default ListPermintaan;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Alert, Card, CardBody } from 'reactstrap';\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { Box, Button } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport ListPermintaan from './ListPermintaan';\r\n\r\nconst PermintaanMobil = () => {\r\n    const api = useAxios();\r\n    const [keperluan, setKeperluan] = useState('');\r\n    const [dari, setDari] = useState(null);\r\n    const [sampai, setSampai] = useState(null);\r\n    const [employe, setEmploye] = useState(null);\r\n    const [employes, setEmployes] = useState([]);\r\n\r\n    // alert\r\n    const [visible, setVisible] = React.useState(true);\r\n    const onDismiss = () => setVisible(false);\r\n\r\n    const getKaryawan = () => {\r\n        api.get('api/employe/assignment-list?search=all').then(res => {\r\n            setEmployes(res.data.data);\r\n            console.log(res.data.data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getKaryawan();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardBody>\r\n\r\n\r\n                    <Alert color=\"info\" isOpen={visible} toggle={onDismiss} fade={false}>\r\n                        Permintaan Mobil Minimal 1 Jam sebelum pemakaian\r\n                    </Alert>\r\n\r\n                    <Box\r\n                        component=\"form\"\r\n                        sx={{\r\n                            '& .MuiTextField-root': { m: 1, width: '100%' },\r\n                            '& .MuiAutocomplete-root': { m: 1, width: '100%' },\r\n                            '& .MuiButton-root': { m: 1, width: '100%' },\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            width: '100%',\r\n                            margin: 'auto',\r\n                        }}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <TextField\r\n                            required\r\n                            id=\"keperluan\"\r\n                            label=\"Keperluan\"\r\n                            variant=\"outlined\"\r\n                            value={keperluan}\r\n                            onChange={(event) => setKeperluan(event.target.value)}\r\n                        />\r\n                        {employes.length > 0 && (\r\n                            <Autocomplete\r\n                                style={{ marginLeft: -10 }}\r\n                                disablePortal\r\n                                id=\"combo-box-demo\"\r\n                                options={employes || []}\r\n                                value={employe}\r\n                                onChange={(event, newValue) => {\r\n                                    if (typeof newValue === 'string') {\r\n                                        setEmploye({\r\n                                            label: newValue,\r\n                                        });\r\n                                    } else if (newValue && newValue.inputValue) {\r\n                                        setEmploye({\r\n                                            label: newValue.inputValue,\r\n                                        });\r\n                                    } else {\r\n                                        setEmploye(newValue);\r\n                                    }\r\n                                }}\r\n                                getOptionLabel={(option) => {\r\n                                    if (typeof option === 'string') {\r\n                                        return option;\r\n                                    }\r\n                                    if (option.inputValue) {\r\n                                        return option.inputValue;\r\n                                    }\r\n                                    return option.label;\r\n                                }}\r\n                                renderOption={(props, option) => {\r\n                                    const { key, ...otherProps } = props;\r\n                                    return <li key={key} {...otherProps}>{option.label}</li>;\r\n                                }}\r\n                                renderInput={(params) => <TextField {...params} label=\"PIC (Penanggung Jawab)\" />}\r\n                            />\r\n                        )}\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                            <DateTimePicker\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                                label=\"Dari\"\r\n                                ampm={false}\r\n                                value={dari}\r\n                                onChange={setDari}\r\n                                viewRenderers={{\r\n                                    hours: renderTimeViewClock,\r\n                                    minutes: renderTimeViewClock,\r\n                                }}\r\n                            />\r\n                            <DateTimePicker\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                                label=\"Sampai\"\r\n                                ampm={false}\r\n                                value={sampai}\r\n                                onChange={setSampai}\r\n                                viewRenderers={{\r\n                                    hours: renderTimeViewClock,\r\n                                    minutes: renderTimeViewClock,\r\n                                }}\r\n                            />\r\n                        </LocalizationProvider>\r\n\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size='large'>\r\n                            Submit Pemintaan\r\n                        </Button>\r\n                    </Box>\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <Card>\r\n                <CardBody>\r\n                    <ListPermintaan />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\n// Adding PropTypes for validation\r\nPermintaanMobil.propTypes = {\r\n    key: PropTypes.string,\r\n    // Add other props if necessary\r\n};\r\n\r\nexport default PermintaanMobil;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardBody, CardHeader, Alert } from \"reactstrap\";\r\nimport { Box, TextField, Autocomplete, Button, MenuItem } from \"@mui/material\";\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers';\r\nimport DataTable from 'react-data-table-component';\r\nimport PropTypes from 'prop-types';\r\nimport useAxios from \"../../hooks/useAxios\";\r\n\r\nconst TakeNBack = () => {\r\n    const api = useAxios();\r\n    const [employe, setEmploye] = useState(null);\r\n    const [employes, setEmployes] = useState([]);\r\n    const [sampai, setSampai] = useState(null);\r\n    const [mobil, setMobil] = useState('');\r\n    const [book, setBook] = useState('booking');\r\n    const [nobook, setNobook] = useState('');\r\n    const [keperluan, setKeperluan] = useState('');\r\n\r\n    const getKaryawan = () => {\r\n        api.get('api/employe/assignment-list?search=all').then(res => {\r\n            setEmployes(res.data.data);\r\n            console.log(res.data.data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getKaryawan();\r\n    }, []);\r\n\r\n\r\n    const data = [\r\n        { id: 1, namaKaryawan: 'John Doe', perjanjianPengembalian: '2023-12-01', namaMobil: 'Toyota Camry' },\r\n        { id: 2, namaKaryawan: 'Jane Smith', perjanjianPengembalian: '2023-11-15', namaMobil: 'Honda Civic' },\r\n        { id: 3, namaKaryawan: 'Alice Johnson', perjanjianPengembalian: '2023-12-10', namaMobil: 'Ford Mustang' },\r\n    ];\r\n\r\n    // Gaya tombol\r\n    const buttonStyle = {\r\n        padding: '5px 10px',\r\n        backgroundColor: '#007BFF',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n    };\r\n\r\n    // Kolom tabel\r\n    const columns = [\r\n        {\r\n            name: '',\r\n            cell: () => (\r\n                <button type=\"button\" style={buttonStyle}>Pengambalian</button>\r\n            ),\r\n            width: '150px',\r\n            button: true,\r\n            sortable: false,\r\n        },\r\n        {\r\n            name: 'Nama Karyawan',\r\n            selector: row => row.namaKaryawan,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Perjanjian Pengembalian',\r\n            selector: row => row.perjanjianPengembalian,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Nama Mobil',\r\n            selector: row => row.namaMobil,\r\n            sortable: true,\r\n        },\r\n    ];\r\n\r\n    // Pesan ketika data kosong\r\n    const noDataComponent = <div style={{ textAlign: 'center', padding: '20px' }}>Tidak ada data yang tersedia.</div>;\r\n\r\n    const [visible, setVisible] = React.useState(true);\r\n    const onDismiss = () => setVisible(false);\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* pengambilan Mobil */}\r\n            <Card>\r\n                <CardHeader><strong>Pengambilan Mobil</strong></CardHeader>\r\n                <CardBody>\r\n                    <Alert color=\"info\" isOpen={visible} toggle={onDismiss} fade={false}>\r\n                        Utamakan yang telah melakukan booking terlebih dahulu\r\n                    </Alert>\r\n                    <Box\r\n                        component=\"form\"\r\n                        sx={{\r\n                            '& .MuiTextField-root': { m: 1, width: '100%' },\r\n                            '& .MuiAutocomplete-root': { m: 1, width: '100%' },\r\n                            '& .MuiButton-root': { m: 1, width: '100%' },\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            width: '100%',\r\n                            margin: 'auto',\r\n                        }}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n\r\n                        <TextField\r\n                            style={{ width: '100%' }}\r\n                            variant=\"outlined\"\r\n                            value={book}\r\n                            onChange={(e) => setBook(e.target.value)}\r\n                            select\r\n                            label=\"Booking / No Booking\"\r\n                        >\r\n                            <MenuItem value=\"booking\">\r\n                                Booking\r\n                            </MenuItem>\r\n                            <MenuItem value=\"no-booking\">\r\n                                No Booking\r\n                            </MenuItem>\r\n\r\n                        </TextField>\r\n\r\n                        {book === 'booking' && (\r\n                            <>\r\n                                <TextField\r\n                                    style={{ width: '100%' }}\r\n                                    variant=\"outlined\"\r\n                                    value={nobook}\r\n                                    onChange={(e) => setNobook(e.target.value)}\r\n                                    select\r\n                                    label=\"Nomor Booking\"\r\n                                >\r\n                                    <MenuItem value=\"booking\">\r\n                                        B123B - WAHYUDIN - 17/02 08:00 s/d 17/02 10:00\r\n                                    </MenuItem>\r\n                                    <MenuItem value=\"no-booking\">\r\n                                        B143B - SAFRIAN - 17/02 08:00 s/d 17/02 10:00\r\n                                    </MenuItem>\r\n\r\n                                </TextField>\r\n\r\n                                <TextField\r\n                                    style={{ width: '100%' }}\r\n                                    variant=\"outlined\"\r\n                                    value={mobil}\r\n                                    onChange={(e) => setMobil(e.target.value)}\r\n                                    select\r\n                                    label=\"Unit Mobil\"\r\n                                >\r\n\r\n                                    <MenuItem value=\"bl1357at\">\r\n                                        Toyota Avanza BL 1357 AT\r\n                                    </MenuItem>\r\n\r\n                                </TextField>\r\n                            </>\r\n                        )}\r\n\r\n                        {book !== 'booking' && (<><TextField\r\n                            style={{ width: '100%' }}\r\n                            variant=\"outlined\"\r\n                            value={mobil}\r\n                            onChange={(e) => setMobil(e.target.value)}\r\n                            select\r\n                            label=\"Unit Mobil\"\r\n                        >\r\n\r\n                            <MenuItem value=\"bl1357at\">\r\n                                Toyota Avanza BL 1357 AT\r\n                            </MenuItem>\r\n\r\n                        </TextField>\r\n\r\n                            {employes.length > 0 && (\r\n                                <Autocomplete\r\n                                    style={{ marginLeft: -10 }}\r\n                                    disablePortal\r\n                                    id=\"combo-box-demo\"\r\n                                    options={employes || []}\r\n                                    value={employe}\r\n                                    onChange={(event, newValue) => {\r\n                                        if (typeof newValue === 'string') {\r\n                                            setEmploye({\r\n                                                label: newValue,\r\n                                            });\r\n                                        } else if (newValue && newValue.inputValue) {\r\n                                            setEmploye({\r\n                                                label: newValue.inputValue,\r\n                                            });\r\n                                        } else {\r\n                                            setEmploye(newValue);\r\n                                        }\r\n                                    }}\r\n                                    getOptionLabel={(option) => {\r\n                                        if (typeof option === 'string') {\r\n                                            return option;\r\n                                        }\r\n                                        if (option.inputValue) {\r\n                                            return option.inputValue;\r\n                                        }\r\n                                        return option.label;\r\n                                    }}\r\n                                    renderOption={(props, option) => {\r\n                                        const { key, ...otherProps } = props;\r\n                                        return <li key={key} {...otherProps}>{option.label}</li>;\r\n                                    }}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Nama Karyawan\" />}\r\n                                />\r\n                            )}\r\n\r\n                            <TextField\r\n                                required\r\n                                id=\"keperluan\"\r\n                                label=\"Keperluan\"\r\n                                variant=\"outlined\"\r\n                                value={keperluan}\r\n                                onChange={(event) => setKeperluan(event.target.value)}\r\n                            />\r\n\r\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                <DateTimePicker\r\n                                    renderInput={(params) => <TextField {...params} />}\r\n                                    label=\"Perkiraan Pengembalian\"\r\n                                    ampm={false}\r\n                                    value={sampai}\r\n                                    onChange={setSampai}\r\n                                    viewRenderers={{\r\n                                        hours: renderTimeViewClock,\r\n                                        minutes: renderTimeViewClock,\r\n                                    }}\r\n                                />\r\n                            </LocalizationProvider>\r\n                        </>)}\r\n\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size='large'>\r\n                            Simpan\r\n                        </Button>\r\n                    </Box>\r\n                </CardBody>\r\n            </Card>\r\n\r\n            {/* pengembalian Mobil */}\r\n            <Card>\r\n                <CardHeader><strong>Pengembalian Mobil</strong></CardHeader>\r\n                <CardBody>\r\n                    <DataTable\r\n                        columns={columns}\r\n                        data={data}\r\n                        noDataComponent={noDataComponent}\r\n                        pagination\r\n                        fixedHeader\r\n                        fixedHeaderScrollHeight=\"300px\"\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n};\r\nTakeNBack.propTypes = {\r\n    key: PropTypes.string,\r\n};\r\n\r\nexport default TakeNBack;","// Import necessary React and MUI components\r\nimport React, { useState, useEffect } from 'react';\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    Typography,\r\n} from '@mui/material';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport useAxios from '../../hooks/useAxios';\r\n\r\n// Define the PengisianBbm functional component\r\nconst PengisianBbm = () => {\r\n    // State hooks for form fields\r\n    const api = useAxios();\r\n    const [unitMobil, setUnitMobil] = useState('');\r\n    const [jenisBbm, setJenisBbm] = useState('');\r\n    const [jumlahBiaya, setJumlahBiaya] = useState('');\r\n    const [jumlahLiter, setJumlahLiter] = useState('');\r\n    const [tanggal, setTanggal] = useState(null);\r\n    const [employe, setEmploye] = useState(null);\r\n    const [employes, setEmployes] = useState([]);\r\n\r\n    // State hook for form validation\r\n    const [errors, setErrors] = useState({});\r\n\r\n    // Dummy options for Unit Mobil dropdown\r\n    const unitMobilOptions = [\r\n        'Toyota Avanza',\r\n        'Honda Brio',\r\n        'Daihatsu Xenia',\r\n        'Suzuki Ertiga',\r\n        'Mitsubishi Xpander',\r\n    ];\r\n\r\n    // Options for Jenis BBM dropdown with RON and jenis in lowercase\r\n    const jenisBbmOptions = [\r\n        { label: 'Solar (CN 48)', value: 'bio_solar', ron: '48', jenis: 'diesel' },\r\n        { label: 'Dexlite (CN 51)', value: 'dexlite', ron: '51', jenis: 'diesel' },\r\n        { label: 'Pertalite (RON 90)', value: 'pertalite', ron: '90', jenis: 'bensin' },\r\n        { label: 'Pertamax (RON 92)', value: 'pertamax', ron: '92', jenis: 'bensin' },\r\n        { label: 'Pertamax Green (RON 95)', value: 'pertamax_green', ron: '95', jenis: 'bensin' },\r\n        { label: 'Pertamax Turbo (RON 98)', value: 'pertamax_turbo', ron: '98', jenis: 'bensin' },\r\n        { label: 'Dex (CN 53)', value: 'dex', ron: '53', jenis: 'diesel' },\r\n    ];\r\n\r\n    // Function to handle form submission\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Basic validation\r\n        const validationErrors = {};\r\n        if (!unitMobil) validationErrors.unitMobil = 'Unit Mobil is required';\r\n        if (!jenisBbm) validationErrors.jenisBbm = 'Jenis BBM is required';\r\n        if (!jumlahBiaya || Number.isNaN(Number(jumlahBiaya)) || Number(jumlahBiaya) <= 0) {\r\n            validationErrors.jumlahBiaya = 'Jumlah Biaya must be a positive number';\r\n        }\r\n        if (!jumlahLiter || Number.isNaN(Number(jumlahLiter)) || Number(jumlahLiter) <= 0) {\r\n            validationErrors.jumlahLiter = 'Jumlah Liter must be a positive number';\r\n        }\r\n\r\n        // If there are validation errors, set them and return\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            setErrors(validationErrors);\r\n            return;\r\n        }\r\n\r\n        // Log form data to console if validation passes\r\n        console.log('Form Data Submitted:', {\r\n            unitMobil,\r\n            jenisBbm,\r\n            jumlahBiaya,\r\n            jumlahLiter,\r\n        });\r\n\r\n        // Optionally, reset form fields after submission\r\n        setUnitMobil('');\r\n        setJenisBbm('');\r\n        setJumlahBiaya('');\r\n        setJumlahLiter('');\r\n        setErrors({});\r\n    };\r\n\r\n    const getKaryawan = () => {\r\n        api.get('api/employe/assignment-list?search=all').then(res => {\r\n            setEmployes(res.data.data);\r\n            console.log(res.data.data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getKaryawan();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <Box\r\n                    component=\"form\"\r\n                    onSubmit={handleSubmit}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                    sx={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        gap: 2,\r\n                        margin: 'auto',\r\n                        padding: 2,\r\n                    }}\r\n                >\r\n\r\n\r\n                    {/* Unit Mobil Dropdown */}\r\n                    <FormControl fullWidth error={Boolean(errors.unitMobil)}>\r\n                        <InputLabel id=\"unit-mobil-label\">Unit Mobil</InputLabel>\r\n                        <Select\r\n                            labelId=\"unit-mobil-label\"\r\n                            id=\"unit-mobil\"\r\n                            value={unitMobil}\r\n                            onChange={(e) => setUnitMobil(e.target.value)}\r\n                            label=\"Unit Mobil\"\r\n                        >\r\n                            {unitMobilOptions.map((option) => (\r\n                                <MenuItem key={option} value={option}>\r\n                                    {option}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        {errors.unitMobil && <Typography color=\"error\">{errors.unitMobil}</Typography>}\r\n                    </FormControl>\r\n\r\n                    {/* Jenis BBM Dropdown */}\r\n                    <FormControl fullWidth error={Boolean(errors.jenisBbm)}>\r\n                        <InputLabel id=\"jenis-bbm-label\">Jenis BBM</InputLabel>\r\n                        <Select\r\n                            labelId=\"jenis-bbm-label\"\r\n                            id=\"jenis-bbm\"\r\n                            value={jenisBbm}\r\n                            onChange={(e) => setJenisBbm(e.target.value)}\r\n                            label=\"Jenis BBM\"\r\n                        >\r\n                            {jenisBbmOptions.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        {errors.jenisBbm && <Typography color=\"error\">{errors.jenisBbm}</Typography>}\r\n                    </FormControl>\r\n\r\n                    {/* Jumlah Biaya Numeric Input */}\r\n                    <TextField\r\n                        label=\"Jumlah Biaya (Rp)\"\r\n                        variant=\"outlined\"\r\n                        type=\"number\"\r\n                        value={jumlahBiaya}\r\n                        onChange={(e) => setJumlahBiaya(e.target.value)}\r\n                        error={Boolean(errors.jumlahBiaya)}\r\n                        helperText={errors.jumlahBiaya}\r\n                        fullWidth\r\n                    />\r\n\r\n                    {/* Jumlah Liter Numeric Input */}\r\n                    <TextField\r\n                        label=\"Jumlah Liter\"\r\n                        variant=\"outlined\"\r\n                        type=\"number\"\r\n                        value={jumlahLiter}\r\n                        onChange={(e) => setJumlahLiter(e.target.value)}\r\n                        error={Boolean(errors.jumlahLiter)}\r\n                        helperText={errors.jumlahLiter}\r\n                        fullWidth\r\n                    />\r\n\r\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                        <DateTimePicker\r\n                            renderInput={(params) => <TextField {...params} />}\r\n                            label=\"Tgl Pengisian\"\r\n                            ampm={false}\r\n                            value={tanggal}\r\n                            onChange={setTanggal}\r\n                            viewRenderers={{\r\n                                hours: renderTimeViewClock,\r\n                                minutes: renderTimeViewClock,\r\n                            }}\r\n                        />\r\n                    </LocalizationProvider>\r\n\r\n                    {employes.length > 0 && (\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            options={employes || []}\r\n                            value={employe}\r\n                            onChange={(event, newValue) => {\r\n                                if (typeof newValue === 'string') {\r\n                                    setEmploye({\r\n                                        label: newValue,\r\n                                    });\r\n                                } else if (newValue && newValue.inputValue) {\r\n                                    setEmploye({\r\n                                        label: newValue.inputValue,\r\n                                    });\r\n                                } else {\r\n                                    setEmploye(newValue);\r\n                                }\r\n                            }}\r\n                            getOptionLabel={(option) => {\r\n                                if (typeof option === 'string') {\r\n                                    return option;\r\n                                }\r\n                                if (option.inputValue) {\r\n                                    return option.inputValue;\r\n                                }\r\n                                return option.label;\r\n                            }}\r\n                            renderOption={(props, option) => {\r\n                                const { key, ...otherProps } = props;\r\n                                return <li key={key} {...otherProps}>{option.label}</li>;\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Pengisian oleh\" />}\r\n                        />\r\n                    )}\r\n                    {/* Submit Button */}\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </Box>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nPengisianBbm.propTypes = {\r\n    key: PropTypes.string,\r\n    // Add other props if necessary\r\n};\r\n\r\nexport default PengisianBbm;\r\n","import React, { useState } from \"react\";\r\nimport { Card, CardBody, CardHeader } from \"reactstrap\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { TextField, Box, Button, MenuItem, Typography, FormControl, InputLabel, Select } from \"@mui/material\";\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport useAxios from \"../../hooks/useAxios\";\r\n\r\n\r\nconst Setting = () => {\r\n\r\n    const api = useAxios();\r\n\r\n    const [mobils, setMobils] = useState([]);\r\n\r\n    const [brand, setBrand] = React.useState(\"\");\r\n    const [plat, setPlat] = React.useState(\"\");\r\n    const [status, setStatus] = React.useState(\"\");\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const getMobil = () => {\r\n        api.get('dapi/mobil/get').then(res => {\r\n            if (res.data.success) {\r\n                setMobils(res.data.data);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const validationErrors = {};\r\n        if (!brand) validationErrors.brand = 'Brand Mobil is required';\r\n        if (!plat) validationErrors.plat = 'Plat Mobil is required';\r\n        if (!status) validationErrors.status = 'Status Mobil is required';\r\n\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            setErrors(validationErrors);\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        await api.post('dapi/mobil/insert', { brand, plat, status }).then(res => {\r\n            if (res.data.success) {\r\n                alert('success', 'Data berhasil disimpan');\r\n                setBrand('');\r\n                setPlat('');\r\n                setStatus('');\r\n                getMobil();\r\n            } else {\r\n                alert('error', 'Data gagal disimpan');\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n            alert('error', 'Terjadi kesalahan saat menyimpan data');\r\n        });\r\n        setErrors({}); // Reset errors after submission\r\n    }\r\n\r\n    const handleChange = (id, st) => {\r\n        api.post(`dapi/mobil/update/${id}`, { status: st === 'aktif' ? 'non-aktif' : 'aktif' }).then(res => {\r\n            if (res.data.success) {\r\n                alert('success', 'Status berhasil diubah');\r\n                getMobil();\r\n            } else {\r\n                alert('error', 'Status gagal diubah');\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n            alert('error', 'Terjadi kesalahan saat mengubah status');\r\n        });\r\n    }\r\n\r\n    const del = (id) => {\r\n        api.post(`dapi/mobil/delete/${id}`).then(res => {\r\n            if (res.data.success) {\r\n                alert('success', 'Data berhasil dihapus');\r\n                getMobil();\r\n            } else {\r\n                alert('error', 'Data gagal dihapus');\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n            alert('error', 'Terjadi kesalahan saat menghapus data');\r\n        });\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        getMobil();\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            name: \"No\",\r\n            selector: (row, index) => index + 1,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: \"Brand Mobil\",\r\n            selector: (row) => row.brand,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: \"Plat Mobil\",\r\n            selector: (row) => row.plat,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: \"Status\",\r\n            selector: (row) => (\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={row.status === 'aktif'}\r\n                            onChange={() => handleChange(row.id, row.status)}\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                    label={row.status === 'aktif' ? 'Aktif' : 'Nonaktif'}\r\n                />\r\n            ),\r\n            // sortable: true,\r\n        },\r\n\r\n        {\r\n            name: \"Action\",\r\n            selector: (row) => (\r\n                <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        del(row.id);\r\n                    }}\r\n                >\r\n                    Hapus\r\n                </Button>\r\n            ),\r\n        }\r\n    ];\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <strong>Management Kendaraan Operasional</strong>\r\n                </CardHeader>\r\n                <CardBody>\r\n\r\n                    <Box\r\n                        component=\"form\"\r\n                        onSubmit={handleSubmit}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            gap: 2,\r\n                            margin: 'auto',\r\n                            padding: 2,\r\n                        }}\r\n                    >\r\n                        <TextField\r\n                            label=\"Merek Kendaraan\"\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            value={brand}\r\n                            onChange={(e) => setBrand(e.target.value)}\r\n                            error={Boolean(errors.brand)}\r\n                            helperText={errors.brand}\r\n                            fullWidth\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Plat Kendaraan\"\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            value={plat}\r\n                            onChange={(e) => setPlat(e.target.value)}\r\n                            error={Boolean(errors.plat)}\r\n                            helperText={errors.plat}\r\n                            fullWidth\r\n                        />\r\n\r\n                        <FormControl fullWidth error={Boolean(errors.status)}>\r\n                            <InputLabel id=\"unit-mobil-label\">Status</InputLabel>\r\n                            <Select\r\n                                labelId=\"unit-mobil-label\"\r\n                                id=\"unit-mobil\"\r\n                                value={status}\r\n                                onChange={(e) => setStatus(e.target.value)}\r\n                                label=\"Unit Mobil\"\r\n                            >\r\n\r\n                                <MenuItem value=\"aktif\">\r\n                                    Aktif\r\n                                </MenuItem>\r\n                                <MenuItem value=\"non-aktif\">\r\n                                    Non-Aktif\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                            {errors.status && <Typography color=\"error\">{errors.status}</Typography>}\r\n                        </FormControl>\r\n\r\n\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                            Tambah Data Mobil\r\n                        </Button>\r\n                    </Box>\r\n\r\n                    <DataTable\r\n                        className=\"mt-3\"\r\n                        columns={columns}\r\n                        data={mobils}\r\n                        pagination\r\n                        highlightOnHover\r\n                        pointerOnHover\r\n                        striped\r\n                        responsive\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Setting;","import React, { useState } from \"react\";\r\nimport { TabContext, TabList, TabPanel } from '@mui/lab';\r\nimport Tab from '@mui/material/Tab';\r\nimport Badge from '@mui/material/Badge';\r\nimport { Card, CardBody, CardHeader } from 'reactstrap';\r\nimport CarUsage from \"./CarUsage\";\r\nimport Grafik from \"./Grafik\";\r\nimport AvailableCar from \"./AvailableCar\";\r\nimport PermintaanMobil from \"./PermintaanMobil\";\r\nimport TakeNBack from \"./TakeNBack\";\r\nimport PengisianBbm from \"./PengisianBbm\";\r\nimport Setting from \"./Setting\";\r\n\r\n\r\nconst Mobil = () => {\r\n    const [value, setValue] = useState('1');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <>\r\n            <TabContext value={value}>\r\n                <Card className=\"mb-1\">\r\n                    <TabList\r\n                        onChange={handleChange}\r\n                        aria-label=\"lab API tabs example\"\r\n                        vertical=\"sm\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        <Tab\r\n                            label={\r\n                                <Badge\r\n                                    badgeContent={0}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    color=\"primary\"\r\n                                >\r\n                                    <strong>DASHBOARD</strong> &nbsp;&nbsp;\r\n                                </Badge>\r\n                            }\r\n                            value=\"1\"\r\n                        />\r\n                        <Tab\r\n                            label={\r\n                                <Badge\r\n                                    badgeContent={0}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    color=\"primary\"\r\n                                >\r\n                                    <strong>PERMINTAAN</strong> &nbsp;&nbsp;\r\n                                </Badge>\r\n                            }\r\n                            value=\"2\"\r\n                        />\r\n                        <Tab\r\n                            label={\r\n                                <Badge\r\n                                    badgeContent={0}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    color=\"primary\"\r\n                                >\r\n                                    <strong>PENGAMBILAN & PENGEMBALIAN</strong> &nbsp;&nbsp;\r\n                                </Badge>\r\n                            }\r\n                            value=\"3\"\r\n                        />\r\n                        <Tab\r\n                            label={\r\n                                <Badge\r\n                                    badgeContent={0}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    color=\"primary\"\r\n                                >\r\n                                    <strong>PENGISIAN BBM</strong> &nbsp;&nbsp;\r\n                                </Badge>\r\n                            }\r\n                            value=\"4\"\r\n                        />\r\n                        <Tab\r\n                            label={\r\n                                <Badge\r\n                                    badgeContent={0}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    color=\"primary\"\r\n                                >\r\n                                    <strong>SETTING</strong> &nbsp;&nbsp;\r\n                                </Badge>\r\n                            }\r\n                            value=\"5\"\r\n                        />\r\n                    </TabList>\r\n                </Card>\r\n\r\n                <TabPanel value=\"1\" className=\"ps-0 pe-0\">\r\n                    {/* Grafik BBM */}\r\n                    <Grafik />\r\n\r\n                    {/* Available Car */}\r\n                    <Card className=\"mt-4\">\r\n                        <CardHeader><strong>Mobil Operasional yang Tersedia</strong></CardHeader>\r\n                        <CardBody>\r\n                            <AvailableCar />\r\n                        </CardBody>\r\n                    </Card>\r\n\r\n                    {/* Table Car Usage */}\r\n                    <Card>\r\n                        <CardHeader><strong>Daftar Penggunaan Mobil</strong></CardHeader>\r\n                        <CardBody className=\"px-4\">\r\n                            <CarUsage />\r\n                        </CardBody>\r\n                    </Card>\r\n                </TabPanel>\r\n\r\n                <TabPanel value=\"2\" className=\"ps-0 pe-0\">\r\n                    <PermintaanMobil />\r\n                </TabPanel>\r\n\r\n                <TabPanel value=\"3\" className=\"ps-0 pe-0\">\r\n                    <TakeNBack />\r\n                </TabPanel>\r\n\r\n                <TabPanel value=\"4\" className=\"ps-0 pe-0\">\r\n                    <PengisianBbm />\r\n                </TabPanel>\r\n\r\n                <TabPanel value=\"5\" className=\"ps-0 pe-0\">\r\n                    <Setting/>\r\n                </TabPanel>\r\n\r\n            </TabContext>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Mobil;","import React from 'react';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport Mobil from './Mobil';\r\n\r\n\r\nconst Index = () => {\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <Mobil />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"names":["Toast","_jsx","Toaster","toastOptions","className","style","alert","type","msg","notify","toast","success","icon","error","BreadCrumbs","location","useLocation","firstUrl","pathname","split","secondUrl","_jsxs","_Fragment","children","concat","Breadcrumb","BreadcrumbItem","to","tag","Link","active","CarUsage","moment","items","id","group","title","start_time","end_time","bgColor","Timeline","groups","defaultTimeStart","add","defaultTimeEnd","headerLabelFormats","yearLong","yearShort","monthShort","monthMedium","monthLong","dayShort","dayLong","hourShort","hourMedium","hourLong","colorss","Grafik","state","React","series","data","options","chart","height","colors","plotOptions","bar","columnWidth","distributed","dataLabels","enabled","legend","show","xaxis","categories","labels","fontSize","selection","setSelection","useState","month","setMonth","year","setYear","startDate","setStartDate","endDate","setEndDate","RoundedSelect","styled","Select","borderRadius","backgroundColor","letterSpacing","border","Box","display","justifyContent","alignItems","fontWeight","color","value","onChange","event","target","displayEmpty","size","MenuItem","e","sx","mr","Array","from","length","_","i","TextField","label","InputLabelProps","shrink","ReactApexChart","carModels","name","sales","image","AvailableCar","carListRef","useRef","onClick","scrollLeft","current","ref","map","car","src","alt","scrollRight","namaKaryawan","keperluan","dari","sampai","perluSopir","columns","selector","row","sortable","Date","toLocaleString","ListPermintaan","DataTable","pagination","highlightOnHover","striped","PermintaanMobil","api","useAxios","setKeperluan","setDari","setSampai","employe","setEmploye","employes","setEmployes","visible","setVisible","useEffect","get","then","res","console","log","Card","CardBody","Alert","isOpen","toggle","onDismiss","fade","component","m","width","flexDirection","margin","noValidate","autoComplete","required","variant","Autocomplete","marginLeft","disablePortal","newValue","inputValue","getOptionLabel","option","renderOption","props","key","otherProps","_objectWithoutProperties","_excluded","_objectSpread","renderInput","params","LocalizationProvider","dateAdapter","AdapterDayjs","DateTimePicker","ampm","viewRenderers","hours","renderTimeViewClock","minutes","Button","TakeNBack","mobil","setMobil","book","setBook","nobook","setNobook","buttonStyle","padding","cursor","cell","button","perjanjianPengembalian","namaMobil","noDataComponent","textAlign","CardHeader","select","fixedHeader","fixedHeaderScrollHeight","PengisianBbm","unitMobil","setUnitMobil","jenisBbm","setJenisBbm","jumlahBiaya","setJumlahBiaya","jumlahLiter","setJumlahLiter","tanggal","setTanggal","errors","setErrors","onSubmit","preventDefault","validationErrors","Number","isNaN","Object","keys","gap","FormControl","fullWidth","Boolean","InputLabel","labelId","Typography","ron","jenis","helperText","Setting","mobils","setMobils","brand","setBrand","plat","setPlat","status","setStatus","getMobil","catch","err","index","FormControlLabel","control","Switch","checked","handleChange","st","post","del","async","pointerOnHover","responsive","Mobil","setValue","TabContext","TabList","vertical","scrollButtons","Tab","Badge","badgeContent","anchorOrigin","horizontal","TabPanel","Index"],"sourceRoot":""}