{"version":3,"file":"static/js/6298.1e584e3f.chunk.js","mappings":"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","sources":["components/atoms/circularPercentage/CircularPercentage.js","pages/projects/PDFFile.js","pages/projects/OverviewTab.js","pages/projects/TaskForm.js","pages/projects/TaskFormAddSub.js","pages/projects/BoardTask.js","pages/projects/BoardToDo.js","pages/projects/BoardInProgress.js","pages/projects/BoardDone.js","pages/projects/BoardTab.js","components/roundedTable/RoundedTable.js","pages/projects/MemberTab.js","pages/projects/FileTab.js","pages/projects/ReviewTab.js","pages/projects/HandoverTab.js","utils/countTaskProgress.js","pages/projects/ActivityTab.js","pages/projects/ReviewBastTab.js","pages/projects/ProjectDetailTab.js","pages/projects/EditProjectModal.js","pages/projects/ProjectNav.js","context/TaskContext.js","pages/projects/ProjectDetail.js","utils/IndoDate.js","utils/isExpired.js","utils/rupiah.js"],"sourcesContent":["import React from 'react';\r\nimport './CircularPercentage.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CircularPercentage = ({ data, color }) => {\r\n  return (\r\n    <div className=\"flex-wrapper\">\r\n      <div className=\"single-chart\">\r\n        <svg\r\n          viewBox=\"0 0 36 36\"\r\n          className={`circular-chart ${data === 100 ? 'green' : data !== 100 ? 'blue' : color}`}\r\n        >\r\n          <path\r\n            className=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            className=\"circle\"\r\n            strokeDasharray={`${data}, 100`}\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          {data === 100 ? (\r\n            <text x=\"18\" y=\"22.35\" className=\"percentage\" style={{ fontSize: '14px' }}>\r\n              ✔\r\n            </text>\r\n          ) : (\r\n            <text x=\"18\" y=\"22.35\" className=\"percentage\">\r\n              {data}%\r\n            </text>\r\n          )}\r\n        </svg>\r\n      </div>\r\n\r\n      {/* <div class=\"single-chart\">\r\n        <svg viewBox=\"0 0 36 36\" class=\"circular-chart green\">\r\n          <path\r\n            class=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            class=\"circle\"\r\n            stroke-dasharray=\"60, 100\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <text x=\"18\" y=\"20.35\" class=\"percentage\">\r\n            60%\r\n          </text>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"single-chart\">\r\n        <svg viewBox=\"0 0 36 36\" class=\"circular-chart blue\">\r\n          <path\r\n            class=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            class=\"circle\"\r\n            stroke-dasharray=\"90, 100\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <text x=\"18\" y=\"20.35\" class=\"percentage\">\r\n            90%\r\n          </text>\r\n        </svg>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nCircularPercentage.propTypes = {\r\n  data: PropTypes.number,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default CircularPercentage;\r\n","import React, { Fragment } from 'react';\r\nimport { Page, Text, Document, StyleSheet, View } from '@react-pdf/renderer';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 10,\r\n    textAlign: 'center',\r\n  },\r\n  text: {\r\n    margin: 10,\r\n    fontSize: 10,\r\n    textAlign: 'justify',\r\n  },\r\n  image: {\r\n    marginVertical: 4,\r\n    marginHorizontal: 15,\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  header: {\r\n    fontSize: 10,\r\n    marginBottom: 5,\r\n    textAlign: 'left',\r\n    color: '#3f3f3f',\r\n    fontWeight: 'bold',\r\n  },\r\n  pageNumber: {\r\n    position: 'absolute',\r\n    fontSize: 10,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n  printAt: {\r\n    position: 'absolute',\r\n    fontSize: 8,\r\n    bottom: 30,\r\n    left: 35,\r\n    right: 0,\r\n    textAlign: 'left',\r\n    color: 'grey',\r\n  },\r\n  table: {\r\n    display: 'table',\r\n    width: 'auto',\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderRightWidth: 0,\r\n    borderBottomWidth: 0,\r\n    color: '#3f3f3f',\r\n  },\r\n  tableRow: {\r\n    margin: 'auto',\r\n    flexDirection: 'row',\r\n  },\r\n  tableCol: {\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderLeftWidth: 0,\r\n    borderTopWidth: 0,\r\n  },\r\n  tableCell: {\r\n    // margin: 'auto',\r\n    marginTop: 3,\r\n    marginBottom: 3,\r\n    marginLeft: 3,\r\n    marginRight: 3,\r\n    fontSize: 10,\r\n  },\r\n});\r\n\r\nconst today = () => {\r\n  const currentDate = new Date();\r\n  return `${currentDate.toDateString()}, ${currentDate.toLocaleString().split(',')[1]}`;\r\n};\r\n\r\nconst PDFFile = ({ projectTitle, data }) => {\r\n  const pageColor = '#fff';\r\n\r\n  return (\r\n    <Document>\r\n      <Page style={{ ...styles.body, backgroundColor: pageColor }}>\r\n        <Text style={styles.header} fixed>\r\n          Project : {projectTitle?.project_name}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Partner : {projectTitle?.partner}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Division : {projectTitle?.division}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Phase : {projectTitle?.phase}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Schema : {projectTitle?.schema === 'jo' ? 'Join Operational' : 'Join Venture'}\r\n        </Text>\r\n        <View style={styles.table}>\r\n          <View style={styles.tableRow}>\r\n            <View style={{ ...styles.tableCol, width: '5%' }}>\r\n              <Text style={styles.tableCell}>No.</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '35%' }}>\r\n              <Text style={styles.tableCell}>Task Title</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '15%' }}>\r\n              <Text style={styles.tableCell}>Status</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '15%' }}>\r\n              <Text style={styles.tableCell}>Deadline</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '30%' }}>\r\n              <Text style={styles.tableCell}>PIC</Text>\r\n            </View>\r\n          </View>\r\n          {data?.map((item, i) => (\r\n            <Fragment key={item.task_id}>\r\n              <View style={styles.tableRow}>\r\n                <View style={{ ...styles.tableCol, width: '5%' }}>\r\n                  <Text style={{ ...styles.tableCell, textAlign: 'center' }}>{i + 1}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '35%' }}>\r\n                  <Text style={styles.tableCell}>{item.task_title}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                  <Text style={{ ...styles.tableCell, fontSize: '10px' }}>\r\n                    {item.status === 0\r\n                      ? 'To do'\r\n                      : item.status === 1\r\n                      ? 'In progress'\r\n                      : item.status === 2\r\n                      ? 'Under review'\r\n                      : item.status === 3\r\n                      ? 'Approved'\r\n                      : 'Revision'}\r\n                  </Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                  <Text style={styles.tableCell}>{item.end_date}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '30%' }}>\r\n                  {item.pics?.map((p) => (\r\n                    <Text style={styles.tableCell} key={p.id}>\r\n                      {p.first_name}\r\n                    </Text>\r\n                  ))}\r\n                </View>\r\n              </View>\r\n              {item.level_2?.map((st) => (\r\n                <View style={styles.tableRow} key={st.task_id}>\r\n                  <View style={{ ...styles.tableCol, width: '5%' }}>\r\n                    <Text style={styles.tableCell}></Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '35%' }}>\r\n                    <Text style={styles.tableCell}>{st.task_title}</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                    <Text style={styles.tableCell}>-</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                    <Text style={styles.tableCell}>{st.end_date}</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '30%' }}>\r\n                    {st.pics?.map((p) => (\r\n                      <Text style={styles.tableCell} key={p.id}>\r\n                        {p.first_name}\r\n                      </Text>\r\n                    ))}\r\n                  </View>\r\n                </View>\r\n              ))}\r\n            </Fragment>\r\n          ))}\r\n        </View>\r\n        <Text\r\n          style={styles.pageNumber}\r\n          render={({ pageNumber, totalPages }) => `${pageNumber} / ${totalPages}`}\r\n        />\r\n        <Text style={styles.printAt} render={today} />\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nPDFFile.propTypes = {\r\n  projectTitle: PropTypes.object,\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default PDFFile;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Progress,\r\n  Row,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport IndoDate from '../../utils/IndoDate';\r\nimport rupiah from '../../utils/rupiah';\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst remaininDays = (endDate) => {\r\n  const todayDate = new Date();\r\n\r\n  const todayToLocalString = todayDate.toLocaleString();\r\n\r\n  const todayBad = todayToLocalString.split(',')[0];\r\n\r\n  const day = todayBad.split('/')[1];\r\n  const month = todayBad.split('/')[0];\r\n  const year = todayBad.split('/')[2];\r\n\r\n  const todayMerge = `${year}-${month}-${day}`;\r\n\r\n  const today = new Date(todayMerge);\r\n\r\n  const deadline = new Date(endDate);\r\n\r\n  const diff = deadline.getTime() - today.getTime();\r\n\r\n  const result = diff / (1000 * 3600 * 24);\r\n\r\n  return result;\r\n};\r\n\r\nconst OverviewTab = () => {\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const [history, setHistory] = useState();\r\n  const [modal, setModal] = useState(false);\r\n  const [newPic, setNewPic] = useState();\r\n  const [listEmployee, setListEmploye] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [bst, setBst] = useState([]);\r\n  const [activePhase, setActivePhase] = useState(undefined);\r\n  const [selectedSchema, setSelectedSchema] = useState('');\r\n  const [isBusiness, setIsBusiness] = useState();\r\n  const [partnerOptions, setPartnerOptions] = useState([]);\r\n  const [selectedPartner, setSelectedPartner] = useState(undefined);\r\n  const [progress, setProgress] = useState(0);\r\n  const [taskByStatus, setTaskByStatus] = useState({\r\n    todo: 0,\r\n    inprogress: 0,\r\n    underReview: 0,\r\n    done: 0,\r\n  });\r\n  const api = useAxios();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['overview'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const todofFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 0 || parseInt(task.status, 10) === 4;\r\n    });\r\n\r\n    const inProgressfFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 1;\r\n    });\r\n\r\n    const doneFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 2 || parseInt(task.status, 10) === 3;\r\n    });\r\n\r\n    const underReviewFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 2;\r\n    });\r\n\r\n    setTaskByStatus({\r\n      todo: todofFiltered?.length,\r\n      inprogress: inProgressfFiltered?.length,\r\n      underReview: underReviewFiltered?.length,\r\n      done: doneFiltered?.length,\r\n    });\r\n\r\n    setActivePhase(data?.current_stage?.phase_id);\r\n    if (data?.category === 'business') {\r\n      setIsBusiness(true);\r\n    } else {\r\n      setIsBusiness(false);\r\n    }\r\n\r\n    async function fetchProgress() {\r\n      await api\r\n        .post('api/project/progress/collection', { ids: [projectId] })\r\n        .then((res) => {\r\n          setProgress(res.data.data[0]?.progress);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchProgress();\r\n  }, [data]);\r\n\r\n  const fetsHistory = async () => {\r\n    await api\r\n      .get(`api/project/${projectId}/history`)\r\n      .then((res) => setHistory(res.data.data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetsHistory();\r\n  }, [projectId]);\r\n\r\n  useEffect(() => {\r\n    async function fetchEmployees() {\r\n      await api\r\n        .get(`api/employe/assignment-list`)\r\n        .then((res) => setListEmploye(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    await api\r\n      .post(\r\n        `api/project/handover`,\r\n        {\r\n          project_id: projectId,\r\n          new_pic: newPic.value,\r\n          file: bst,\r\n          // jika fase projek adalah planning\r\n          schema: activePhase === 2 ? selectedSchema : '',\r\n          partner: activePhase === 2 ? selectedPartner : '',\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        },\r\n      )\r\n      .then(() => {\r\n        fetsHistory();\r\n        alert('success', 'BAST is under review');\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setLoading(false);\r\n    setModal(false);\r\n  };\r\n\r\n  const allTaskPermission = ['Manager', 'Director'];\r\n\r\n  useEffect(() => {\r\n    async function fetchPartnerOptions() {\r\n      await api\r\n        .get(`api/project/partner/options`)\r\n        .then((res) => setPartnerOptions(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n    fetchPartnerOptions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Col lg=\"12\">\r\n          <Card>\r\n            <CardBody>Loading...</CardBody>\r\n          </Card>\r\n        </Col>\r\n      ) : error ? (\r\n        'Soemthing went wrong.'\r\n      ) : (\r\n        <Row>\r\n          <Col lg=\"8\">\r\n            <Card className=\"rounded-3 mb-3\">\r\n              <CardBody>\r\n                <div>\r\n                  <CardTitle tag=\"h5\" className=\"text-dark fw-bold\">\r\n                    Description\r\n                  </CardTitle>\r\n                </div>\r\n                <div className=\"ms-auto mt-3 mt-md-0\">\r\n                  {isBusiness ? data.current_stage?.desc : data?.goals}\r\n                </div>\r\n                <div className=\"d-flex justify-content-between mt-3\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    <small className=\"text-muted\">Level</small>\r\n                    <span className=\"text-dark\">{data.level_desc}</span>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column col-4\">\r\n                    <small className=\"text-muted\">Base</small>\r\n                    <div className=\"d-flex\">\r\n                      <span className=\"wtext-dark\">\r\n                        {data?.base_description.trim().length > 25\r\n                          ? `${data?.base_description.substring(0, 25)}...`\r\n                          : data?.base_description}\r\n                      </span>\r\n                      <abbr title={data?.base_description}>\r\n                        <i\r\n                          className=\"me-2 bi-info-circle-fill\"\r\n                          style={{ fontSize: '14px', marginLeft: '4px' }}\r\n                        ></i>\r\n                      </abbr>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column\">\r\n                    <small className=\"text-muted\">Start date</small>\r\n                    <span className=\"text-dark\">\r\n                      {IndoDate(data?.current_stage && data.current_stage?.start_date)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column\">\r\n                    <small className=\"text-muted\">Deadline</small>\r\n                    <span className=\"text-dark\">\r\n                      {IndoDate(data?.current_stage !== null && data.current_stage?.end_date)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between bg-light align-items-end p-2 mt-3\"\r\n                  style={{ borderRadius: '8px' }}\r\n                >\r\n                  <div className=\"d-flex gap-3 align-items-center\">\r\n                    <img\r\n                      src={user1}\r\n                      className=\"rounded-circle\"\r\n                      alt=\"avatar\"\r\n                      width=\"45\"\r\n                      height=\"45\"\r\n                    />\r\n                    <div className=\"d-flex flex-column\">\r\n                      <small className=\"text-muted\">PIC</small>\r\n                      <span className=\"text-dark fw-bold\">{data.pic_active.first_name}</span>\r\n                      {/* <small className=\"text-muted\">Divisi Teknologi & Informasi</small> */}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-3\">\r\n                    <span className=\"badge text-info bg-light-info rounded-pill d-inline-block\">\r\n                      Est. Cost <span className=\"fw-bold\">{rupiah(data.estimated_cost)}</span>\r\n                    </span>\r\n                    <span className=\"badge text-info bg-light-info rounded-pill d-inline-block\">\r\n                      Est. Income <span className=\"fw-bold\">{rupiah(data.estimated_income)}</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n            <Card className=\"rounded-3\">\r\n              <CardBody>\r\n                <div>\r\n                  <CardTitle tag=\"h5\" className=\"text-dark fw-bold\">\r\n                    Project Histories\r\n                  </CardTitle>\r\n                </div>\r\n                <div className=\"d-flex flex-column gap-2\">\r\n                  {!history\r\n                    ? 'Loading...'\r\n                    : history?.map((h) => (\r\n                        <div\r\n                          key={h.history_id}\r\n                          className=\"col-md-12 d-flex justify-content-between align-items-center py-2 px-3\"\r\n                          style={{ backgroundColor: '#F3F2F2', borderRadius: '8px' }}\r\n                        >\r\n                          <div className=\"col-md-4 d-flex flex-column\">\r\n                            <span className=\"text-dark\">{h.organization_name}</span>\r\n                            <small>{h.history_desc}</small>\r\n                            {auth?.user?.roles.find((role) => allTaskPermission.includes(role)) && (\r\n                              <Link\r\n                                to={`/projects/details/${projectId}?div=${h.organization_id}&to=activities`}\r\n                                style={{ textDecoration: 'none' }}\r\n                              >\r\n                                See all task\r\n                              </Link>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"col-md-2\">\r\n                            <span\r\n                              className={`badge bg-light-${\r\n                                h.status === 'handover' && h.active === 0\r\n                                  ? 'danger text-danger'\r\n                                  : h.status === 'handover'\r\n                                  ? 'success text-success'\r\n                                  : h.status === 'review'\r\n                                  ? 'danger text-danger'\r\n                                  : 'primary text-primary'\r\n                              } rounded-pill d-inline-block fw-bold`}\r\n                            >\r\n                              {h.status === 'handover' && h.active === 0\r\n                                ? 'waiting for approval'\r\n                                : (h.status === 'handover' && h.active === 1) || h.active === 1\r\n                                ? 'active'\r\n                                : h.status}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"col-md-3 d-flex flex-column\">\r\n                            <small>{newDate(h.created_at)}</small>\r\n                          </div>\r\n                          <div className=\"col-md-1 d-flex justify-content-end\">\r\n                            <img\r\n                              id={`tooltip-${h.history_id}`}\r\n                              src={h.img || user1}\r\n                              className=\"rounded-circle\"\r\n                              alt=\"avatar\"\r\n                              width=\"35\"\r\n                              height=\"35\"\r\n                            />\r\n                            <TooltipHover title={h.first_name} id={h.history_id.toString()} />\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"4\">\r\n            <Card className=\"rounded-3 mb-3\">\r\n              <CardBody>\r\n                <CardTitle tag=\"h5\" className=\"d-flex justify-content-between fw-bold\">\r\n                  Project Active\r\n                  <span className=\"text-success fw-bold\">{progress.toFixed()}%</span>\r\n                </CardTitle>\r\n                <Progress\r\n                  className=\"\"\r\n                  color=\"success\"\r\n                  value={progress.toFixed()}\r\n                  style={{ height: '15px' }}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n            <Card className=\"rounded-3\">\r\n              <CardBody>\r\n                <div className=\"overall-process\">\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Remaining days</h6>\r\n                      <span className=\"text-danger\">\r\n                        {remaininDays(\r\n                          data?.current_stage !== null && data.current_stage?.end_date,\r\n                        ).toFixed()}\r\n                      </span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"timer\"></MaterialIcon>\r\n                  </div>\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Task Todo</h6>\r\n                      <span>{taskByStatus?.todo}</span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"schedule\"></MaterialIcon>\r\n                  </div>\r\n                </div>\r\n                <div className=\"overall-process\">\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Task In Progress</h6>\r\n                      <span>{taskByStatus?.inprogress}</span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"play_circle_outline\"></MaterialIcon>\r\n                  </div>\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Task Done</h6>\r\n                      <span>{taskByStatus?.done}</span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"task_alt\"></MaterialIcon>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n            {isBusiness &&\r\n              auth.user.roles.includes('Manager') &&\r\n              auth.user.employe_id === data?.pic_active?.employe_id && (\r\n                <Card>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"info\"\r\n                    disabled={\r\n                      progress !== 100 ||\r\n                      taskByStatus?.underReview !== 0 ||\r\n                      taskByStatus?.todo !== 0 ||\r\n                      taskByStatus?.inprogress !== 0\r\n                    }\r\n                    outline\r\n                    onClick={toggle.bind(null)}\r\n                  >\r\n                    Handover Project\r\n                  </Button>\r\n                </Card>\r\n              )}\r\n            {/* <Card>\r\n          <CardBody>\r\n            <CardTitle tag=\"h4\">Recent Tasks</CardTitle>\r\n            <div className=\"d-flex flex-column gap-2\">\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-muted\">Jaka joined the project</span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    1 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-dark\">Doni comment on your task </span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    1 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-muted\">Lexa uploaded the file</span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    2 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-dark\">Charlie assign a new task to you</span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    2 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardBody>\r\n        </Card> */}\r\n          </Col>\r\n          <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n            <ModalHeader toggle={toggle.bind(null)}>Handover Project</ModalHeader>\r\n            <form onSubmit={handleSubmit}>\r\n              <ModalBody>\r\n                <FormGroup>\r\n                  <Label>Option</Label>\r\n                  <Input type=\"select\" id=\"base_id\" name=\"base_id\" defaultValue=\"a\">\r\n                    <option value=\"a\" disabled>\r\n                      Select\r\n                    </option>\r\n                    <option value=\"\">Hand Over</option>\r\n                    <option value=\"\">Done</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {/* current stage is Planning */}\r\n                {activePhase === 2 && (\r\n                  <>\r\n                    {data?.current_stage?.partner === null && (\r\n                      <FormGroup>\r\n                        <Label for=\"partner\">Partner</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          id=\"partner\"\r\n                          name=\"partner\"\r\n                          defaultValue=\"pa\"\r\n                          onChange={(e) => setSelectedPartner(e.target.value)}\r\n                        >\r\n                          <option disabled value=\"pa\">\r\n                            - Select -\r\n                          </option>\r\n                          {partnerOptions.length > 0 &&\r\n                            partnerOptions.map((p) => (\r\n                              <option key={p.id} value={p.id}>\r\n                                {p.name}\r\n                              </option>\r\n                            ))}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    )}\r\n                    <FormGroup>\r\n                      <Label>Schema</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        id=\"base_id\"\r\n                        name=\"base_id\"\r\n                        defaultValue=\"a\"\r\n                        onChange={(e) => setSelectedSchema(e.target.value)}\r\n                      >\r\n                        <option value=\"a\" disabled>\r\n                          Select\r\n                        </option>\r\n                        <option value=\"jo\">JO</option>\r\n                        <option value=\"jv\">JV</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </>\r\n                )}\r\n                {/* current stage is Planning */}\r\n                <FormGroup>\r\n                  <Label>PIC</Label>\r\n                  <Select\r\n                    components={animatedComponents}\r\n                    options={listEmployee}\r\n                    onChange={(choice) => setNewPic(choice)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"bst\">BAST</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"file\"\r\n                      name=\"file\"\r\n                      id=\"bst\"\r\n                      onChange={(e) => setBst(e.target.files)}\r\n                    />\r\n                  </FormGroup>\r\n                </FormGroup>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"info\"\r\n                  disabled={loading}\r\n                  className=\"d-flex gap-1 align-items-center\"\r\n                >\r\n                  {loading ? (\r\n                    <>\r\n                      <Spinner className=\"me-2\" size=\"sm\" color=\"light\" />\r\n                      Sending\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <MaterialIcon icon=\"send\" style={{ fontSize: '20px' }} />\r\n                      Send\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </ModalFooter>\r\n            </form>\r\n          </Modal>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OverviewTab;\r\n","import MaterialIcon from '@material/react-material-icon';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Input, Modal, ModalBody, ModalHeader, Spinner } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './TaskForm.scss';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useAxios from '../../hooks/useAxios';\r\n\r\nconst TaskForm = (props) => {\r\n  const { auth } = useAuth();\r\n  const { projectId, setNewTaskOpen, setAddSubtaskOpen, refetch, type, taskId, title, name } =\r\n    props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [task, setTask] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const [assignedEmployees, setAssignedEmployees] = useState([]);\r\n  const [listEmployee, setListEmploye] = useState();\r\n  // const [files, setFiles] = useState([]);\r\n\r\n  const animatedComponents = makeAnimated();\r\n  const navigate = useNavigate();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const api = useAxios();\r\n\r\n  useEffect(() => {\r\n    async function fetchEmployees() {\r\n      await api\r\n        .get(`api/employe/assignment-list?search=${name}`)\r\n        .then((res) => {\r\n          setListEmploye(res.data.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchEmployees();\r\n\r\n    setAssignedEmployees([\r\n      {\r\n        value: auth.user.employe_id,\r\n        label: auth.user.first_name,\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setTask((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const assigneModal = () => {\r\n    setModal(true);\r\n  };\r\n\r\n  const closeForm = () => {\r\n    if (type === 1) {\r\n      setNewTaskOpen(false);\r\n    } else {\r\n      setAddSubtaskOpen(undefined);\r\n    }\r\n  };\r\n\r\n  const taskSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    if (assignedEmployees?.length > 0) {\r\n      task.project_id = projectId;\r\n      task.task_pic = assignedEmployees;\r\n      // eslint-disable-next-line prefer-destructuring\r\n      // task.files = files;\r\n\r\n      if (type === 2) {\r\n        task.task_parent = taskId;\r\n      }\r\n\r\n      await api\r\n        .post('api/task', task, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        })\r\n        .then(() => {\r\n          if (auth?.user.roles.includes('Manager')) {\r\n            const arrayId = [];\r\n            assignedEmployees.map((em) => arrayId.push(em.value));\r\n            if (!arrayId.includes(auth?.user.employe_id)) {\r\n              navigate('?to=activities');\r\n            }\r\n          } else {\r\n            navigate('');\r\n          }\r\n          alert('create', 'New task has been created.');\r\n        })\r\n        .catch(() => alert('error', 'New task failed to save'));\r\n      refetch();\r\n      closeForm();\r\n    } else {\r\n      alert('error', 'Assignment cannot be empty');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"task-form-overlay\" onClick={closeForm} />\r\n\r\n      <form onSubmit={taskSubmit} style={{ width: '100%' }} encType=\"multipart/form-data\">\r\n        <div className=\"new-task rounded-3\">\r\n          <div className=\"body\">\r\n            <div className=\"input\">\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"task_title\"\r\n                placeholder={`${title}...`}\r\n                required\r\n                onChange={handleChange}\r\n                rows=\"4\"\r\n                value={task?.task_title || ''}\r\n                style={{ fontSize: '13px' }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex gap-3 justify-content-between\">\r\n            <div className=\"d-flex gap-0 w-75\">\r\n              <div className=\"d-flex align-items-center w-50\">\r\n                <span className=\"datepicker-toggle\">\r\n                  <span className=\"datepicker-toggle-button\">\r\n                    <MaterialIcon icon=\"calendar_month\" />\r\n                  </span>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"start_date\"\r\n                    className=\"datepicker-input\"\r\n                    required\r\n                    onChange={handleChange}\r\n                  />\r\n                </span>\r\n                <div className=\"d-flex flex-column\">\r\n                  <small className=\"text-muted\" style={{ fontSize: '12px' }}>\r\n                    Start date\r\n                  </small>\r\n                  <small className=\"text-dark\" style={{ marginTop: '-7px' }}>\r\n                    {task.start_date}\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center w-50\">\r\n                <span className=\"datepicker-toggle\">\r\n                  <span className=\"datepicker-toggle-button\">\r\n                    <MaterialIcon icon=\"calendar_month\" />\r\n                  </span>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"end_date\"\r\n                    name=\"end_date\"\r\n                    className=\"datepicker-input\"\r\n                    required\r\n                    onChange={handleChange}\r\n                  />\r\n                </span>\r\n                <div className=\"d-flex flex-column\">\r\n                  <small htmlFor=\"end_date\" className=\"text-muted\" style={{ fontSize: '12px' }}>\r\n                    Due date\r\n                  </small>\r\n                  <small className=\"text-dark\" style={{ marginTop: '-7px' }}>\r\n                    {task.end_date}\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button type=\"button\" className=\"btn-assigne\" id=\"tooltip-2\" onClick={assigneModal}>\r\n                <i className=\"bi-person-plus-fill\"></i>\r\n                <span>{assignedEmployees?.length || 0}</span>\r\n              </button>\r\n              <TooltipHover title=\"Assigne\" id=\"2\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"footer mt-2\">\r\n            <div className=\"option\">\r\n              {/* <div className=\"attach\">\r\n                <Label for=\"attach\">\r\n                  <MaterialIcon icon=\"attach_file\" className=\"btn-icon\" />\r\n                </Label>\r\n                <input type=\"file\" id=\"attach\" hidden onChange={(e) => setFiles(e.target.files)} />\r\n              </div> */}\r\n            </div>\r\n            <div className=\"action\">\r\n              <Button type=\"button\" size=\"sm\" color=\"light\" disabled={loading} onClick={closeForm}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"sm\"\r\n                className=\"d-flex gap-2 align-items-center\"\r\n                disabled={loading}\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <Spinner size=\"sm\" />\r\n                    Loading...\r\n                  </>\r\n                ) : (\r\n                  'Save'\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>Assign to</ModalHeader>\r\n        <ModalBody>\r\n          <Select\r\n            // closeMenuOnSelect={false}\r\n            components={animatedComponents}\r\n            isMulti\r\n            defaultValue={assignedEmployees}\r\n            options={listEmployee}\r\n            onChange={(choice) => setAssignedEmployees(choice)}\r\n          />\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nTaskForm.propTypes = {\r\n  projectId: PropTypes.string,\r\n  setNewTaskOpen: PropTypes.func,\r\n  setAddSubtaskOpen: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  type: PropTypes.number,\r\n  taskId: PropTypes.number,\r\n  title: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { Button, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport useAuth from '../../hooks/useAuth';\r\n// import useAuth from '../../hooks/useAuth';\r\n\r\nconst TaskFormAddSub = ({\r\n  itemValue,\r\n  setIsAddingItem,\r\n  setShowAddSub,\r\n  selectedActivityId,\r\n  setSelectedActivityId,\r\n  setItemValue,\r\n  refetch,\r\n}) => {\r\n  const { auth } = useAuth();\r\n  const [modal, setModal] = useState(false);\r\n  const [assignedEmployees, setAssignedEmployees] = useState({});\r\n  const [listEmployee, setListEmploye] = useState();\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const api = useAxios();\r\n\r\n  useEffect(() => {\r\n    async function fetchEmployees() {\r\n      await api\r\n        .get(`api/employe/assignment-list?search=subordinate`)\r\n        .then((res) => {\r\n          setListEmploye(res.data.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchEmployees();\r\n\r\n    setAssignedEmployees({\r\n      value: auth?.user.employe_id,\r\n      label: auth?.user.first_name,\r\n    });\r\n  }, []);\r\n\r\n  const handleAddItem = async () => {\r\n    if (itemValue === '') {\r\n      alert('error', 'Field cannot be empty');\r\n    } else if (Object.keys(assignedEmployees)?.length === 0) {\r\n      alert('error', 'Please select an employee');\r\n    } else {\r\n      setIsAddingItem(true);\r\n\r\n      const dataSub = {\r\n        sub: [\r\n          {\r\n            sub: itemValue,\r\n            status: 'created',\r\n            employe_id: assignedEmployees?.value,\r\n          },\r\n        ],\r\n      };\r\n\r\n      await api\r\n        .patch(`api/task/${selectedActivityId}/activity/add-sub`, dataSub)\r\n        .then(() => {\r\n          refetch();\r\n        })\r\n        .catch(() => alert('error', 'Action failed'));\r\n      setSelectedActivityId();\r\n      setShowAddSub(false);\r\n      setIsAddingItem(false);\r\n      setItemValue({});\r\n      setAssignedEmployees({});\r\n    }\r\n  };\r\n\r\n  //   const handleChange = (e) => {\r\n  //     setItemValue(e);\r\n  //     // if (e.key === 'Enter') {\r\n  //     //   e.preventDefault();\r\n  //     //   handleAddItem(e);\r\n  //     // }\r\n  //   };\r\n\r\n  const assigneModal = (val) => {\r\n    setModal(val);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-wrap\">\r\n      <div className=\"form-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Sub Activity...\"\r\n          //   onKeyDown={(e) => handleChange(e)}\r\n          onChange={(e) => setItemValue(e.target.value)}\r\n          // eslint-disable-next-line jsx-a11y/no-autofocus\r\n          autoFocus\r\n        ></input>\r\n      </div>\r\n      <div className=\"form-assigne\">\r\n        <div className=\"assigne\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-assigne\"\r\n            id=\"tooltip-2\"\r\n            onClick={() => assigneModal(true)}\r\n          >\r\n            <i\r\n              className={`${\r\n                auth?.user?.roles.includes('Staff') ? 'bi-person-fill' : 'bi-person-plus-fill'\r\n              }`}\r\n            ></i>\r\n          </button>\r\n          <span>{assignedEmployees.label}</span>\r\n        </div>\r\n        <div className=\"action\">\r\n          <Button\r\n            className=\"btn-cancel\"\r\n            type=\"button\"\r\n            size=\"sm\"\r\n            color=\"light\"\r\n            onClick={() => {\r\n              setShowAddSub(false);\r\n              setSelectedActivityId(undefined);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            // className=\"btn-save\"\r\n            onClick={() => handleAddItem()}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n        <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n          <ModalHeader toggle={toggle.bind(null)}>Assign to</ModalHeader>\r\n          <ModalBody>\r\n            <Select\r\n              // closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              defaultValue={assignedEmployees}\r\n              options={listEmployee}\r\n              onChange={(choice) => {\r\n                setAssignedEmployees(choice);\r\n                assigneModal(false);\r\n              }}\r\n            />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskFormAddSub.propTypes = {\r\n  itemValue: PropTypes.string,\r\n  setIsAddingItem: PropTypes.func,\r\n  setShowAddSub: PropTypes.func,\r\n  selectedActivityId: PropTypes.number,\r\n  setSelectedActivityId: PropTypes.func,\r\n  setItemValue: PropTypes.func,\r\n  refetch: PropTypes.func,\r\n};\r\n\r\nexport default TaskFormAddSub;\r\n","import MaterialIcon from '@material/react-material-icon';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { Badge, Spinner } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport TaskPopup from './TaskPopup';\r\nimport TaskForm from './TaskForm';\r\nimport ActionMenu from '../../components/actionMenu/ActionMenu';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport CircularPercentage from '../../components/atoms/circularPercentage/CircularPercentage';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport IndoDate from '../../utils/IndoDate';\r\nimport isExpired from '../../utils/isExpired';\r\nimport TaskFormAddSub from './TaskFormAddSub';\r\n\r\n// const result = (emId) =>\r\n//   emId.filter(\r\n//     (person, index) => index === emId.findIndex((other) => person.employe_id === other.employe_id),\r\n//   );\\\r\n\r\nconst addTargetAllowedRoles = ['Manager'];\r\nconst addActivityAllowedRoles = ['Supervisor', 'Manager'];\r\nconst addSubActivityAllowedRoles = ['Staff', 'Supervisor', 'Manager'];\r\n\r\nconst BoardTask = ({ directSupervisor, data, projectId, refetch, isMemberActive }) => {\r\n  const { auth } = useAuth();\r\n  const [modal, setModal] = useState(false);\r\n  const [addSubtaskOpen, setAddSubtaskOpen] = useState(undefined);\r\n  const [task, setTask] = useState(undefined);\r\n  const [updating, setUpdating] = useState();\r\n  const [taskIdActive, setTaskIdActive] = useState();\r\n  const [status, setStatus] = useState();\r\n  const [selectedActivityId, setSelectedActivityId] = useState(undefined);\r\n  const [showAddSub, setShowAddSub] = useState(false);\r\n  const [itemValue, setItemValue] = useState('');\r\n  const [isAddingItem, setIsAddingItem] = useState(false);\r\n  const [selectedParentId, setSelectedParentId] = useState();\r\n  const [selectedSubId, setSelectedSubId] = useState();\r\n  const [isChecking, setIsChecking] = useState(false);\r\n  const [isDeletingSub, setIsDeletingSub] = useState(false);\r\n  const [idTaskParams, setIdTaskParams] = useState(null);\r\n  const [isDuplicating, setIsDuplicating] = useState(false);\r\n  const [levelTaskClicked, setLevelTaskClicked] = useState('');\r\n  const api = useAxios();\r\n\r\n  const userRoles = auth?.user?.roles;\r\n  const userId = auth?.user?.employe_id;\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const openPopup = (selectedTask) => {\r\n    setModal(true);\r\n    setTask(selectedTask);\r\n  };\r\n\r\n  const type = 2;\r\n\r\n  const handleTaskStatus = async (taskId, taskStatus) => {\r\n    setTaskIdActive(taskId);\r\n    setStatus(taskStatus);\r\n    setUpdating(true);\r\n    await api\r\n      .put(`api/task/${taskId}/status`, {\r\n        employe_id: auth.user.employe_id,\r\n        status: taskStatus,\r\n      })\r\n      .then(() => {\r\n        alert(\r\n          taskStatus === 1 ? 'start' : taskStatus === 2 ? 'done' : 'success',\r\n          `Task status has been changed to ${\r\n            taskStatus === 0 ? 'To Do' : taskStatus === 1 ? 'In Progress' : 'Done'\r\n          }`,\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        alert('error', err.response.data.error);\r\n      });\r\n    refetch();\r\n    setUpdating(false);\r\n    setTaskIdActive();\r\n    setStatus();\r\n  };\r\n\r\n  const handleShowAddSub = (l3) => {\r\n    if (userRoles?.includes('Staff')) {\r\n      const picIds = [];\r\n\r\n      for (let index = 0; index < l3?.pics.length; index++) {\r\n        picIds.push(l3.pics[index].employe_id.toString());\r\n      }\r\n\r\n      if (picIds.includes(directSupervisor) || picIds.includes(userId)) {\r\n        setShowAddSub(true);\r\n        setSelectedActivityId(l3.task_id);\r\n      } else {\r\n        alert('error', 'You are not allowed');\r\n      }\r\n    } else {\r\n      setShowAddSub(true);\r\n      setSelectedActivityId(l3.task_id);\r\n    }\r\n  };\r\n\r\n  const handleCheck = async (checkedId, l3) => {\r\n    setIsChecking(true);\r\n    setSelectedParentId(l3.task_id);\r\n    setSelectedSubId(checkedId);\r\n    const subArr = JSON.parse(l3.sub);\r\n\r\n    const updateArr = subArr.map((item) => {\r\n      if (item.id === checkedId) {\r\n        return { ...item, status: item.status === 'created' ? 'checked' : 'created' };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    await api\r\n      .patch(`api/task/${l3.task_id}/activity/update-sub`, { sub: updateArr })\r\n      .then(() => {\r\n        refetch();\r\n      })\r\n      .catch(() => alert('error', 'Something went wrong'));\r\n\r\n    setSelectedSubId();\r\n    setIsChecking(false);\r\n  };\r\n\r\n  const handleDeleteSub = async (selectedId, l3) => {\r\n    setIsDeletingSub(true);\r\n    setSelectedParentId(l3.task_id);\r\n    setSelectedSubId(selectedId);\r\n\r\n    const subArr = JSON.parse(l3.sub);\r\n\r\n    const updateArr = subArr.filter((obj) => {\r\n      return obj.id !== selectedId;\r\n    });\r\n\r\n    await api\r\n      .patch(`api/task/${l3.task_id}/activity/update-sub`, { sub: updateArr })\r\n      .then(() => {\r\n        refetch();\r\n      })\r\n      .catch(() => alert('error', 'Something went wrong'));\r\n\r\n    setIsDeletingSub(false);\r\n  };\r\n\r\n  const duplicateFn = (tid) => {\r\n    setIsDuplicating(true);\r\n    setTimeout(() => {\r\n      setIsDuplicating(false);\r\n    }, 5000);\r\n    console.log(tid);\r\n  };\r\n\r\n  // const queryParams = new URLSearchParams(window.location.search);\r\n  // const idTaskParams = queryParams.get('task');\r\n\r\n  const menuOptions = {\r\n    options: [\r\n      {\r\n        id: 1,\r\n        icon: <MaterialIcon icon=\"edit_note\" />,\r\n        type: 'button',\r\n        label: 'To do',\r\n        to: 0,\r\n      },\r\n      {\r\n        id: 2,\r\n        icon: <MaterialIcon icon=\"play_circle_outline\" />,\r\n        type: 'button',\r\n        label: 'In Progress',\r\n        to: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        icon: <MaterialIcon icon=\"task_alt\" />,\r\n        type: 'button',\r\n        label: 'Done',\r\n        to: 2,\r\n      },\r\n      {\r\n        id: 4,\r\n        icon: <MaterialIcon icon=\"content_copy\" />,\r\n        type: 'link',\r\n        label: 'Duplicate',\r\n        to: 'duplicate',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n  const params = queryParams.get('task');\r\n\r\n  useEffect(() => {\r\n    setIdTaskParams(params);\r\n  }, [queryParams]);\r\n\r\n  useEffect(() => {\r\n    if (idTaskParams !== null) {\r\n      const objDiv = document.getElementById(idTaskParams);\r\n      if (objDiv !== null) {\r\n        objDiv.scrollIntoView();\r\n      }\r\n    }\r\n  }, [idTaskParams]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        {data?.map((td, i) => (\r\n          <div key={td.task_id} className=\"board rounded-3\">\r\n            <div className=\"board-header\">\r\n              <div className=\"d-flex gap-2\" style={{ height: 'max-content' }}>\r\n                <Badge\r\n                  color=\"info\"\r\n                  className={`bg-light-${\r\n                    td.status === 0 ? 'primary' : td.status === 1 ? 'warning' : 'success'\r\n                  } text-${\r\n                    td.status === 0 ? 'primary' : td.status === 1 ? 'warning' : 'success'\r\n                  } fw-bold`}\r\n                >\r\n                  #{i + 1}\r\n                </Badge>\r\n                {parseInt(td.status, 10) === 4 && (\r\n                  <Badge color=\"danger\">\r\n                    <i className=\"bi-pencil-square mr-4\" style={{ fontSize: '12px' }}></i>\r\n                    &nbsp; Revision\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n              {parseInt(td.status, 10) === 0 ||\r\n              parseInt(td.status, 10) === 1 ||\r\n              parseInt(td.status, 10) === 4 ? (\r\n                updating && taskIdActive === td.task_id ? (\r\n                  <div className=\"d-flex align-items-center gap-1\">\r\n                    <Spinner size=\"sm\" color=\"success\" />\r\n                    <span style={{ fontSize: '12px' }}>\r\n                      Updating status to{' '}\r\n                      <strong>\r\n                        {status === 0\r\n                          ? 'To do'\r\n                          : status === 1\r\n                          ? 'In Progress'\r\n                          : status === 2\r\n                          ? 'Done'\r\n                          : ''}\r\n                      </strong>\r\n                    </span>\r\n                  </div>\r\n                ) : isDuplicating ? (\r\n                  <div className=\"d-flex align-items-center gap-1\">\r\n                    <Spinner size=\"sm\" color=\"success\" />\r\n                    <span style={{ fontSize: '12px' }}>Duplicating the task..</span>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"d-flex gap-2\">\r\n                    <div className=\"\">\r\n                      {parseInt(td.status, 10) === 1 && (\r\n                        <span style={{ fontSize: '12px' }}>\r\n                          Progress{'  '}\r\n                          <strong\r\n                            style={{\r\n                              fontSize: '14px',\r\n                              color: td.task_progress === 100 ? '#4cc790' : '#21C1D6',\r\n                            }}\r\n                          >\r\n                            {/* {td.task_progress.toFixed(td.task_progress !== 100 && 2)}% */}\r\n                            {td.task_progress.toFixed()}%\r\n                          </strong>\r\n                        </span>\r\n                        // <div className=\"progress-bar\">\r\n                        //   <Progress\r\n                        //     className=\"mb-0\"\r\n                        //     value={td.task_progress}\r\n                        //     color=\"success\"\r\n                        //     style={{ fontSize: '10px', height: '12px' }}\r\n                        //   />\r\n                        //   <div className={`num ${td.task_progress > 52 && 'white'}`}>\r\n                        //     {td.task_progress}%\r\n                        //   </div>\r\n                        // </div>\r\n                      )}\r\n                    </div>\r\n                    <div key={td.task_id}>\r\n                      {/* {td.pics.map(\r\n                        (pic) =>\r\n                          pic.employe_id.toString() === auth?.user.employe_id && (\r\n                            <ActionMenu\r\n                              key={pic.id}\r\n                              menuOptions={menuOptions}\r\n                              taskId={td.task_id}\r\n                              status={parseInt(td.status, 10)}\r\n                              action={handleTaskStatus}\r\n                              progress={td.task_progress}\r\n                            />\r\n                          ),\r\n                      )} */}\r\n                      {isMemberActive && (\r\n                        <ActionMenu\r\n                          menuOptions={menuOptions}\r\n                          taskId={td.task_id}\r\n                          status={parseInt(td.status, 10)}\r\n                          action={handleTaskStatus}\r\n                          progress={td.task_progress}\r\n                          {...{ duplicateFn }}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              ) : parseInt(td.status, 10) === 2 ? (\r\n                <Badge color=\"light\" className=\"d-flex text-dark\">\r\n                  <i className=\"bi-clock mr-4\" style={{ fontSize: '12px' }}></i>\r\n                  &nbsp; Waiting for approval\r\n                </Badge>\r\n              ) : parseInt(td.status, 10) === 3 ? (\r\n                <Badge color=\"success\" className=\"d-flex\">\r\n                  <i className=\"bi-check2-circle mr-4\" style={{ fontSize: '13px' }}></i>\r\n                  &nbsp; Approved\r\n                </Badge>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`board-body task ${\r\n                params === td.task_id.toString() && 'bg-light-warning'\r\n              }`}\r\n            >\r\n              <div\r\n                className=\"task-title fw-bold\"\r\n                onClick={() => openPopup(td)}\r\n                id={td.task_id.toString() === idTaskParams ? idTaskParams : ''}\r\n              >\r\n                {td.task_title}\r\n              </div>\r\n              <div className=\"task-bottom\">\r\n                <div className=\"task-info\">\r\n                  {/* <small className=\"text-muted\">{td.level_2.length} Subtask</small> */}\r\n                  {userRoles.find((role) => addTargetAllowedRoles?.includes(role)) &&\r\n                    parseInt(td.status, 10) !== 2 &&\r\n                    parseInt(td.status, 10) !== 3 && (\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"add-child\"\r\n                        onClick={() => setAddSubtaskOpen(td.task_id)}\r\n                      >\r\n                        <MaterialIcon icon=\"add_circle\" />\r\n                      </button>\r\n                    )}\r\n                </div>\r\n                <div className=\"task-action\">\r\n                  <div className=\"comment\">\r\n                    <MaterialIcon icon=\"comment\" />\r\n                    <div>{td.comments}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {addSubtaskOpen === td.task_id && (\r\n                <div className=\"p-1\">\r\n                  <TaskForm\r\n                    {...{ projectId, setAddSubtaskOpen, refetch, type }}\r\n                    title=\"Add new target..\"\r\n                    taskId={td.task_id}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            {td.level_2?.length > 0 &&\r\n              td.level_2.map((l2) => (\r\n                // <div key={l2.task_id} className=\"board-body subtask\" onClick={() => openPopup(st)}>\r\n                <div key={l2.task_id} className=\"board-container\">\r\n                  <div\r\n                    key={l2.task_id}\r\n                    className={`board-body subtask ${\r\n                      params === l2.task_id.toString() && 'bg-light-warning'\r\n                    }`}\r\n                  >\r\n                    {/* <div className=\"task-title\" onClick={() => openPopup(l2)}> */}\r\n                    <div\r\n                      className=\"task-title\"\r\n                      onClick={() => openPopup(l2)}\r\n                      id={l2.task_id.toString() === idTaskParams ? idTaskParams : ''}\r\n                    >\r\n                      {l2.task_title}\r\n                    </div>\r\n                    <div className=\"task-bottom\">\r\n                      <div className=\"task-info\">\r\n                        {/* <small className=\"text-muted\">{td.level_2.length} Subtask</small> */}\r\n                        {userRoles.find((role) => addActivityAllowedRoles?.includes(role)) &&\r\n                          parseInt(td.status, 10) !== 2 &&\r\n                          parseInt(td.status, 10) !== 3 && (\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"add-child\"\r\n                              onClick={() => setAddSubtaskOpen(l2.task_id)}\r\n                            >\r\n                              <MaterialIcon icon=\"add_circle\" />\r\n                            </button>\r\n                          )}\r\n                      </div>\r\n                      <div className=\"task-action\">\r\n                        <div className=\"circular-progress\">\r\n                          <CircularPercentage data={parseInt(l2.task_progress.toFixed(), 10)} />\r\n                        </div>\r\n                        <div className=\"comment\">\r\n                          <MaterialIcon icon=\"comment\" />\r\n                          <div>{l2.comments}</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {addSubtaskOpen === l2.task_id && (\r\n                      <div className=\"p-1\">\r\n                        <TaskForm\r\n                          {...{ projectId, setAddSubtaskOpen, refetch, type }}\r\n                          title=\"Add new activity..\"\r\n                          taskId={l2.task_id}\r\n                          name=\"activity\"\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {l2.level_3?.length > 0 &&\r\n                    l2.level_3.map((l3) => (\r\n                      <div\r\n                        key={l3.task_id}\r\n                        className={`board-body subtask-level3 ${\r\n                          params === l3.task_id.toString() && 'bg-light-warning'\r\n                        }`}\r\n                      >\r\n                        <div\r\n                          className=\"task-title\"\r\n                          onClick={() => {\r\n                            openPopup(l3);\r\n                            setLevelTaskClicked('activity');\r\n                          }}\r\n                        >\r\n                          {l3.task_title}\r\n                        </div>\r\n                        <div className=\"task-bottom\">\r\n                          <div className=\"task-info\">\r\n                            <span className=\"text-muted\">\r\n                              {l3.sub !== null ? JSON.parse(l3.sub).length : 0} Sub\r\n                            </span>\r\n                            {userRoles.find((role) => addSubActivityAllowedRoles?.includes(role)) &&\r\n                              l3.task_id !== selectedActivityId &&\r\n                              parseInt(td.status, 10) !== 2 &&\r\n                              parseInt(td.status, 10) !== 3 && (\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"add-child\"\r\n                                  onClick={() => handleShowAddSub(l3)}\r\n                                >\r\n                                  <MaterialIcon icon=\"add\" />\r\n                                </button>\r\n                              )}\r\n                          </div>\r\n                          <div className=\"task-action\">\r\n                            <div className=\"circular-progress\">\r\n                              <CircularPercentage data={parseInt(l3.task_progress.toFixed(), 10)} />\r\n                            </div>\r\n                            <div className=\"comment\">\r\n                              <MaterialIcon icon=\"comment\" />\r\n                              <div>{l3.comments}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {showAddSub && (\r\n                          <div className=\"add-item\">\r\n                            {isAddingItem && selectedActivityId === l3.task_id ? (\r\n                              <div className=\"saving\">\r\n                                <Spinner size=\"sm\" color=\"success\" />\r\n                                <span>Saving..</span>\r\n                              </div>\r\n                            ) : (\r\n                              selectedActivityId === l3.task_id && (\r\n                                <TaskFormAddSub\r\n                                  {...{\r\n                                    itemValue,\r\n                                    setIsAddingItem,\r\n                                    setShowAddSub,\r\n                                    selectedActivityId,\r\n                                    setSelectedActivityId,\r\n                                    setItemValue,\r\n                                    refetch,\r\n                                  }}\r\n                                />\r\n                              )\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                        {l3.sub !== null && (\r\n                          <div className=\"sub-list\">\r\n                            {JSON.parse(l3.sub)?.map((item) => (\r\n                              <div className=\"sub-item\" key={item.id}>\r\n                                <button\r\n                                  type=\"button\"\r\n                                  onClick={() => handleCheck(item.id, l3)}\r\n                                  disabled={item.employe_id !== userId}\r\n                                >\r\n                                  <div\r\n                                    className={`item-title ${\r\n                                      isChecking &&\r\n                                      item.id === selectedSubId &&\r\n                                      l3.task_id === selectedParentId &&\r\n                                      'checking'\r\n                                    }`}\r\n                                  >\r\n                                    <div\r\n                                      className={`title-check ${\r\n                                        isChecking && item.id !== selectedSubId && 'not-allowed'\r\n                                      }`}\r\n                                    >\r\n                                      {isChecking &&\r\n                                        item.id === selectedSubId &&\r\n                                        l3.task_id === selectedParentId && (\r\n                                          <Spinner size=\"sm\" color=\"primary\" />\r\n                                        )}\r\n                                      {item.status === 'checked' && selectedSubId !== item.id && (\r\n                                        <MaterialIcon icon=\"done\" />\r\n                                      )}\r\n                                    </div>\r\n                                    <div className=\"title-text\">\r\n                                      <span>\r\n                                        {item.status === 'checked' ? <s>{item.sub}</s> : item.sub}{' '}\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                </button>\r\n                                <div className=\"item-action\">\r\n                                  {/* {item.employe_id === userId && (\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      onClick={() => {\r\n                                        setSelectedActivityId(item.id);\r\n                                        setTaskIdActive(l3.task_id);\r\n                                      }}\r\n                                    >\r\n                                      {uploadingFile && item.id === selectedActivityId ? (\r\n                                        <Spinner color=\"primary\" size=\"sm\" />\r\n                                      ) : (\r\n                                        <Label htmlFor=\"upload\">\r\n                                          <MaterialIcon icon=\"attach_file\" />\r\n                                        </Label>\r\n                                      )}\r\n                                      <input\r\n                                        type=\"file\"\r\n                                        id=\"upload\"\r\n                                        hidden\r\n                                        onChange={(e) => handleUploadSubActvity(e.target.files)}\r\n                                      />\r\n                                    </button>\r\n                                  )}\r\n                                  <div>\r\n                                    <MaterialIcon icon=\"download\" />\r\n                                  </div> */}\r\n                                  {item.employe_id === userId && (\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"delete\"\r\n                                      onClick={() => handleDeleteSub(item.id, l3)}\r\n                                    >\r\n                                      {isDeletingSub &&\r\n                                      item.id === selectedSubId &&\r\n                                      l3.task_id === selectedParentId ? (\r\n                                        <Spinner size=\"sm\" color=\"danger\" />\r\n                                      ) : (\r\n                                        <MaterialIcon icon=\"delete\" />\r\n                                      )}\r\n                                    </button>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              ))}\r\n            {parseInt(td.status, 10) !== 3 && (\r\n              <div className=\"board-footer\">\r\n                <>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <MaterialIcon icon=\"event\" style={{ fontSize: '20px' }} />\r\n                    <span\r\n                      className={`${isExpired(td.end_date) ? 'text-danger' : ''} `}\r\n                      style={{ fontSize: '12px' }}\r\n                    >\r\n                      {IndoDate(td.end_date)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"members\">\r\n                    <div className=\"members-item\">\r\n                      {td?.pics?.map(\r\n                        (pic, idx) =>\r\n                          idx < 2 && (\r\n                            <Fragment key={pic.id}>\r\n                              <img\r\n                                id={`tooltip-${pic.id}`}\r\n                                src={user1}\r\n                                className=\"ava-pic rounded-circle\"\r\n                                alt=\"avatar\"\r\n                                width=\"35\"\r\n                                height=\"35\"\r\n                              />\r\n                              <TooltipHover title={pic.first_name} id={pic.id.toString()} />\r\n                            </Fragment>\r\n                          ),\r\n                      )}\r\n                      {td?.pics?.length > 2 && (\r\n                        <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                          +{td.pics.length - 2}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {modal && (\r\n        <TaskPopup {...{ modal, setModal, toggle, task, refetch }} name={levelTaskClicked} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nBoardTask.propTypes = {\r\n  directSupervisor: PropTypes.string,\r\n  data: PropTypes.array,\r\n  projectId: PropTypes.string,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.any,\r\n  isMemberActive: PropTypes.bool,\r\n};\r\n\r\nexport default BoardTask;\r\n","import React, { useState } from 'react';\r\nimport { Button, Col } from 'reactstrap';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\nimport BoardTask from './BoardTask';\r\nimport TaskForm from './TaskForm';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst newTaskAllowedRoles = ['Manager'];\r\n\r\nconst BoardToDo = ({\r\n  directSupervisor,\r\n  data,\r\n  isLoading,\r\n  error,\r\n  refetch,\r\n  isRefetching,\r\n  isMemberActive,\r\n}) => {\r\n  const { auth } = useAuth();\r\n  const [newTaskOpen, setNewTaskOpen] = useState(false);\r\n\r\n  const { projectId } = useParams();\r\n\r\n  const type = 1;\r\n\r\n  return (\r\n    <Col lg=\"4\" className=\"mt-1\">\r\n      <div className=\"d-flex align-items-center justify-content-between bg-light-primary text-primary py-1 px-2 mb-2 rounded-3\">\r\n        <span className=\"fw-bold\">To do</span>\r\n        <span className=\"fw-bold\">{data?.length}</span>\r\n      </div>\r\n      {isLoading ? (\r\n        'Loading...'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : (\r\n        <>\r\n          {isMemberActive &&\r\n            auth?.user?.roles.find((role) => newTaskAllowedRoles?.includes(role)) &&\r\n            (!newTaskOpen ? (\r\n              <Button\r\n                type=\"button\"\r\n                size=\"sm\"\r\n                color=\"secondary\"\r\n                className=\"d-flex align-items-center justify-content-center rounded-2\"\r\n                block\r\n                onClick={() => setNewTaskOpen(true)}\r\n              >\r\n                <MaterialIcon icon=\"add\" style={{ fontSize: '14px' }} />\r\n                Add Goal\r\n              </Button>\r\n            ) : (\r\n              <TaskForm\r\n                {...{ projectId, setNewTaskOpen, refetch, type }}\r\n                title=\"Create new goal..\"\r\n              />\r\n            ))}\r\n          <BoardTask\r\n            {...{ directSupervisor, data, projectId, refetch, isRefetching, isMemberActive }}\r\n          />\r\n        </>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nBoardToDo.propTypes = {\r\n  directSupervisor: PropTypes.string,\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  error: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.bool,\r\n  isMemberActive: PropTypes.bool,\r\n};\r\n\r\nexport default BoardToDo;\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n// import MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\nimport BoardTask from './BoardTask';\r\n// import TaskForm from './TaskForm';\r\n\r\nconst BoardInProgress = ({\r\n  directSupervisor,\r\n  data,\r\n  isLoading,\r\n  error,\r\n  refetch,\r\n  isRefetching,\r\n  isMemberActive,\r\n}) => {\r\n  // const [newTaskOpen, setNewTaskOpen] = useState(false);\r\n\r\n  const { projectId } = useParams();\r\n\r\n  return (\r\n    <Col lg=\"4\" className=\"mt-1\">\r\n      <div className=\"d-flex align-items-center justify-content-between bg-light-warning text-warning py-1 px-2 mb-2 rounded-3\">\r\n        <span className=\"fw-bold\">In progress</span>\r\n        <span className=\"fw-bold\">{data?.length}</span>\r\n      </div>\r\n      {isLoading ? (\r\n        'Loading...'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : (\r\n        <>\r\n          {/* {!newTaskOpen ? (\r\n            <Button\r\n              type=\"button\"\r\n              size=\"sm\"\r\n              color=\"secondary\"\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n              block\r\n              onClick={() => setNewTaskOpen(true)}\r\n            >\r\n              <MaterialIcon icon=\"add\" style={{ fontSize: '14px' }} />\r\n              New Task\r\n            </Button>\r\n          ) : (\r\n          )} */}\r\n          <BoardTask\r\n            {...{ directSupervisor, data, projectId, refetch, isRefetching, isMemberActive }}\r\n          />\r\n        </>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nBoardInProgress.propTypes = {\r\n  directSupervisor: PropTypes.string,\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  error: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.bool,\r\n  isMemberActive: PropTypes.bool,\r\n};\r\n\r\nexport default BoardInProgress;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Col } from 'reactstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport BoardTask from './BoardTask';\r\n\r\nconst BoardDone = ({ data, isLoading, error, refetch, isRefetching }) => {\r\n  const { projectId } = useParams();\r\n\r\n  return (\r\n    <Col lg=\"4\" className=\"mt-1\">\r\n      <div className=\"d-flex align-items-center justify-content-between bg-light-success text-success py-1 px-2 mb-2 rounded-3\">\r\n        <span className=\"fw-bold\">Done</span>\r\n        <span className=\"fw-bold\">{data?.length}</span>\r\n      </div>\r\n      {isLoading ? (\r\n        'Loading...'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : (\r\n        <>\r\n          <BoardTask {...{ data, projectId, refetch, isRefetching }} />\r\n        </>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nBoardDone.propTypes = {\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  error: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.bool,\r\n};\r\n\r\nexport default BoardDone;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, CardBody } from 'reactstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport BoardToDo from './BoardToDo';\r\nimport BoardInProgress from './BoardInProgress';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport BoardDone from './BoardDone';\r\n// import NewTaskModal from './NewTaskModal';\r\n\r\nconst removeDuplicates = (arr) => {\r\n  return arr?.filter(\r\n    (obj, index) => arr?.findIndex((item) => item.task_id === obj.task_id) === index,\r\n  );\r\n};\r\n\r\nconst BoardTab = () => {\r\n  const { projectId } = useParams();\r\n  const [todos, setTodos] = useState([]);\r\n  const [inProgress, setInProgress] = useState([]);\r\n  const [Done, setDone] = useState([]);\r\n  const [directSupervisor, setDirectSupervisor] = useState('');\r\n  const [isMemberActive, setIsMemberActive] = useState(false);\r\n\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data, refetch, isRefetching } = useQuery({\r\n    queryKey: ['todos'],\r\n    queryFn: () =>\r\n      api.get(`api/task/${projectId}/employe/list`).then((res) => {\r\n        setIsMemberActive(res.data.is_member_active);\r\n        setDirectSupervisor(res.data.direct_supervisor.toString());\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const todofFiltered = data?.filter((taska) => {\r\n      return parseInt(taska.status, 10) === 0 || parseInt(taska.status, 10) === 4;\r\n    });\r\n\r\n    const inProgressfFiltered = data?.filter((taska) => {\r\n      return parseInt(taska.status, 10) === 1;\r\n    });\r\n\r\n    const DoneFiltered = data?.filter((taska) => {\r\n      return parseInt(taska.status, 10) === 2 || parseInt(taska.status, 10) === 3;\r\n    });\r\n\r\n    setTodos(todofFiltered);\r\n    setInProgress(removeDuplicates(inProgressfFiltered));\r\n    setDone(removeDuplicates(DoneFiltered));\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  return (\r\n    <Row>\r\n      {/* <Col lg=\"12\">\r\n        <div className=\"search text-muted\">\r\n          <div className=\"search-input\">\r\n            <MaterialIcon icon=\"search\" />\r\n            <input type=\"text\" placeholder=\"search task ..\" />\r\n          </div>\r\n          <button type=\"button\" className=\"text-dark\" onClick={toggle.bind(null)}>\r\n            <MaterialIcon icon=\"add\" />\r\n            New Task\r\n          </button>\r\n          <NewTaskModal {...{ modal, setModal, toggle }} />\r\n        </div>\r\n      </Col> */}\r\n      {isLoading ? (\r\n        <Col>\r\n          <Card>\r\n            <CardBody className=\"text-center\">\r\n              <h6 className=\"tex-muted\">Loading...</h6>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      ) : (\r\n        <Col>\r\n          {/* <div\r\n            className=\"d-flex  justify-content-between align-items-center mb-2\"\r\n            style={{ borderBottom: '0.7px solid grey' }}\r\n          >\r\n            <div className=\"d-flex align-items-center \">\r\n              <span className=\"fw-bold\">List Task</span>\r\n            </div>\r\n            <div className=\"d-flex gap-4\">\r\n              <span>Filter</span>\r\n              <span>Sort</span>\r\n              <div className=\"input-search\">\r\n                <input type=\"text\" placeholder=\"search..\" />\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n          <Row>\r\n            <BoardToDo\r\n              data={todos}\r\n              {...{ directSupervisor, isLoading, error, refetch, isRefetching, isMemberActive }}\r\n            />\r\n            <BoardInProgress\r\n              data={inProgress}\r\n              {...{ directSupervisor, isLoading, error, refetch, isRefetching, isMemberActive }}\r\n            />\r\n            <BoardDone data={Done} {...{ isLoading, error, refetch, isRefetching }} />\r\n          </Row>\r\n        </Col>\r\n      )}\r\n      {/* // ) : isMemberActive ? ( //{' '}\r\n      <>\r\n        // <BoardToDo data={todos} {...{ isLoading, error, refetch, isRefetching }} />\r\n        // <BoardInProgress data={inProgress} {...{ isLoading, error, refetch, isRefetching }} />\r\n        // <BoardDone data={Done} {...{ isLoading, error, refetch, isRefetching }} />\r\n        //{' '}\r\n      </>\r\n      // ) : ( //{' '}\r\n      <Col>\r\n        //{' '}\r\n        <Card>\r\n          //{' '}\r\n          <CardBody className=\"text-center\">\r\n            //{' '}\r\n            <h6 className=\"tex-muted\">\r\n              // You cannot create a task because you are not an active member. //{' '}\r\n            </h6>\r\n            //{' '}\r\n          </CardBody>\r\n          //{' '}\r\n        </Card>\r\n        //{' '}\r\n      </Col>\r\n      // )} */}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BoardTab;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './RoundedTable.scss';\r\n\r\nconst RoundedTable = ({ children }) => {\r\n  return <table className=\"rounded-corners\">{children}</table>;\r\n};\r\n\r\nRoundedTable.propTypes = {\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default RoundedTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardBody, Col } from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { useParams } from 'react-router-dom';\r\n// import MaterialIcon from '@material/react-material-icon';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport RoundedTable from '../../components/roundedTable/RoundedTable';\r\n// import useAuth from '../../hooks/useAuth';\r\n\r\nconst selectedCount = (obj, row) => {\r\n  return obj[row];\r\n};\r\n\r\nconst MemberTab = () => {\r\n  const [totalTask, setTotalTask] = useState();\r\n  const api = useAxios();\r\n\r\n  const { projectId } = useParams();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['members'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}/members`).then((res) => {\r\n        setTotalTask(res.data.count_task);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  // const addMemberAllowedRole = 'Manager';\r\n\r\n  return (\r\n    <Col>\r\n      <Card className=\"rounded-3\">\r\n        <CardBody>\r\n          {/* {auth.user.roles.includes(addMemberAllowedRole) && (\r\n            <Col className=\"d-flex justify-content-end\" col=\"12\">\r\n              <Button\r\n                className=\"btn d-flex gap-1 align-items-center rounded-5 px-2\"\r\n                outline\r\n                color=\"success\"\r\n                size=\"sm\"\r\n              >\r\n                <MaterialIcon icon=\"add\" style={{ fontSize: '16px' }} />\r\n                Member\r\n              </Button>\r\n            </Col>\r\n          )} */}\r\n          {isLoading ? (\r\n            'Loading...'\r\n          ) : error ? (\r\n            'Something went wrong.'\r\n          ) : data?.length > 0 ? (\r\n            <RoundedTable>\r\n              <>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    <th>Position</th>\r\n                    <th>Total Task</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody style={{ overflow: 'hidden' }}>\r\n                  {data?.map((m, i) => (\r\n                    <tr key={m.first_name}>\r\n                      <td>{i + 1}</td>\r\n                      <td>{m.first_name}</td>\r\n                      <td>{m.position_name}</td>\r\n                      <td>{totalTask ? selectedCount(totalTask, m.employe_id.toString()) : '-'}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </>\r\n            </RoundedTable>\r\n          ) : (\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h6>No data yet.</h6>\r\n            </div>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default MemberTab;\r\n","import React, { useEffect } from 'react';\r\nimport { Card, CardBody, Table } from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\n\r\nconst sortFileByDate = (arr) => {\r\n  return arr.sort(({ created_at: a }, { created_at: b }) => (a < b ? -1 : a > b ? 1 : 0));\r\n};\r\n\r\nconst FileTab = () => {\r\n  const { projectId } = useParams();\r\n\r\n  const api = useAxios();\r\n\r\n  const fileUrl = process.env.REACT_APP_BASEURL;\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['files'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}/files`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  return (\r\n    <Card className=\"rounded-3\">\r\n      <CardBody>\r\n        {isLoading ? (\r\n          'Loading...'\r\n        ) : error ? (\r\n          'Something went wrong.'\r\n        ) : (\r\n          <Table className=\"no-wrap align-middle\" hover style={{ zIndex: '-1', fontSize: '13px' }}>\r\n            <thead>\r\n              <tr>\r\n                <th width=\"60\">#</th>\r\n                <th width=\"700\">Filename</th>\r\n                <th>User</th>\r\n                <th width=\"200\">Uploaded at</th>\r\n              </tr>\r\n            </thead>\r\n            {data?.length ? (\r\n              <tbody style={{ overflow: 'hidden' }}>\r\n                {sortFileByDate(data)\r\n                  ?.reverse()\r\n                  .map((f, i) => (\r\n                    <tr key={f.file_id}>\r\n                      <td>{i + 1}</td>\r\n                      <td>\r\n                        <Link to={`${fileUrl}taskfiles/${f.file_name}`} target=\"blank\">\r\n                          {f.file_name}\r\n                        </Link>\r\n                      </td>\r\n                      <td>{f.employee || '-'}</td>\r\n                      <td>{newDate(f.created_at)}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            ) : (\r\n              <tbody style={{ overflow: 'hidden' }}>\r\n                <tr>\r\n                  <td colSpan=\"4\" className=\"text-center\">\r\n                    No data yet.\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n          </Table>\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FileTab;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport IndoDate from '../../utils/IndoDate';\r\n\r\nconst ReviewTab = ({ setTotalReview }) => {\r\n  const { projectId } = useParams();\r\n  const [modal, setModal] = useState(false);\r\n  const [mode, setMode] = useState('');\r\n  const [taskId, setTaskId] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [comments, setComments] = useState();\r\n  const [employeId, setEmployeId] = useState();\r\n  const api = useAxios();\r\n  const [listReview, setListReview] = useState([]);\r\n\r\n  const { isLoading, error, refetch, isRefetching } = useQuery({\r\n    queryKey: ['review'],\r\n    queryFn: () =>\r\n      api.get(`api/task/${projectId}/level1/review`).then((res) => {\r\n        setListReview(res.data.data);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTotalReview(listReview.length);\r\n  }, [listReview]);\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  const fileUrl = process.env.REACT_APP_BASEURL;\r\n\r\n  const handleForm = (modeRes, task, employe) => {\r\n    setModal(true);\r\n    setMode(modeRes);\r\n    setTaskId(task);\r\n    setEmployeId(employe);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    await api\r\n      .put(`api/task/${taskId}/status`, {\r\n        employe_id: employeId,\r\n        status: mode === 'approve' ? 3 : 4,\r\n        note: comments,\r\n      })\r\n      .then(() => {\r\n        alert('success', `Task has been ${mode === 'approve' ? 'approved' : 'reviewed'}`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    refetch();\r\n    setModal(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        {isLoading || isRefetching ? (\r\n          // {isLoading ? (\r\n          <div className=\"d-flex justify-content-center\">Loading...</div>\r\n        ) : error ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            Something went wrong <span className=\"material-icons\">sentiment_very_dissatisfied</span>\r\n          </div>\r\n        ) : (\r\n          listReview.map((task, i) => (\r\n            <Card key={task.approval_id} className=\"custom-card rounded-3\">\r\n              <CardBody>\r\n                <CardTitle tag=\"h4\" className=\"d-flex justify-content-between\">\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Badge color=\"light\" className=\"text-dark\">\r\n                      #{i + 1}\r\n                    </Badge>\r\n                    <Badge color=\"info\" className=\"\">\r\n                      {task.first_name}\r\n                    </Badge>\r\n                  </div>\r\n                  <span style={{ fontSize: '14px' }}>{newDate(task.send_date)}</span>\r\n                </CardTitle>\r\n                <h5>\r\n                  <strong>{task.task_title}</strong>\r\n                </h5>\r\n                <p>{task.task_desc}</p>\r\n                <span className=\"text-dark\">Attachment:</span>\r\n                <div className=\"\">\r\n                  {task.files.length > 0\r\n                    ? task.files.map((f, idx) => (\r\n                        <div key={f.file_name} className=\"d-flex gap-3\">\r\n                          <span>{idx + 1}.</span>\r\n                          <Link\r\n                            className=\"file-link\"\r\n                            to={`${fileUrl}taskfiles/${f.file_name}`}\r\n                            target=\"blank\"\r\n                          >\r\n                            {f.file_name}\r\n                          </Link>\r\n                        </div>\r\n                      ))\r\n                    : '-'}\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center mt-4 border  py-2 px-3\"\r\n                  style={{ borderRadius: '10px' }}\r\n                >\r\n                  <div className=\"d-flex gap-4\">\r\n                    <div color=\"muted\">\r\n                      <span className=\"text-dark\">Start at: </span>\r\n                      <br /> {IndoDate(task.start_date)?.split(',')[0]}\r\n                    </div>\r\n                    <div color=\"muted\">\r\n                      <span className=\"text-dark\">Due at: </span>\r\n                      <br /> {IndoDate(task.end_date)?.split(',')[0]}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"sm\"\r\n                      color=\"warning\"\r\n                      outline\r\n                      onClick={() => handleForm('revision', task.task_id, task.employe_id)}\r\n                    >\r\n                      Revision\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"sm\"\r\n                      color=\"success\"\r\n                      onClick={() => handleForm('approve', task.task_id, task.employe_id)}\r\n                    >\r\n                      Approve\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          ))\r\n        )}\r\n        {/* <Card>\r\n        <CardBody>\r\n        <CardTitle tag=\"h4\">\r\n        <Badge color=\"success\">Approved</Badge>\r\n        </CardTitle>\r\n        <Table className=\"no-wrap mt-3 align-middle\" hover style={{ zIndex: '-1' }}>\r\n        <thead>\r\n        <tr>\r\n        <th>#</th>\r\n        <th>Employee</th>\r\n        <th>Task</th>\r\n        <th>Attachment</th>\r\n        <th>Approved at</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {data.map((task, i) => (\r\n            <tr key={task.approval_id}>\r\n            <td>{i + 1}</td>\r\n            <td>{task.first_name}</td>\r\n            <td>{task.task_title}</td>\r\n            <td>{task.file}</td>\r\n            <td>{newDate(task.created_at)}</td>\r\n            </tr>\r\n            ))}\r\n            </tbody>\r\n            </Table>\r\n            </CardBody>\r\n        </Card> */}\r\n      </Col>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>\r\n          {mode === 'approve' ? 'Approval' : 'Revision'}\r\n        </ModalHeader>\r\n        <Form onSubmit={handleSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                id=\"goals\"\r\n                name=\"goals\"\r\n                placeholder=\"Comment here..\"\r\n                rows=\"3\"\r\n                required\r\n                onChange={(e) => setComments(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color={`${mode === 'approve' ? 'success' : 'warning'}`}\r\n              disabled={loading}\r\n              className=\"d-flex gap-1 align-items-center\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" />\r\n                  Sending...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <MaterialIcon icon=\"send\" style={{ fontSize: '20px' }} />\r\n                  {mode === 'approve' ? 'Approve' : 'Send'}\r\n                </>\r\n              )}\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nReviewTab.propTypes = {\r\n  setTotalReview: PropTypes.func,\r\n};\r\n\r\nexport default ReviewTab;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst HandoverTab = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newStage, setNewStage] = useState({});\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const api = useAxios();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const { isLoading, error, data, refetch, isRefetching } = useQuery({\r\n    queryKey: ['handover'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${auth?.user.employe_id}/${projectId}/handover`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  const fileUrl = process.env.REACT_APP_BASEURL;\r\n\r\n  const handleConfirm = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    api\r\n      .post(`api/project/${data?.history_id}/confirm`, newStage)\r\n      .then((res) => {\r\n        refetch();\r\n        alert('success', res.data.message);\r\n      })\r\n      .catch((err) => {\r\n        alert('error', err.response.data.error);\r\n      });\r\n    setModal(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setNewStage((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        {isLoading || isRefetching ? (\r\n          <div className=\"d-flex justify-content-center\">Loading...</div>\r\n        ) : error ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            Something went wrong <span className=\"material-icons\">sentiment_very_dissatisfied</span>\r\n          </div>\r\n        ) : (\r\n          data !== null && (\r\n            <Card className=\"custom-card\">\r\n              <CardBody>\r\n                <CardTitle tag=\"h4\" className=\"d-flex justify-content-between\">\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Badge color=\"light\" className=\"text-dark\">\r\n                      Handover project\r\n                    </Badge>\r\n                  </div>\r\n                  <span style={{ fontSize: '14px' }}>{newDate(data.created_at)}</span>\r\n                </CardTitle>\r\n                <div className=\"d-flex  justify-content-center\">\r\n                  <h5>\r\n                    Handover of the project from <strong>{data.from_division}</strong> to{' '}\r\n                    <strong>{data.to_division}</strong>\r\n                  </h5>\r\n                </div>\r\n                <p></p>\r\n                <span className=\"text-dark\">BAST File:</span>\r\n                <div className=\"\">\r\n                  <div className=\"d-flex gap-3\">\r\n                    <Link\r\n                      className=\"file-link\"\r\n                      to={`${fileUrl}project/${data.file}`}\r\n                      target=\"blank\"\r\n                    >\r\n                      {data.file}\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center mt-4 border  py-2 px-3\"\r\n                  style={{ borderRadius: '10px' }}\r\n                >\r\n                  <div className=\"d-flex gap-4\">\r\n                    <div className=\"d-flex gap-3 align-items-center\">\r\n                      <img\r\n                        src={user1}\r\n                        className=\"rounded-circle\"\r\n                        alt=\"avatar\"\r\n                        width=\"45\"\r\n                        height=\"45\"\r\n                      />\r\n                      <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-dark fw-bold\">{data.old_pic}</span>\r\n                        <small className=\"text-muted\">{data.from_division}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      color=\"success\"\r\n                      outline\r\n                      onClick={toggle.bind(null)}\r\n                    >\r\n                      Confirm\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          )\r\n        )}\r\n      </Col>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>Confirmation</ModalHeader>\r\n        <form onSubmit={handleConfirm}>\r\n          <ModalBody>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h6 className=\"fw-bold\">\r\n                Next stage:{' '}\r\n                {data?.current_stage?.phase === 1\r\n                  ? 'Planning'\r\n                  : data?.current_stage?.phase === 2\r\n                  ? 'Execution, Control & Monitoring'\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n            <FormGroup>\r\n              <Label htmlFor=\"desc_stage\">Description</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"desc_stage\"\r\n                id=\"desc_stage\"\r\n                placeholder=\"stage description here..\"\r\n                rows=\"3\"\r\n                onChange={handleChange}\r\n              />\r\n            </FormGroup>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"start_date\">Start date</Label>\r\n                  <Input type=\"date\" id=\"start_date\" name=\"start_date\" onChange={handleChange} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"end_date\">End date</Label>\r\n                  <Input type=\"date\" id=\"end_date\" name=\"end_date\" onChange={handleChange} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"success\"\r\n              disabled={loading}\r\n              className=\"d-flex gap-1 align-items-center\"\r\n              // onClick={handleConfirm}\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" color=\"light\" />\r\n                  Sending\r\n                </>\r\n              ) : (\r\n                'Send'\r\n              )}\r\n            </Button>\r\n          </ModalFooter>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HandoverTab;\r\n","export const level2Progress = (val) => {\r\n  const level3 = val?.level_3;\r\n\r\n  let sum = 0;\r\n  let total = 0;\r\n  if (level3?.length > 0) {\r\n    for (let i = 0; i < level3?.length; i++) {\r\n      sum += level3[i].task_progress;\r\n    }\r\n\r\n    total = sum / level3.length;\r\n  } else {\r\n    total = val?.task_progress;\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\nexport const level1Progress = (val) => {\r\n  const level2 = val?.level_2;\r\n\r\n  let sum = 0;\r\n  let total = 0;\r\n\r\n  if (level2?.length > 0) {\r\n    for (let i = 0; i < level2.length; i++) {\r\n      sum += level2Progress(level2[i]);\r\n    }\r\n\r\n    total = sum / level2.length;\r\n  } else {\r\n    total = val?.task_progress;\r\n  }\r\n\r\n  return total;\r\n};\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link, useLocation, useParams } from 'react-router-dom';\r\nimport { Badge, Button, Card, CardBody, Col, Input, Progress, Row, Spinner } from 'reactstrap';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\nimport Popover from '@mui/material/Popover';\r\nimport Typography from '@mui/material/Typography';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport TaskPopup from './TaskPopup';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport PDFFile from './PDFFile';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport './ProjectTable.scss';\r\nimport { level1Progress, level2Progress } from '../../utils/countTaskProgress';\r\nimport IndoDate from '../../utils/IndoDate';\r\nimport isExpired from '../../utils/isExpired';\r\n// import TooltipHover from '../../components/atoms/TooltipHover';\r\n\r\n// const result = (emId) =>\r\n//   emId.filter(\r\n//     (person, index) => index === emId.findIndex((other) => person.employe_id === other.employe_id),\r\n//   );\r\n\r\nconst ActivityTab = () => {\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const [modal, setModal] = useState(false);\r\n  const [task, setTask] = useState(undefined);\r\n  const [taskIdSelected, setTaskIdSelected] = useState();\r\n  const [addingFavorite, setAddingFavorite] = useState();\r\n  const [isDirector, setIsDirector] = useState(false);\r\n  const [projectTitle, setProjectTitle] = useState();\r\n  const [filterSearch, setFilterSearch] = useState();\r\n  const [progress, setProgress] = useState(0);\r\n  const api = useAxios();\r\n\r\n  const { search } = useLocation();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['act'],\r\n    queryFn: () =>\r\n      api.get(`api/task/${projectId}/activities/all${search}`).then((res) => {\r\n        setProjectTitle(res.data.project);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFilterSearch(data);\r\n\r\n    async function fetchProgress() {\r\n      await api\r\n        .post('api/project/progress/collection', { ids: [projectId] })\r\n        .then((res) => {\r\n          setProgress(res.data.data[0]?.progress);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchProgress();\r\n  }, [data]);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const openPopup = (selectedTask) => {\r\n    setModal(true);\r\n    setTask(selectedTask);\r\n  };\r\n\r\n  const handleFavorite = async (taskId) => {\r\n    setTaskIdSelected(taskId);\r\n    setAddingFavorite(true);\r\n    await api\r\n      .post(`api/task/${auth?.user.employe_id}/${taskId}/favorite`)\r\n      .then((res) => {\r\n        refetch();\r\n        alert('success', res.data.message);\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Something went wrong.');\r\n      });\r\n    setTaskIdSelected();\r\n    setAddingFavorite(false);\r\n  };\r\n\r\n  const favoriteAllowedRoles = ['Director'];\r\n  const reportTaskAllowedRoles = ['Manager'];\r\n\r\n  useEffect(() => {\r\n    if (auth?.user.roles.find((role) => favoriteAllowedRoles.includes(role))) {\r\n      setIsDirector(true);\r\n    }\r\n  }, [auth]);\r\n\r\n  const handleSearch = (value) => {\r\n    const filterByTitle = data.filter((item) =>\r\n      item.task_title.toLowerCase().includes(value.toLowerCase()),\r\n    );\r\n\r\n    setFilterSearch(filterByTitle);\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        <Card className=\"rounded-3\">\r\n          <CardBody>\r\n            {isLoading ? (\r\n              'loading...'\r\n            ) : error ? (\r\n              'Something went wrong.'\r\n            ) : (\r\n              <>\r\n                <Row>\r\n                  <Col sm=\"12 mb-2\" md=\"6\">\r\n                    <div className=\"d-flex gap-2\">\r\n                      <Button\r\n                        type=\"button\"\r\n                        className=\"d-flex align-items-center gap-2 rounded-3\"\r\n                        color=\"light\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <MaterialIcon icon=\"filter_list\" style={{ fontSize: '12px' }} />\r\n                        Sort\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        className=\"d-flex align-items-center gap-2 rounded-3\"\r\n                        color=\"light\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <MaterialIcon icon=\"tune\" style={{ fontSize: '12px' }} />\r\n                        Filters\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                  <Col sm=\"12\" md=\"6\">\r\n                    <div className=\"d-flex gap-3 col-md-6 w-100\">\r\n                      <div className=\"w-100 position-relative\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"rounded-3\"\r\n                          bsSize=\"md\"\r\n                          placeholder=\"Search task...\"\r\n                          onChange={(e) => handleSearch(e.target.value)}\r\n                        />\r\n                        <div className=\"position-absolute top-0 end-0 h-100 p-1\">\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-light w-100 h-100 border-0 rounded-3 text-muted\"\r\n                            aria-describedby={id}\r\n                            variant=\"contained\"\r\n                            onClick={handleClick}\r\n                          >\r\n                            <MaterialIcon icon=\"more_horiz\" style={{ fontSize: '16px' }} />\r\n                          </Button>\r\n                          <Popover\r\n                            id={id}\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClick={handleClose}\r\n                            anchorOrigin={{\r\n                              vertical: 'bottom',\r\n                              horizontal: 'left',\r\n                            }}\r\n                            transformOrigin={{\r\n                              vertical: 'top',\r\n                              horizontal: 'center',\r\n                            }}\r\n                          >\r\n                            <Typography sx={{ p: 2 }}>\r\n                              <Col>\r\n                                <Row>\r\n                                  <Link to=\"#\">Task</Link>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Link to=\"#\">Employee</Link>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Link to=\"#\">Date</Link>\r\n                                </Row>\r\n                              </Col>\r\n                            </Typography>\r\n                          </Popover>\r\n                        </div>\r\n                      </div>\r\n                      {auth?.user.roles.find((role) => reportTaskAllowedRoles.includes(role)) && (\r\n                        <PDFDownloadLink\r\n                          document={<PDFFile {...{ projectTitle, data }} />}\r\n                          fileName={`Task Report - ${projectTitle?.project_number} - ${projectTitle?.division}`}\r\n                          style={{ textDecoration: 'none' }}\r\n                        >\r\n                          {/* {({ loading }) =>\r\n                          loading ? (\r\n                            <Button\r\n                              type=\"button\"\r\n                              size=\"sm\"\r\n                              className=\"btn btn-light d-flex rounded-3\"\r\n                            >\r\n                              Loading...\r\n                            </Button>\r\n                          ) : (\r\n                            <Button\r\n                              type=\"button\"\r\n                              size=\"sm\"\r\n                              className=\"btn btn-light-info text-info d-flex align-items-center gap-2 rounded-3\"\r\n                            >\r\n                              <MaterialIcon icon=\"picture_as_pdf\" style={{ fontSize: '12px' }} />\r\n                              Report\r\n                            </Button>\r\n                          )\r\n                        } */}\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-light-info text-info rounded-3 d-flex py-2\"\r\n                            // size=\"lg\"\r\n                          >\r\n                            <MaterialIcon icon=\"file_download\" style={{ fontSize: '18px' }} />\r\n                            {/* Report */}\r\n                          </Button>\r\n                        </PDFDownloadLink>\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Col sm=\"12 overflow-auto\">\r\n                  <div className=\"d-flex align-items-center justify-content-between mt-2\">\r\n                    <h6 className=\"fw-bold\">List of tasks from {projectTitle?.division}</h6>\r\n                    <div className=\"w-25\">\r\n                      <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <div style={{ width: '86%' }}>\r\n                          <Progress\r\n                            className=\"\"\r\n                            color=\"success\"\r\n                            value={progress.toFixed()}\r\n                            style={{ height: '12px' }}\r\n                          />\r\n                        </div>\r\n                        <span className=\"fw-bold\">{progress.toFixed()}%</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <table className=\"rounded-corners act-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th width=\"30\">#</th>\r\n                        <th colSpan=\"3\" style={{ minWidth: '400px' }}>\r\n                          Task title\r\n                        </th>\r\n                        <th width=\"\">Status</th>\r\n                        <th style={{ minWidth: '100px' }}>Start date</th>\r\n                        <th style={{ minWidth: '100px' }}>Due date</th>\r\n                        <th>Progress</th>\r\n                        <th width=\"100\">PIC</th>\r\n                        {isDirector && <th width=\"50\"></th>}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filterSearch?.length > 0 ? (\r\n                        filterSearch?.map((ts, idx) => (\r\n                          <Fragment key={ts.task_id}>\r\n                            <tr>\r\n                              <td>{idx + 1}.</td>\r\n                              <td\r\n                                colSpan=\"3\"\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={() => openPopup(ts)}\r\n                              >\r\n                                <span style={{ fontWeight: '600' }}>{ts.task_title}</span>\r\n                                <br></br>\r\n                                <Badge color=\"light\" className=\"text-muted\">\r\n                                  {ts?.level_2?.length} subtask\r\n                                </Badge>\r\n                                {'  '}\r\n                                <Badge color=\"light\" className=\"text-muted\">\r\n                                  <MaterialIcon icon=\"comment\" style={{ fontSize: '12px' }} />\r\n                                  {ts.comments}\r\n                                </Badge>\r\n                              </td>\r\n\r\n                              <td>\r\n                                {ts.status === 0 ? (\r\n                                  <Badge color=\"light\" className=\"text-dark\">\r\n                                    To Do\r\n                                  </Badge>\r\n                                ) : ts.status === 1 ? (\r\n                                  <Badge color=\"warning\">In Progress</Badge>\r\n                                ) : ts.status === 2 ? (\r\n                                  <Badge color=\"light\" className=\"text-dark\">\r\n                                    Under Review\r\n                                  </Badge>\r\n                                ) : ts.status === 3 ? (\r\n                                  <Badge color=\"success\">Approved</Badge>\r\n                                ) : (\r\n                                  <Badge color=\"danger\">Revision</Badge>\r\n                                )}\r\n                              </td>\r\n                              <td>{IndoDate(ts.start_date)}</td>\r\n                              <td className={`${isExpired(ts.end_date) ? 'text-danger' : ''}`}>\r\n                                {IndoDate(ts.end_date)}\r\n                              </td>\r\n                              <td>\r\n                                <span className=\"badge bg-light-success text-primary rounded-pill d-inline-block fw-bold\">\r\n                                  {level1Progress(ts)?.toFixed()}%\r\n                                </span>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"members\">\r\n                                  <div className=\"members-item\">\r\n                                    {ts?.pics?.map(\r\n                                      (pic, i) =>\r\n                                        i < 2 && (\r\n                                          <Fragment key={pic.id}>\r\n                                            <img\r\n                                              id={`tooltip-${pic.id}`}\r\n                                              src={user1}\r\n                                              className=\"ava-pic rounded-circle\"\r\n                                              alt=\"avatar\"\r\n                                              width=\"35\"\r\n                                              height=\"35\"\r\n                                            />\r\n                                            <TooltipHover\r\n                                              title={pic.first_name}\r\n                                              id={pic.id?.toString()}\r\n                                            />\r\n                                          </Fragment>\r\n                                        ),\r\n                                    )}\r\n                                    {ts?.pics?.length > 2 && (\r\n                                      <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                        +{ts.pics.length - 2}\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              {isDirector && (\r\n                                <td className=\"text-center\">\r\n                                  {addingFavorite && taskIdSelected === ts.task_id ? (\r\n                                    <Spinner size=\"sm\" color=\"warning\" />\r\n                                  ) : (\r\n                                    <abbr title=\"Mark task\" style={{ textDecoration: 'none' }}>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"fav-btn\"\r\n                                        onClick={() => handleFavorite(ts.task_id)}\r\n                                      >\r\n                                        <MaterialIcon\r\n                                          icon=\"star\"\r\n                                          className={`${ts.isFavorite && 'is_favorite'}`}\r\n                                        />\r\n                                      </button>\r\n                                    </abbr>\r\n                                  )}\r\n                                </td>\r\n                              )}\r\n                            </tr>\r\n                            {ts.level_2?.length > 0 &&\r\n                              ts.level_2?.map((st, si) => (\r\n                                <Fragment key={st.task_id}>\r\n                                  <tr key={st.task_id}>\r\n                                    <td></td>\r\n                                    <td width=\"5\">\r\n                                      {idx + 1}.{si + 1}\r\n                                    </td>\r\n                                    <td\r\n                                      colSpan=\"2\"\r\n                                      onClick={() => openPopup(st)}\r\n                                      style={{\r\n                                        cursor: 'pointer',\r\n                                        textAlign: 'left',\r\n                                        fontWeight: '500',\r\n                                      }}\r\n                                    >\r\n                                      {st.task_title}\r\n                                      <br></br>\r\n                                      <Badge color=\"light\" className=\"text-muted\">\r\n                                        {st?.level_3?.length} subtask\r\n                                      </Badge>\r\n                                      {'  '}\r\n                                      <Badge color=\"light\" className=\"text-muted\">\r\n                                        <MaterialIcon icon=\"comment\" style={{ fontSize: '12px' }} />\r\n                                        {st.comments}\r\n                                      </Badge>\r\n                                    </td>\r\n                                    <td>-</td>\r\n                                    <td>{IndoDate(st.start_date)}</td>\r\n                                    <td\r\n                                      className={`${isExpired(st.end_date) ? 'text-danger' : ''}`}\r\n                                    >\r\n                                      {IndoDate(st.end_date)}\r\n                                    </td>\r\n                                    <td>\r\n                                      <span className=\"badge bg-light-primary text-primary rounded-pill d-inline-block fw-bold\">\r\n                                        {level2Progress(st)?.toFixed()}%\r\n                                      </span>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className=\"members\">\r\n                                        <div className=\"members-item\">\r\n                                          {st?.pics?.map(\r\n                                            (pic, i) =>\r\n                                              i < 2 && (\r\n                                                <Fragment key={pic.id}>\r\n                                                  <img\r\n                                                    id={`tooltip-${pic.id}`}\r\n                                                    src={user1}\r\n                                                    className=\"ava-pic rounded-circle\"\r\n                                                    alt=\"avatar\"\r\n                                                    width=\"35\"\r\n                                                    height=\"35\"\r\n                                                  />\r\n                                                  <TooltipHover\r\n                                                    title={pic.first_name}\r\n                                                    id={pic.id?.toString()}\r\n                                                  />\r\n                                                </Fragment>\r\n                                              ),\r\n                                          )}\r\n                                          {st?.pics?.length > 2 && (\r\n                                            <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                              +{st.pics.length - 2}\r\n                                            </div>\r\n                                          )}\r\n                                        </div>\r\n                                      </div>\r\n                                    </td>\r\n                                    {isDirector && (\r\n                                      <td className=\"text-center\">\r\n                                        {addingFavorite && taskIdSelected === st.task_id ? (\r\n                                          <Spinner size=\"sm\" color=\"warning\" />\r\n                                        ) : (\r\n                                          <abbr\r\n                                            title=\"Mark task\"\r\n                                            style={{ textDecoration: 'none' }}\r\n                                          >\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"fav-btn\"\r\n                                              onClick={() => handleFavorite(st.task_id)}\r\n                                            >\r\n                                              <MaterialIcon\r\n                                                icon=\"star\"\r\n                                                className={`${st.isFavorite && 'is_favorite'}`}\r\n                                              />\r\n                                            </button>\r\n                                          </abbr>\r\n                                        )}\r\n                                      </td>\r\n                                    )}\r\n                                  </tr>\r\n                                  {st.level_3?.length > 0 &&\r\n                                    st.level_3?.map((sst, ssi) => (\r\n                                      <tr key={sst.task_id}>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td width=\"5\">\r\n                                          {idx + 1}.{si + 1}.{ssi + 1}\r\n                                        </td>\r\n                                        <td\r\n                                          onClick={() => openPopup(sst)}\r\n                                          style={{ cursor: 'pointer', textAlign: 'left' }}\r\n                                        >\r\n                                          {sst.task_title}\r\n                                          <br></br>\r\n                                          <Badge color=\"light\" className=\"text-muted\">\r\n                                            <MaterialIcon\r\n                                              icon=\"comment\"\r\n                                              style={{ fontSize: '12px' }}\r\n                                            />\r\n                                            {sst.comments}\r\n                                          </Badge>\r\n                                        </td>\r\n                                        <td>-</td>\r\n                                        <td>{IndoDate(sst.start_date)}</td>\r\n                                        <td\r\n                                          className={`${\r\n                                            isExpired(sst.end_date) ? 'text-danger' : ''\r\n                                          }`}\r\n                                        >\r\n                                          {IndoDate(sst.end_date)}\r\n                                        </td>\r\n                                        <td>\r\n                                          <span className=\"badge bg-light-primary text-primary rounded-pill d-inline-block fw-bold\">\r\n                                            {sst?.task_progress?.toFixed()}%\r\n                                          </span>\r\n                                        </td>\r\n                                        <td>\r\n                                          <div className=\"members\">\r\n                                            <div className=\"members-item\">\r\n                                              {sst?.pics?.map(\r\n                                                (pic, i) =>\r\n                                                  i < 2 && (\r\n                                                    <Fragment key={pic.id}>\r\n                                                      <img\r\n                                                        id={`tooltip-${pic.id}`}\r\n                                                        src={user1}\r\n                                                        className=\"ava-pic rounded-circle\"\r\n                                                        alt=\"avatar\"\r\n                                                        width=\"35\"\r\n                                                        height=\"35\"\r\n                                                      />\r\n                                                      <TooltipHover\r\n                                                        title={pic.first_name}\r\n                                                        id={pic.id?.toString()}\r\n                                                      />\r\n                                                    </Fragment>\r\n                                                  ),\r\n                                              )}\r\n                                              {sst?.pics?.length > 2 && (\r\n                                                <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                                  +{sst.pics.length - 2}\r\n                                                </div>\r\n                                              )}\r\n                                            </div>\r\n                                          </div>\r\n                                        </td>\r\n                                        {isDirector && (\r\n                                          <td className=\"text-center\">\r\n                                            {addingFavorite && taskIdSelected === sst.task_id ? (\r\n                                              <Spinner size=\"sm\" color=\"warning\" />\r\n                                            ) : (\r\n                                              <abbr\r\n                                                title=\"Mark task\"\r\n                                                style={{ textDecoration: 'none' }}\r\n                                              >\r\n                                                <button\r\n                                                  type=\"button\"\r\n                                                  className=\"fav-btn\"\r\n                                                  onClick={() => handleFavorite(sst.task_id)}\r\n                                                >\r\n                                                  <MaterialIcon\r\n                                                    icon=\"star\"\r\n                                                    className={`${sst.isFavorite && 'is_favorite'}`}\r\n                                                  />\r\n                                                </button>\r\n                                              </abbr>\r\n                                            )}\r\n                                          </td>\r\n                                        )}\r\n                                      </tr>\r\n                                    ))}\r\n                                </Fragment>\r\n                              ))}\r\n                          </Fragment>\r\n                        ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan=\"9\" align=\"center\">\r\n                            No data available\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </Col>\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      {modal && <TaskPopup {...{ modal, setModal, toggle, task }} mode=\"activities\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActivityTab;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport newDate from '../../utils/formatDate';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst ReviewBastTab = ({ setTotalBastReview }) => {\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const [modal, setModal] = useState(false);\r\n  const [mode, setMode] = useState('');\r\n  const [comments, setComments] = useState();\r\n  const [oldPic, setOldPic] = useState();\r\n  const [notifTo, setNotifTo] = useState();\r\n  const [reviewBy, setReviewBy] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['bast-review'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}/${auth?.user.employe_id}/bast/review`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setTotalBastReview(10);\r\n  }, [data]);\r\n\r\n  const handleForm = (modeRes, oldPicP, notifToId, byEmploye) => {\r\n    setModal(true);\r\n    setMode(modeRes);\r\n    setOldPic(oldPicP || null);\r\n    setNotifTo(notifToId);\r\n    setReviewBy(byEmploye);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    await api\r\n      .post(`api/project/${data?.history_id}/bast/approval`, {\r\n        project_id: projectId,\r\n        old_pic: oldPic,\r\n        notif_to: notifTo,\r\n        review_by: reviewBy,\r\n        status: mode === 'approve' ? 'handover' : 'revision',\r\n        note: comments,\r\n      })\r\n      .then(() => {\r\n        refetch();\r\n        alert('success', `BAST has been ${mode === 'approve' ? 'approved' : 'reviewed'}`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setModal(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        {isLoading ? (\r\n          <Card>\r\n            <CardBody>Loading...</CardBody>\r\n          </Card>\r\n        ) : error ? (\r\n          'Something went wrong.'\r\n        ) : (\r\n          <Card className=\"custom-card\">\r\n            {data && (\r\n              <CardBody>\r\n                <CardTitle tag=\"h4\" className=\"d-flex justify-content-between\">\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Badge color=\"light\" className=\"text-dark\">\r\n                      Review BAST\r\n                    </Badge>\r\n                  </div>\r\n                  <span style={{ fontSize: '14px' }}>{newDate(data.created_at)}</span>\r\n                </CardTitle>\r\n                <div className=\"d-flex  justify-content-center\">\r\n                  <h5>\r\n                    Handover of the project from <strong>{data.old_pic_division}</strong> to{' '}\r\n                    <strong>{data.new_pic_division}</strong>\r\n                  </h5>\r\n                </div>\r\n                <span className=\"text-dark\">BAST file:</span>\r\n                <div className=\"\">\r\n                  <div className=\"d-flex gap-3\">\r\n                    <Link className=\"file-link\" to=\"\" target=\"blank\">\r\n                      {data.file}\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center mt-4 border  py-2 px-3\"\r\n                  style={{ borderRadius: '10px' }}\r\n                >\r\n                  <div className=\"d-flex gap-4\">\r\n                    <div className=\"d-flex gap-3 align-items-center\">\r\n                      <img\r\n                        src={user1}\r\n                        className=\"rounded-circle\"\r\n                        alt=\"avatar\"\r\n                        width=\"45\"\r\n                        height=\"45\"\r\n                      />\r\n                      <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-dark fw-bold\">{data.old_pic}</span>\r\n                        <small className=\"text-muted\">{data.old_pic_division}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      color=\"warning\"\r\n                      outline\r\n                      onClick={() => handleForm('revision', data.old_pic_id, data.review_by)}\r\n                    >\r\n                      Revision\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      color=\"success\"\r\n                      onClick={() =>\r\n                        handleForm('approve', data.old_pic_id, data.new_pic_id, data.review_by)\r\n                      }\r\n                    >\r\n                      Approve\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            )}\r\n          </Card>\r\n        )}\r\n      </Col>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>\r\n          {mode === 'approve' ? 'Approval' : 'Revision'}\r\n        </ModalHeader>\r\n        <Form onSubmit={handleSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                id=\"goals\"\r\n                name=\"goals\"\r\n                placeholder=\"Comment here..\"\r\n                rows=\"3\"\r\n                required\r\n                onChange={(e) => setComments(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color={`${mode === 'approve' ? 'success' : 'warning'}`}\r\n              disabled={loading}\r\n              className=\"d-flex gap-1 align-items-center\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" />\r\n                  Sending...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <MaterialIcon icon=\"send\" style={{ fontSize: '20px' }} />\r\n                  {mode === 'approve' ? 'Approve' : 'Send'}\r\n                </>\r\n              )}\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nReviewBastTab.propTypes = {\r\n  setTotalBastReview: PropTypes.func,\r\n};\r\n\r\nexport default ReviewBastTab;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport OverviewTab from './OverviewTab';\r\nimport BoardTab from './BoardTab';\r\nimport MemberTab from './MemberTab';\r\nimport FileTab from './FileTab';\r\nimport ReviewTab from './ReviewTab';\r\nimport HandoverTab from './HandoverTab';\r\nimport ActivityTab from './ActivityTab';\r\nimport ReviewBastTab from './ReviewBastTab';\r\n\r\nconst ProjectDetailTab = ({ navActive, setTotalReview, setTotalBastReview, roles }) => {\r\n  return (\r\n    <>\r\n      {navActive === 1 && <OverviewTab />}\r\n      {!roles.includes('Director') && navActive === 2 && <BoardTab />}\r\n      {navActive === 3 && <MemberTab />}\r\n      {navActive === 4 && <FileTab />}\r\n      {navActive === 5 && <ReviewTab {...{ setTotalReview }} />}\r\n      {!roles.includes('Director') && navActive === 6 && <HandoverTab />}\r\n      {navActive === 7 && <ActivityTab />}\r\n      {navActive === 8 && <ReviewBastTab {...{ setTotalBastReview }} />}\r\n    </>\r\n  );\r\n};\r\n\r\nProjectDetailTab.propTypes = {\r\n  navActive: PropTypes.any,\r\n  setTotalReview: PropTypes.func,\r\n  setTotalBastReview: PropTypes.func,\r\n  roles: PropTypes.array,\r\n};\r\n\r\nexport default ProjectDetailTab;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport makeAnimated from 'react-select/animated';\r\nimport Select from 'react-select';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst EditProjectModal = ({ modal, setModal, toggle, data, refetch }) => {\r\n  const [projectData, setProjectData] = useState({});\r\n  const [dataUpdate, setDataUpdate] = useState({});\r\n  const [options, setOptions] = useState({});\r\n  const [partnerOptions, setPartnerOptions] = useState([]);\r\n  const [partner, setPartner] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [anotherBaseId, setAnotherBaseId] = useState(false);\r\n  const [isSavingBaseId, setIsSavingBaseId] = useState(false);\r\n  const [newBaseId, setNewBaseId] = useState();\r\n  const [businessPlan, setBusinessPlan] = useState({});\r\n  const [defaultPartner, setDefaultPartner] = useState({});\r\n  const [defaultBusinessPlan, setDefaultBusinessPlan] = useState();\r\n  const [otherPartner, setOtherPartner] = useState(false);\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const api = useAxios();\r\n\r\n  useEffect(() => {\r\n    setProjectData(data);\r\n    setDataUpdate({\r\n      project_number: data?.project_number,\r\n      project_name: data?.project_name,\r\n      goals: data?.goals,\r\n      estimated_income: data?.estimated_income,\r\n      estimated_cost: data?.estimated_cost,\r\n      base_id: data?.base_id,\r\n      level_id: data?.level_id,\r\n      business_id: data?.business_id,\r\n      category: data?.category,\r\n      start_date: data?.current_stage?.start_date,\r\n      end_date: data?.current_stage?.end_date,\r\n      desc: data?.current_stage?.desc,\r\n      partner: data?.current_stage?.partner_id,\r\n    });\r\n\r\n    setDefaultBusinessPlan({\r\n      value: data?.business_id,\r\n      label: data?.business_desc,\r\n    });\r\n\r\n    setDefaultPartner({\r\n      value: data?.current_stage?.partner_name,\r\n      label: data?.current_stage?.partner_name,\r\n    });\r\n  }, [data]);\r\n\r\n  const fetchBusinessOptions = async () => {\r\n    await api\r\n      .get(`api/project/business/options`)\r\n      .then((res) => setOptions(res.data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchPartnerOptions() {\r\n      await api\r\n        .get(`api/list-mitra`)\r\n        .then((res) => setPartnerOptions(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchBusinessOptions();\r\n    fetchPartnerOptions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    partnerOptions.unshift({ label: 'TAMBAH LAINNYA', value: 'LAINNYA' });\r\n  }, [partnerOptions]);\r\n\r\n  useEffect(() => {\r\n    if (partner?.value === 'LAINNYA') {\r\n      setOtherPartner(true);\r\n      setPartner({});\r\n    }\r\n  }, [partner]);\r\n\r\n  const handleChange = (e) => {\r\n    setDataUpdate((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dataUpdate?.base_id === 'another') {\r\n      setAnotherBaseId(true);\r\n    }\r\n  }, [dataUpdate]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    dataUpdate.stage_id = projectData?.current_stage?.stage_id;\r\n    dataUpdate.partner =\r\n      Object.keys(partner)?.length !== 0\r\n        ? partner.value\r\n        : dataUpdate?.partner\r\n        ? dataUpdate?.partner\r\n        : data?.current_stage?.partner_name;\r\n    dataUpdate.business_id =\r\n      Object.keys(businessPlan)?.length !== 0 ? businessPlan.value : data?.business_id;\r\n\r\n    await api\r\n      .patch(`api/project/${projectData?.project_id}/update`, dataUpdate)\r\n      .then(() => {\r\n        refetch();\r\n        alert('success', 'Project has been updated.');\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Something went wrong.');\r\n      });\r\n    setOtherPartner(false);\r\n    setLoading(false);\r\n    setModal(false);\r\n  };\r\n\r\n  const submitBaseId = async () => {\r\n    setIsSavingBaseId(true);\r\n    if (newBaseId) {\r\n      await api\r\n        .post('api/project/activity-base/add', { activity_name: newBaseId })\r\n        .then((res) => {\r\n          fetchBusinessOptions();\r\n          alert('success', res.data.message);\r\n        })\r\n        .catch(() => {\r\n          alert('error', 'Something went wrong');\r\n        });\r\n    } else {\r\n      alert('error', 'Field cannot be empty');\r\n    }\r\n    setNewBaseId();\r\n    setAnotherBaseId(false);\r\n    setIsSavingBaseId(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"lg\" fade={false}>\r\n        <ModalHeader toggle={toggle.bind(null)}>Update Project</ModalHeader>\r\n        <Form onSubmit={handleSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label htmlFor=\"project_number\">Project Number</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"project_number\"\r\n                id=\"project_number\"\r\n                placeholder=\"Project number here\"\r\n                onChange={handleChange}\r\n                defaultValue={projectData?.project_number || ''}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"project_name\">Project name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"project_name\"\r\n                id=\"project_name\"\r\n                placeholder=\"Project name here\"\r\n                onChange={handleChange}\r\n                defaultValue={projectData?.project_name}\r\n              />\r\n            </FormGroup>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"start_date\">Start date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    id=\"start_date\"\r\n                    name=\"start_date\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.current_stage?.start_date || ''}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"end_date\">End date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    id=\"end_date\"\r\n                    name=\"end_date\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.current_stage?.end_date || ''}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <FormGroup>\r\n              <Label htmlFor=\"goals\">Goals</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                id=\"goals\"\r\n                name=\"goals\"\r\n                placeholder=\"Explain the goals of the project here\"\r\n                rows=\"3\"\r\n                onChange={handleChange}\r\n                defaultValue={projectData?.goals || ''}\r\n              />\r\n            </FormGroup>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"level_id\">Activity level</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    id=\"level_id\"\r\n                    name=\"level_id\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.level_id || ''}\r\n                  >\r\n                    <option disabled value=\"al\">\r\n                      - Select -\r\n                    </option>\r\n                    {options?.activity_level?.map((al) => (\r\n                      <option key={al.level_id} value={al.level_id}>\r\n                        {al.level_desc}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"category\">Category</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    id=\"category\"\r\n                    name=\"category\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.category || ''}\r\n                  >\r\n                    <option disabled value=\"cat\">\r\n                      - Select -\r\n                    </option>\r\n                    <option value=\"business\">Business</option>\r\n                    <option value=\"non-business\">Non-business</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            {(projectData?.category === 'business' || dataUpdate?.category === 'business') && (\r\n              <>\r\n                <FormGroup>\r\n                  <Label for=\"partner\">Partner</Label>\r\n                  {otherPartner ? (\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"partner\"\r\n                      id=\"partner\"\r\n                      placeholder=\"Type here..\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Select\r\n                      components={animatedComponents}\r\n                      options={partnerOptions}\r\n                      defaultValue={defaultPartner}\r\n                      onChange={(choice) => setPartner(choice)}\r\n                    />\r\n                  )}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"desc\">Description for Initiation & Definition phase</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    id=\"desc\"\r\n                    name=\"desc\"\r\n                    placeholder=\"Description of the phase here\"\r\n                    rows=\"3\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.current_stage?.desc}\r\n                  />\r\n                </FormGroup>\r\n                <Row>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"estimated_income\">Estimated income</Label>\r\n                      <InputGroup>\r\n                        <InputGroupText>Rp.</InputGroupText>\r\n                        <Input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          id=\"estimated_income\"\r\n                          name=\"estimated_income\"\r\n                          onChange={handleChange}\r\n                          defaultValue={projectData?.estimated_income || ''}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"estimated_cost\">Estimated cost</Label>\r\n                      <InputGroup>\r\n                        <InputGroupText>Rp.</InputGroupText>\r\n                        <Input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          id=\"estimated_cost\"\r\n                          name=\"estimated_cost\"\r\n                          onChange={handleChange}\r\n                          defaultValue={projectData?.estimated_cost || ''}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            )}\r\n            {anotherBaseId ? (\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"activity_name\">Add Activity Base</Label>\r\n                    <div className=\"d-flex gap-3\">\r\n                      <div style={{ width: '70%' }}>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"activity_name\"\r\n                          id=\"activity_name\"\r\n                          placeholder=\"Type here..\"\r\n                          onChange={(e) => setNewBaseId(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <Button\r\n                        className=\"d-flex align-items-center\"\r\n                        type=\"button\"\r\n                        color=\"success\"\r\n                        size=\"sm\"\r\n                        onClick={submitBaseId}\r\n                        disabled={isSavingBaseId}\r\n                      >\r\n                        {isSavingBaseId ? (\r\n                          <>\r\n                            <Spinner className=\"me-2\" size=\"sm\" color=\"light\" />\r\n                            Loading\r\n                          </>\r\n                        ) : (\r\n                          'Save'\r\n                        )}\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        outline\r\n                        onClick={() => setAnotherBaseId(false)}\r\n                        disabled={isSavingBaseId}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            ) : (\r\n              <Row>\r\n                <Col md=\"6\">\r\n                  <FormGroup>\r\n                    <Label for=\"base_id\">Activity base</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"base_id\"\r\n                      name=\"base_id\"\r\n                      defaultValue={projectData?.base_id || ''}\r\n                      onChange={handleChange}\r\n                      style={{ textOverflow: 'ellipsis' }}\r\n                    >\r\n                      <option disabled value=\"ab\">\r\n                        - Select -\r\n                      </option>\r\n                      {options?.activity_base?.map((ab) => (\r\n                        <option\r\n                          key={ab.base_id}\r\n                          value={ab.base_id}\r\n                          style={{\r\n                            width: '4rem',\r\n                            textOverflow: 'ellipsis',\r\n                          }}\r\n                        >\r\n                          {ab.base_description}\r\n                        </option>\r\n                      ))}\r\n                      <option value=\"another\">Tambah Lainnya</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <FormGroup>\r\n                    <Label for=\"business_id\" className=\"text-muted\">\r\n                      Business plan\r\n                    </Label>\r\n                    {dataUpdate?.base_id === '3' || projectData?.base_id?.toString() === '3' ? (\r\n                      <Select\r\n                        components={animatedComponents}\r\n                        options={options?.business_plan}\r\n                        defaultValue={defaultBusinessPlan}\r\n                        onChange={(choice) => setBusinessPlan(choice)}\r\n                      />\r\n                    ) : (\r\n                      <Input type=\"select\" disabled defaultValue=\"\" />\r\n                    )}\r\n                    {/* <Input\r\n                      type=\"select\"\r\n                      id=\"business_id\"\r\n                      name=\"business_id\"\r\n                      disabled={dataUpdate?.base_id?.toString() !== '3'}\r\n                      onChange={handleChange}\r\n                      defaultValue={projectData?.business_id || ''}\r\n                    >\r\n                      {projectData?.base_id?.toString() === '3' && (\r\n                        <>\r\n                          <option value=\"\">- Select -</option>\r\n                          {options?.business_plan?.map((bp) => (\r\n                            <option key={bp.business_id} value={bp.business_id}>\r\n                              {bp.business_desc}\r\n                            </option>\r\n                          ))}\r\n                        </>\r\n                      )}\r\n                    </Input> */}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button type=\"submit\" color=\"info\" disabled={loading}>\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" color=\"light\" />\r\n                  Loading ...\r\n                </>\r\n              ) : (\r\n                'Update'\r\n              )}\r\n            </Button>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nEditProjectModal.propTypes = {\r\n  modal: PropTypes.bool,\r\n  setModal: PropTypes.func,\r\n  toggle: PropTypes.any,\r\n  data: PropTypes.object,\r\n  refetch: PropTypes.func,\r\n};\r\n\r\nexport default EditProjectModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport './Project.scss';\r\nimport EditProjectModal from './EditProjectModal';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst allowedRolesForReview = ['Manager', 'Director'];\r\nconst allowedRolesForBastReview = ['Director'];\r\n\r\nconst ProjectNav = ({ navActive, setNavActive, totalReview, totalBastReview }) => {\r\n  const [currentTotalReview, setCurrentTotalReview] = useState('');\r\n  const [currentTotalBastReview, setCurrentTotalBastReview] = useState(0);\r\n  const { auth } = useAuth();\r\n  const { roles } = auth.user;\r\n  const api = useAxios();\r\n  const { projectId } = useParams();\r\n  const [actionMenu, setActionMenu] = useState(false);\r\n  const [isBusiness, setIsBusiness] = useState();\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const [modal2, setModal2] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const navigate = useNavigate();\r\n  // const [actionMenu, setActionMenu] = useState(undefined);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const toggle2 = () => {\r\n    setModal2(!modal2);\r\n  };\r\n\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n\r\n  const queryTo = queryParams.get('to');\r\n\r\n  useEffect(() => {\r\n    if (queryTo === 'review') {\r\n      setNavActive(5);\r\n    } else if (queryTo === 'handover') {\r\n      setNavActive(6);\r\n    } else if (queryTo === 'overview') {\r\n      setNavActive(1);\r\n    } else if (queryTo === 'activities') {\r\n      setNavActive(7);\r\n    } else if (queryTo === 'bast-review') {\r\n      setNavActive(8);\r\n    }\r\n  }, [queryParams]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalReview() {\r\n      await api\r\n        .get(`api/task/${projectId}/level1/review`)\r\n        .then((res) => setCurrentTotalReview(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n    if (roles?.find((role) => allowedRolesForReview.includes(role))) {\r\n      fetchTotalReview();\r\n    }\r\n  }, [totalReview]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalBastReview() {\r\n      await api\r\n        .get(`api/project/${projectId}/${auth?.user.employe_id}/bast/review`)\r\n        .then((res) => {\r\n          setCurrentTotalBastReview(res.data.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    if (roles?.find((role) => allowedRolesForBastReview.includes(role))) {\r\n      fetchTotalBastReview();\r\n    }\r\n  }, [totalBastReview]);\r\n\r\n  const { isLoading, data, refetch } = useQuery({\r\n    queryKey: ['project-number'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  useEffect(() => {\r\n    if (data?.category === 'business') {\r\n      setIsBusiness(true);\r\n    } else {\r\n      setIsBusiness(false);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleUpdate = () => {\r\n    setModal(true);\r\n    setActionMenu(undefined);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setModal2(!modal2);\r\n    setActionMenu(false);\r\n  };\r\n\r\n  const deleteProject = async () => {\r\n    setIsDeleting(true);\r\n    await api\r\n      .delete(`api/project/${projectId}`)\r\n      .then(() => {\r\n        alert('success', 'Project has been deleted.');\r\n        navigate('/projects');\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Something went wrong.');\r\n      });\r\n    setModal2(!modal2);\r\n    setIsDeleting(false);\r\n  };\r\n\r\n  const BoardAllowedRoles = ['Staff', 'Manager'];\r\n  const MembersAllowedRoles = ['Staff', 'Manager', 'Director'];\r\n  const ActivitiesAllowedRoles = ['Manager', 'Director'];\r\n  const FilesAllowedRoles = ['Staff', 'Manager'];\r\n  const BASTReviewAllowedRoles = ['Director'];\r\n  const BASTAndReviewNotAllowedRoles = 'Presdir';\r\n  const ReviewTaskAllowedRoles = ['Manager', 'Director'];\r\n  const HandoverAllowedRoles = ['Manager'];\r\n\r\n  return (\r\n    <>\r\n      <Col className=\"nav-container mb-3\">\r\n        <Row sm=\"12\" lg=\"8\" className=\"project-nav overflow-auto\">\r\n          <Link\r\n            className={`${navActive === 1 && 'active'} text-muted fw-bold`}\r\n            onClick={() => setNavActive(1)}\r\n          >\r\n            Overview\r\n          </Link>\r\n          {auth?.user?.roles.find((role) => BoardAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 2 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(2)}\r\n            >\r\n              Board\r\n            </Link>\r\n          )}\r\n          {auth?.user?.roles.find((role) => ActivitiesAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 7 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(7)}\r\n            >\r\n              Activities\r\n            </Link>\r\n          )}\r\n          {auth?.user?.roles.find((role) => FilesAllowedRoles.includes(role)) && (\r\n            <>\r\n              <Link\r\n                className={`${navActive === 4 && 'active'} text-muted fw-bold`}\r\n                onClick={() => setNavActive(4)}\r\n              >\r\n                Files\r\n              </Link>\r\n            </>\r\n          )}\r\n          {auth?.user?.roles.find((role) => BASTReviewAllowedRoles.includes(role)) &&\r\n            !auth?.user?.roles.includes(BASTAndReviewNotAllowedRoles) && (\r\n              <Link\r\n                className={`${navActive === 8 && 'active'} text-muted fw-bold`}\r\n                onClick={() => setNavActive(8)}\r\n              >\r\n                BAST Review{' '}\r\n                <div\r\n                  color=\"danger\"\r\n                  className={`count ${\r\n                    currentTotalBastReview ? 'bg-danger text-white' : 'bg-light text-dark'\r\n                  }`}\r\n                >\r\n                  {currentTotalBastReview?.length}\r\n                </div>\r\n              </Link>\r\n            )}\r\n          {auth?.user?.roles.find((role) => ReviewTaskAllowedRoles.includes(role)) && (\r\n            <>\r\n              <Link\r\n                className={`${navActive === 5 && 'active'} text-muted fw-bold`}\r\n                onClick={() => setNavActive(5)}\r\n              >\r\n                Review{' '}\r\n                <div\r\n                  color=\"danger\"\r\n                  className={`count ${\r\n                    currentTotalReview?.length > 0 ? 'bg-danger text-white' : 'bg-light text-dark'\r\n                  }`}\r\n                >\r\n                  {currentTotalReview?.length}\r\n                </div>\r\n              </Link>\r\n            </>\r\n          )}\r\n          {auth?.user?.roles.find((role) => HandoverAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 6 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(6)}\r\n            >\r\n              Handover{' '}\r\n            </Link>\r\n          )}\r\n          {auth?.user?.roles.find((role) => MembersAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 3 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(3)}\r\n            >\r\n              Members\r\n            </Link>\r\n          )}\r\n        </Row>\r\n        <Row\r\n          sm=\"12\"\r\n          style={{\r\n            fontSize: '20px',\r\n            marginRight: '10px',\r\n            textAlign: 'right',\r\n            minWidth: '35%',\r\n          }}\r\n        >\r\n          <span className=\"fw-bold\">{isLoading ? 'Loading..' : data?.project_number}</span>\r\n        </Row>\r\n      </Col>\r\n      <Card className=\"rounded-3 mb-3\">\r\n        <CardBody>\r\n          {isLoading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            <Row>\r\n              <Col lg=\"8\">\r\n                <Row md=\"12\">\r\n                  <h5 className=\"fw-bold\">{data?.project_name}</h5>\r\n                </Row>\r\n                {isBusiness ? (\r\n                  <Row lg=\"12\">\r\n                    <Col sm=\"12 mb-2\" md=\"4\">\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <MaterialIcon\r\n                          icon=\"manage_accounts\"\r\n                          className=\"text-muted\"\r\n                          style={{ fontSize: '28px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column\">\r\n                          <span\r\n                            className=\"text-muted\"\r\n                            style={{ fontSize: '10px', marginBottom: '-4px' }}\r\n                          >\r\n                            Partner\r\n                          </span>\r\n                          <small className=\"fw-bold\">\r\n                            {data?.current_stage?.partner_name || '-'}\r\n                          </small>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col sm=\"12 mb-2\" md=\"4\">\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <MaterialIcon\r\n                          icon=\"handshake\"\r\n                          className=\"text-muted\"\r\n                          style={{ fontSize: '28px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column\">\r\n                          <span\r\n                            className=\"text-muted\"\r\n                            style={{ fontSize: '10px', marginBottom: '-4px' }}\r\n                          >\r\n                            Schema\r\n                          </span>\r\n                          <small className=\"fw-bold\">\r\n                            {data?.current_stage?.schema === 'jo'\r\n                              ? 'Join Operational'\r\n                              : data?.current_stage?.schema === 'jv'\r\n                              ? 'Join Venture'\r\n                              : '-'}\r\n                          </small>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col sm=\"12 mb-2\" md=\"4\">\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <MaterialIcon\r\n                          icon=\"play_circle_outline\"\r\n                          className=\"text-muted\"\r\n                          style={{ fontSize: '28px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column\">\r\n                          <span\r\n                            className=\"text-muted\"\r\n                            style={{ fontSize: '10px', marginBottom: '-4px' }}\r\n                          >\r\n                            Phase\r\n                          </span>\r\n                          <small className=\"fw-bold\">{data?.current_stage?.phase}</small>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ) : (\r\n                  <Row lg=\"12\">\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <MaterialIcon icon=\"work_off\" style={{ fontSize: '18px' }} />\r\n                      <small className=\"fw-bold\">Non-business</small>\r\n                    </div>\r\n                  </Row>\r\n                )}\r\n              </Col>\r\n              <Col lg=\"4\" className=\"d-flex align-items-center justify-content-end\">\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <div\r\n                    className=\"d-flex flex-column align-items-end\"\r\n                    style={{ marginLeft: '10px' }}\r\n                  >\r\n                    <small className=\"fw-bold\">{data?.pic_active.first_name}</small>\r\n                    <span className=\"fw-bold\" style={{ fontSize: '14px' }}>\r\n                      {data?.pic_active.organization_name}\r\n                    </span>\r\n                    {/* {data?.category === 'business' && (\r\n                      <span className=\"badge text-primary bg-light-primary rounded-pill d-inline-block fw-bold\">\r\n                        <div className=\"d-flex justify-content-center gap-1 align-items-center\">\r\n                          <MaterialIcon icon=\"play_circle_outline\" style={{ fontSize: '12px' }} />\r\n                          {data?.current_stage??.phase}\r\n                        </div>\r\n                      </span>\r\n                    )} */}\r\n                  </div>\r\n                  <img src={user1} className=\"rounded-circle\" alt=\"avatar\" width=\"35\" height=\"35\" />\r\n                  {auth?.user.first_name === data?.created_by ? (\r\n                    <div className=\"action-table\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn d-flex\"\r\n                        onClick={() => setActionMenu(true)}\r\n                      >\r\n                        <MaterialIcon icon=\"more_vert\" />\r\n                      </button>\r\n                      {actionMenu && (\r\n                        <>\r\n                          <div className=\"action-overlay\" onClick={() => setActionMenu(false)} />\r\n                          <div className=\"action-options\">\r\n                            <Link type=\"button\" className=\"text-muted\" onClick={handleUpdate}>\r\n                              <MaterialIcon icon=\"update\" />\r\n                              Update\r\n                            </Link>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"text-muted fw-bold\"\r\n                              onClick={handleDelete}\r\n                            >\r\n                              <MaterialIcon icon=\"delete\" />\r\n                              Delete\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n                <EditProjectModal {...{ modal, setModal, toggle, data, refetch }} />\r\n                <Modal isOpen={modal2} toggle={toggle2.bind(null)} centered>\r\n                  <ModalHeader toggle={toggle2.bind(null)}>Confirmation</ModalHeader>\r\n                  <ModalBody>\r\n                    <div className=\"d-flex flex-column align-items-center\">\r\n                      <h4>{data?.project_name}</h4>\r\n                      Are you sure you want to delete this project?\r\n                    </div>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color=\"danger\" size=\"sm\" onClick={deleteProject} disabled={isDeleting}>\r\n                      {isDeleting ? 'Deleting..' : 'Yes'}\r\n                    </Button>\r\n                    <Button color=\"secondary\" size=\"sm\" outline onClick={toggle2.bind(null)}>\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n      <Col lg=\"12\">\r\n        <Alert color=\"primary\" className=\"rounded-3\" style={{ fontSize: '14px' }}>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div>\r\n              <span>Ketentuan task terbaru, </span>\r\n              <Link\r\n                to=\"https://drive.google.com/file/d/1So2xTY9FZA8GgWkvIO7zzo8LltyloljZ/view?usp=sharing\"\r\n                target=\"blank\"\r\n                style={{ textDecoration: 'none' }}\r\n              >\r\n                Baca selengkapnya\r\n              </Link>\r\n            </div>\r\n            <MaterialIcon icon=\"info\" />\r\n          </div>\r\n        </Alert>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nProjectNav.propTypes = {\r\n  navActive: PropTypes.any,\r\n  setNavActive: PropTypes.func,\r\n  totalReview: PropTypes.number,\r\n  totalBastReview: PropTypes.number,\r\n};\r\n\r\nexport default ProjectNav;\r\n","import React, { createContext, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst INITIAL_STATE = {\r\n  task: ['satu', 'dua'],\r\n};\r\n\r\nexport const TaskContext = createContext(INITIAL_STATE);\r\n\r\nconst TaskReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_TASK':\r\n      return {\r\n        task: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const TaskContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(TaskReducer, INITIAL_STATE);\r\n\r\n  return (\r\n    <TaskContext.Provider\r\n      value={{\r\n        task: state.task,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n\r\nTaskContextProvider.propTypes = {\r\n  children: PropTypes.element,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport ProjectDetailTab from './ProjectDetailTab';\r\nimport './ProjectDetail.scss';\r\nimport ProjectNav from './ProjectNav';\r\nimport { TaskContextProvider } from '../../context/TaskContext';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst ProjectDetail = () => {\r\n  const { auth } = useAuth();\r\n  const { roles } = auth?.user;\r\n  const [navActive, setNavActive] = useState(2);\r\n  const [totalReview, setTotalReview] = useState(0);\r\n  const [totalBastReview, setTotalBastReview] = useState(0);\r\n  // const [isOwner, setIsOwner] = useState();\r\n\r\n  useEffect(() => {\r\n    if (roles.includes('Director')) {\r\n      setNavActive(1);\r\n    }\r\n  }, [roles]);\r\n\r\n  // const { data } = useQuery({\r\n  //   queryKey: ['employe'],\r\n  //   queryFn: () =>\r\n  //     api.get(`api/employe/${auth?.user.employe_id}`).then((res) => {\r\n  //       setIsOwner()\r\n  //       return res.data.data;\r\n  //     }),\r\n  // });\r\n\r\n  // console.log(data);\r\n\r\n  return (\r\n    <TaskContextProvider>\r\n      <>\r\n        <ProjectNav {...{ navActive, setNavActive, totalReview, totalBastReview }} />\r\n        <ProjectDetailTab {...{ navActive, setTotalReview, setTotalBastReview, roles }} />\r\n      </>\r\n    </TaskContextProvider>\r\n  );\r\n};\r\n\r\nexport default ProjectDetail;\r\n","const IndoDate = (d) => {\r\n  const date = new Date(d);\r\n  //   const hari = ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'];\r\n  const bulan = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'Mei',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Des',\r\n  ];\r\n\r\n  return `${date.getDate()} ${bulan[date.getMonth()]} ${date.getFullYear()}`;\r\n};\r\n\r\nexport default IndoDate;\r\n","const isExpired = (val) => {\r\n  const today = new Date();\r\n  const end = new Date(val);\r\n  const result = (end - today) / (1000 * 60 * 60 * 24);\r\n  return result.toFixed() < 1;\r\n};\r\n\r\nexport default isExpired;\r\n","const rupiah = (number) => {\r\n  return new Intl.NumberFormat('id-ID', {\r\n    style: 'currency',\r\n    currency: 'IDR',\r\n  }).format(number);\r\n};\r\n\r\nexport default rupiah;\r\n"],"names":["_ref","data","color","_jsx","className","children","_jsxs","viewBox","d","strokeDasharray","x","y","style","fontSize","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","title","textAlign","text","margin","image","marginVertical","marginHorizontal","width","height","header","marginBottom","fontWeight","pageNumber","position","bottom","left","right","printAt","table","display","borderStyle","borderWidth","borderRightWidth","borderBottomWidth","tableRow","flexDirection","tableCol","borderLeftWidth","borderTopWidth","tableCell","marginTop","marginLeft","marginRight","today","currentDate","Date","toDateString","toLocaleString","split","projectTitle","Document","Page","backgroundColor","Text","fixed","project_name","partner","division","phase","schema","View","map","item","i","_item$pics","_item$level_","Fragment","task_title","status","end_date","pics","p","first_name","id","level_2","st","_st$pics","task_id","render","_ref2","totalPages","animatedComponents","makeAnimated","remaininDays","endDate","todayBad","day","month","year","getTime","OverviewTab","_data$current_stage2","_data$current_stage3","_data$current_stage4","_data$current_stage5","_data$pic_active","_data$current_stage6","auth","useAuth","projectId","useParams","history","setHistory","useState","modal","setModal","newPic","setNewPic","listEmployee","setListEmploye","loading","setLoading","bst","setBst","activePhase","setActivePhase","undefined","selectedSchema","setSelectedSchema","isBusiness","setIsBusiness","partnerOptions","setPartnerOptions","selectedPartner","setSelectedPartner","progress","setProgress","taskByStatus","setTaskByStatus","todo","inprogress","underReview","done","api","useAxios","toggle","isLoading","error","refetch","useQuery","queryKey","queryFn","get","then","res","useEffect","_data$task_by_active_","_data$task_by_active_2","_data$task_by_active_3","_data$task_by_active_4","_data$current_stage","todofFiltered","task_by_active_user","filter","task","parseInt","inProgressfFiltered","doneFiltered","underReviewFiltered","length","current_stage","phase_id","category","async","post","ids","_res$data$data$","catch","err","console","log","fetchProgress","fetsHistory","fetchEmployees","allTaskPermission","fetchPartnerOptions","_Fragment","Col","lg","Card","CardBody","Row","CardTitle","tag","desc","goals","level_desc","base_description","trim","substring","IndoDate","start_date","borderRadius","src","user1","alt","pic_active","rupiah","estimated_cost","estimated_income","h","_auth$user","organization_name","history_desc","user","roles","find","role","includes","Link","to","organization_id","textDecoration","active","newDate","created_at","history_id","img","TooltipHover","toString","toFixed","Progress","value","MaterialIcon","icon","employe_id","Button","type","disabled","outline","onClick","bind","Modal","isOpen","size","fade","centered","ModalHeader","onSubmit","e","preventDefault","project_id","new_pic","file","headers","alert","ModalBody","FormGroup","Label","Input","name","defaultValue","for","onChange","target","Select","components","options","choice","htmlFor","files","ModalFooter","Spinner","props","setNewTaskOpen","setAddSubtaskOpen","taskId","setTask","assignedEmployees","setAssignedEmployees","navigate","useNavigate","label","handleChange","prev","closeForm","task_pic","task_parent","arrayId","em","push","encType","placeholder","required","rows","assigneModal","isMulti","itemValue","setIsAddingItem","setShowAddSub","selectedActivityId","setSelectedActivityId","setItemValue","val","autoFocus","_Object$keys","Object","keys","dataSub","sub","patch","handleAddItem","addTargetAllowedRoles","addActivityAllowedRoles","addSubActivityAllowedRoles","_auth$user2","directSupervisor","isMemberActive","addSubtaskOpen","updating","setUpdating","taskIdActive","setTaskIdActive","setStatus","showAddSub","isAddingItem","selectedParentId","setSelectedParentId","selectedSubId","setSelectedSubId","isChecking","setIsChecking","isDeletingSub","setIsDeletingSub","idTaskParams","setIdTaskParams","isDuplicating","setIsDuplicating","levelTaskClicked","setLevelTaskClicked","userRoles","userId","openPopup","selectedTask","handleTaskStatus","taskStatus","put","response","duplicateFn","tid","setTimeout","menuOptions","queryParams","URLSearchParams","window","location","search","params","objDiv","document","getElementById","scrollIntoView","td","_td$level_","_td$pics","_td$pics2","Badge","task_progress","ActionMenu","action","comments","TaskForm","l2","_l2$level_","CircularPercentage","level_3","l3","_JSON$parse","JSON","parse","picIds","index","handleShowAddSub","TaskFormAddSub","checkedId","updateArr","handleCheck","selectedId","obj","handleDeleteSub","isExpired","pic","idx","TaskPopup","newTaskAllowedRoles","isRefetching","newTaskOpen","block","BoardTask","removeDuplicates","arr","findIndex","BoardTab","todos","setTodos","inProgress","setInProgress","Done","setDone","setDirectSupervisor","setIsMemberActive","is_member_active","direct_supervisor","taska","DoneFiltered","BoardToDo","BoardInProgress","BoardDone","MemberTab","totalTask","setTotalTask","count_task","RoundedTable","overflow","m","position_name","row","selectedCount","FileTab","_sortFileByDate","Table","hover","zIndex","sort","a","b","reverse","f","file_name","employee","file_id","colSpan","setTotalReview","mode","setMode","setTaskId","setComments","employeId","setEmployeId","listReview","setListReview","handleForm","modeRes","employe","_IndoDate","_IndoDate2","send_date","task_desc","approval_id","Form","note","HandoverTab","newStage","setNewStage","from_division","to_division","old_pic","message","md","level2Progress","level3","sum","total","level1Progress","level2","ActivityTab","taskIdSelected","setTaskIdSelected","addingFavorite","setAddingFavorite","isDirector","setIsDirector","setProjectTitle","filterSearch","setFilterSearch","useLocation","project","handleFavorite","favoriteAllowedRoles","reportTaskAllowedRoles","anchorEl","setAnchorEl","React","open","Boolean","sm","bsSize","filterByTitle","toLowerCase","handleSearch","variant","event","currentTarget","Popover","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","sx","PDFDownloadLink","PDFFile","fileName","project_number","minWidth","ts","_ts$level_","_level1Progress","_ts$pics","_ts$pics2","_ts$level_2","_ts$level_3","cursor","_pic$id","isFavorite","si","_st$level_","_level2Progress","_st$pics2","_st$level_2","_st$level_3","_pic$id2","sst","ssi","_sst$task_progress","_sst$pics","_sst$pics2","_pic$id3","align","setTotalBastReview","oldPic","setOldPic","notifTo","setNotifTo","reviewBy","setReviewBy","oldPicP","notifToId","byEmploye","old_pic_division","new_pic_division","old_pic_id","review_by","new_pic_id","notif_to","navActive","ReviewTab","ReviewBastTab","_projectData$current_2","_projectData$current_3","_options$activity_lev","_projectData$current_4","_options$activity_bas","_projectData$base_id","projectData","setProjectData","dataUpdate","setDataUpdate","setOptions","setPartner","anotherBaseId","setAnotherBaseId","isSavingBaseId","setIsSavingBaseId","newBaseId","setNewBaseId","businessPlan","setBusinessPlan","defaultPartner","setDefaultPartner","defaultBusinessPlan","setDefaultBusinessPlan","otherPartner","setOtherPartner","base_id","level_id","business_id","partner_id","business_desc","partner_name","fetchBusinessOptions","unshift","_projectData$current_","_data$current_stage7","_Object$keys2","stage_id","activity_level","al","InputGroup","InputGroupText","min","activity_name","textOverflow","activity_base","ab","business_plan","allowedRolesForReview","allowedRolesForBastReview","_auth$user3","_auth$user4","_auth$user5","_auth$user6","_auth$user7","_auth$user8","setNavActive","totalReview","totalBastReview","currentTotalReview","setCurrentTotalReview","currentTotalBastReview","setCurrentTotalBastReview","actionMenu","setActionMenu","modal2","setModal2","isDeleting","setIsDeleting","toggle2","queryTo","fetchTotalReview","fetchTotalBastReview","BoardAllowedRoles","MembersAllowedRoles","ActivitiesAllowedRoles","FilesAllowedRoles","BASTReviewAllowedRoles","ReviewTaskAllowedRoles","HandoverAllowedRoles","created_by","handleUpdate","handleDelete","EditProjectModal","delete","Alert","INITIAL_STATE","TaskContext","createContext","TaskReducer","state","payload","TaskContextProvider","dispatch","useReducer","Provider","ProjectDetail","ProjectNav","ProjectDetailTab","date","getDate","getMonth","getFullYear","number","Intl","NumberFormat","currency","format"],"sourceRoot":""}