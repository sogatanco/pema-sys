{"version":3,"file":"static/js/7587.107a0957.chunk.js","mappings":"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","sources":["../node_modules/react-confirm-alert/lib/index.js","../node_modules/reactstrap/esm/Breadcrumb.js","../node_modules/reactstrap/esm/BreadcrumbItem.js","../node_modules/@tanstack/query-core/src/queriesObserver.ts","../node_modules/@tanstack/react-query/src/useQueries.ts"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp2;\n\nexports.confirmAlert = confirmAlert;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _client = require('react-dom/client');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ReactConfirmAlert = (_temp2 = _class = function (_Component) {\n  _inherits(ReactConfirmAlert, _Component);\n\n  function ReactConfirmAlert() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ReactConfirmAlert);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactConfirmAlert.__proto__ || Object.getPrototypeOf(ReactConfirmAlert)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickButton = function (button) {\n      if (button.onClick) button.onClick();\n      _this.close();\n    }, _this.handleClickOverlay = function (e) {\n      var _this$props = _this.props,\n          closeOnClickOutside = _this$props.closeOnClickOutside,\n          onClickOutside = _this$props.onClickOutside;\n\n      var isClickOutside = e.target === _this.overlay;\n\n      if (closeOnClickOutside && isClickOutside) {\n        onClickOutside();\n        _this.close();\n      }\n\n      e.stopPropagation();\n    }, _this.close = function () {\n      var afterClose = _this.props.afterClose;\n\n      removeBodyClass();\n      removeElementReconfirm(_this.props);\n      removeSVGBlurReconfirm(afterClose);\n    }, _this.keyboard = function (event) {\n      var _this$props2 = _this.props,\n          closeOnEscape = _this$props2.closeOnEscape,\n          onKeypressEscape = _this$props2.onKeypressEscape,\n          onkeyPress = _this$props2.onkeyPress,\n          keyCodeForClose = _this$props2.keyCodeForClose;\n\n      var keyCode = event.keyCode;\n      var isKeyCodeEscape = keyCode === 27;\n\n      if (keyCodeForClose.includes(keyCode)) {\n        _this.close();\n      }\n\n      if (closeOnEscape && isKeyCodeEscape) {\n        onKeypressEscape(event);\n        _this.close();\n      }\n\n      if (onkeyPress) {\n        onkeyPress();\n      }\n    }, _this.componentDidMount = function () {\n      document.addEventListener('keydown', _this.keyboard, false);\n    }, _this.componentWillUnmount = function () {\n      document.removeEventListener('keydown', _this.keyboard, false);\n      _this.props.willUnmount();\n    }, _this.renderCustomUI = function () {\n      var _this$props3 = _this.props,\n          title = _this$props3.title,\n          message = _this$props3.message,\n          buttons = _this$props3.buttons,\n          customUI = _this$props3.customUI;\n\n      var dataCustomUI = {\n        title: title,\n        message: message,\n        buttons: buttons,\n        onClose: _this.close\n      };\n\n      return customUI(dataCustomUI);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ReactConfirmAlert, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          title = _props.title,\n          message = _props.message,\n          buttons = _props.buttons,\n          childrenElement = _props.childrenElement,\n          customUI = _props.customUI,\n          overlayClassName = _props.overlayClassName;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: 'react-confirm-alert-overlay ' + overlayClassName,\n          ref: function ref(dom) {\n            return _this2.overlay = dom;\n          },\n          onClick: this.handleClickOverlay\n        },\n        _react2.default.createElement(\n          'div',\n          { className: 'react-confirm-alert' },\n          customUI ? this.renderCustomUI() : _react2.default.createElement(\n            'div',\n            { className: 'react-confirm-alert-body' },\n            title && _react2.default.createElement(\n              'h1',\n              null,\n              title\n            ),\n            message,\n            childrenElement(),\n            _react2.default.createElement(\n              'div',\n              { className: 'react-confirm-alert-button-group' },\n              buttons.map(function (button, i) {\n                return _react2.default.createElement(\n                  'button',\n                  _extends({\n                    key: i,\n                    className: button.className\n                  }, button, {\n                    onClick: function onClick(e) {\n                      return _this2.handleClickButton(button);\n                    }\n                  }),\n                  button.label\n                );\n              })\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return ReactConfirmAlert;\n}(_react.Component), _class.propTypes = {\n  title: _propTypes2.default.string,\n  message: _propTypes2.default.string,\n  buttons: _propTypes2.default.array.isRequired,\n  childrenElement: _propTypes2.default.func,\n  customUI: _propTypes2.default.func,\n  closeOnClickOutside: _propTypes2.default.bool,\n  closeOnEscape: _propTypes2.default.bool,\n  keyCodeForClose: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  willUnmount: _propTypes2.default.func,\n  afterClose: _propTypes2.default.func,\n  onClickOutside: _propTypes2.default.func,\n  onKeypressEscape: _propTypes2.default.func,\n  onkeyPress: _propTypes2.default.func,\n  overlayClassName: _propTypes2.default.string\n}, _class.defaultProps = {\n  buttons: [{\n    label: 'Cancel',\n    onClick: function onClick() {\n      return null;\n    },\n    className: null\n  }, {\n    label: 'Confirm',\n    onClick: function onClick() {\n      return null;\n    },\n    className: null\n  }],\n  childrenElement: function childrenElement() {\n    return null;\n  },\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  keyCodeForClose: [],\n  willUnmount: function willUnmount() {\n    return null;\n  },\n  afterClose: function afterClose() {\n    return null;\n  },\n  onClickOutside: function onClickOutside() {\n    return null;\n  },\n  onKeypressEscape: function onKeypressEscape() {\n    return null;\n  }\n}, _temp2);\nexports.default = ReactConfirmAlert;\n\n\nvar root = null;\nvar targetId = 'react-confirm-alert';\n\nfunction createSVGBlurReconfirm() {\n  // If has svg ignore to create the svg\n  var svg = document.getElementById('react-confirm-alert-firm-svg');\n  if (svg) return;\n  var svgNS = 'http://www.w3.org/2000/svg';\n  var feGaussianBlur = document.createElementNS(svgNS, 'feGaussianBlur');\n  feGaussianBlur.setAttribute('stdDeviation', '0.3');\n\n  var filter = document.createElementNS(svgNS, 'filter');\n  filter.setAttribute('id', 'gaussian-blur');\n  filter.appendChild(feGaussianBlur);\n\n  var svgElem = document.createElementNS(svgNS, 'svg');\n  svgElem.setAttribute('id', 'react-confirm-alert-firm-svg');\n  svgElem.setAttribute('class', 'react-confirm-alert-svg');\n  svgElem.appendChild(filter);\n\n  document.body.appendChild(svgElem);\n}\n\nfunction removeSVGBlurReconfirm(afterClose) {\n  var svg = document.getElementById('react-confirm-alert-firm-svg');\n  if (svg) {\n    svg.parentNode.removeChild(svg);\n  }\n  document.body.children[0].classList.remove('react-confirm-alert-blur');\n  afterClose();\n}\n\nfunction createElementReconfirm(properties) {\n  var divTarget = document.getElementById(properties.targetId || targetId);\n\n  if (properties.targetId && !divTarget) {\n    console.error('React Confirm Alert:', 'Can not get element id (#' + properties.targetId + ')');\n  }\n\n  if (divTarget) {\n    root = (0, _client.createRoot)(divTarget);\n    root.render(_react2.default.createElement(ReactConfirmAlert, properties));\n  } else {\n    document.body.children[0].classList.add('react-confirm-alert-blur');\n    divTarget = document.createElement('div');\n    divTarget.id = targetId;\n    document.body.appendChild(divTarget);\n    root = (0, _client.createRoot)(divTarget);\n    root.render(_react2.default.createElement(ReactConfirmAlert, properties));\n  }\n}\n\nfunction removeElementReconfirm(properties) {\n  var target = document.getElementById(properties.targetId || targetId);\n  if (target) {\n    root.unmount(target);\n  }\n}\n\nfunction addBodyClass() {\n  document.body.classList.add('react-confirm-alert-body-element');\n}\n\nfunction removeBodyClass() {\n  document.body.classList.remove('react-confirm-alert-body-element');\n}\n\nfunction confirmAlert(properties) {\n  addBodyClass();\n  createSVGBlurReconfirm();\n  createElementReconfirm(properties);\n}","var _excluded = [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Aria label */\n  'aria-label': PropTypes.string,\n  /** Pass children so this component can wrap them */\n  children: PropTypes.node,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change existing className with a new className */\n  cssModule: PropTypes.object,\n  /** Add custom class to list tag */\n  listClassName: PropTypes.string,\n  /** Set a custom element for list tag */\n  listTag: tagPropType,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction Breadcrumb(props) {\n  var className = props.className,\n    listClassName = props.listClassName,\n    cssModule = props.cssModule,\n    children = props.children,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'nav' : _props$tag,\n    _props$listTag = props.listTag,\n    ListTag = _props$listTag === void 0 ? 'ol' : _props$listTag,\n    _props$ariaLabel = props['aria-label'],\n    label = _props$ariaLabel === void 0 ? 'breadcrumb' : _props$ariaLabel,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n}\nBreadcrumb.propTypes = propTypes;\nexport default Breadcrumb;","var _excluded = [\"className\", \"cssModule\", \"active\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Adds a visual \"active\" state to a Breadcrumb Item */\n  active: PropTypes.bool,\n  /** Add custom class to the element */\n  className: PropTypes.string,\n  /** Change existing className with a new className */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction BreadcrumbItem(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    active = props.active,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'li' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n}\nBreadcrumbItem.propTypes = propTypes;\nexport default BreadcrumbItem;","import { difference, replaceAt } from './utils'\nimport { notifyManager } from './notifyManager'\nimport { QueryObserver } from './queryObserver'\nimport { Subscribable } from './subscribable'\nimport type {\n  DefaultedQueryObserverOptions,\n  QueryObserverOptions,\n  QueryObserverResult,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { NotifyOptions } from './queryObserver'\n\ntype QueriesObserverListener = (result: QueryObserverResult[]) => void\n\nexport class QueriesObserver extends Subscribable<QueriesObserverListener> {\n  private client: QueryClient\n  private result: QueryObserverResult[]\n  private queries: QueryObserverOptions[]\n  private observers: QueryObserver[]\n  private observersMap: Record<string, QueryObserver>\n\n  constructor(client: QueryClient, queries?: QueryObserverOptions[]) {\n    super()\n\n    this.client = client\n    this.queries = []\n    this.result = []\n    this.observers = []\n    this.observersMap = {}\n\n    if (queries) {\n      this.setQueries(queries)\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.observers.forEach((observer) => {\n        observer.subscribe((result) => {\n          this.onUpdate(observer, result)\n        })\n      })\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.listeners.size) {\n      this.destroy()\n    }\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.observers.forEach((observer) => {\n      observer.destroy()\n    })\n  }\n\n  setQueries(\n    queries: QueryObserverOptions[],\n    notifyOptions?: NotifyOptions,\n  ): void {\n    this.queries = queries\n\n    notifyManager.batch(() => {\n      const prevObservers = this.observers\n\n      const newObserverMatches = this.findMatchingObservers(this.queries)\n\n      // set options for the new observers to notify of changes\n      newObserverMatches.forEach((match) =>\n        match.observer.setOptions(match.defaultedQueryOptions, notifyOptions),\n      )\n\n      const newObservers = newObserverMatches.map((match) => match.observer)\n      const newObserversMap = Object.fromEntries(\n        newObservers.map((observer) => [observer.options.queryHash, observer]),\n      )\n      const newResult = newObservers.map((observer) =>\n        observer.getCurrentResult(),\n      )\n\n      const hasIndexChange = newObservers.some(\n        (observer, index) => observer !== prevObservers[index],\n      )\n      if (prevObservers.length === newObservers.length && !hasIndexChange) {\n        return\n      }\n\n      this.observers = newObservers\n      this.observersMap = newObserversMap\n      this.result = newResult\n\n      if (!this.hasListeners()) {\n        return\n      }\n\n      difference(prevObservers, newObservers).forEach((observer) => {\n        observer.destroy()\n      })\n\n      difference(newObservers, prevObservers).forEach((observer) => {\n        observer.subscribe((result) => {\n          this.onUpdate(observer, result)\n        })\n      })\n\n      this.notify()\n    })\n  }\n\n  getCurrentResult(): QueryObserverResult[] {\n    return this.result\n  }\n\n  getQueries() {\n    return this.observers.map((observer) => observer.getCurrentQuery())\n  }\n\n  getObservers() {\n    return this.observers\n  }\n\n  getOptimisticResult(queries: QueryObserverOptions[]): QueryObserverResult[] {\n    return this.findMatchingObservers(queries).map((match) =>\n      match.observer.getOptimisticResult(match.defaultedQueryOptions),\n    )\n  }\n\n  private findMatchingObservers(\n    queries: QueryObserverOptions[],\n  ): QueryObserverMatch[] {\n    const prevObservers = this.observers\n    const prevObserversMap = new Map(\n      prevObservers.map((observer) => [observer.options.queryHash, observer]),\n    )\n\n    const defaultedQueryOptions = queries.map((options) =>\n      this.client.defaultQueryOptions(options),\n    )\n\n    const matchingObservers: QueryObserverMatch[] =\n      defaultedQueryOptions.flatMap((defaultedOptions) => {\n        const match = prevObserversMap.get(defaultedOptions.queryHash)\n        if (match != null) {\n          return [{ defaultedQueryOptions: defaultedOptions, observer: match }]\n        }\n        return []\n      })\n\n    const matchedQueryHashes = new Set(\n      matchingObservers.map((match) => match.defaultedQueryOptions.queryHash),\n    )\n    const unmatchedQueries = defaultedQueryOptions.filter(\n      (defaultedOptions) => !matchedQueryHashes.has(defaultedOptions.queryHash),\n    )\n\n    const matchingObserversSet = new Set(\n      matchingObservers.map((match) => match.observer),\n    )\n    const unmatchedObservers = prevObservers.filter(\n      (prevObserver) => !matchingObserversSet.has(prevObserver),\n    )\n\n    const getObserver = (options: QueryObserverOptions): QueryObserver => {\n      const defaultedOptions = this.client.defaultQueryOptions(options)\n      const currentObserver = this.observersMap[defaultedOptions.queryHash!]\n      return currentObserver ?? new QueryObserver(this.client, defaultedOptions)\n    }\n\n    const newOrReusedObservers: QueryObserverMatch[] = unmatchedQueries.map(\n      (options, index) => {\n        if (options.keepPreviousData) {\n          // return previous data from one of the observers that no longer match\n          const previouslyUsedObserver = unmatchedObservers[index]\n          if (previouslyUsedObserver !== undefined) {\n            return {\n              defaultedQueryOptions: options,\n              observer: previouslyUsedObserver,\n            }\n          }\n        }\n        return {\n          defaultedQueryOptions: options,\n          observer: getObserver(options),\n        }\n      },\n    )\n\n    const sortMatchesByOrderOfQueries = (\n      a: QueryObserverMatch,\n      b: QueryObserverMatch,\n    ): number =>\n      defaultedQueryOptions.indexOf(a.defaultedQueryOptions) -\n      defaultedQueryOptions.indexOf(b.defaultedQueryOptions)\n\n    return matchingObservers\n      .concat(newOrReusedObservers)\n      .sort(sortMatchesByOrderOfQueries)\n  }\n\n  private onUpdate(observer: QueryObserver, result: QueryObserverResult): void {\n    const index = this.observers.indexOf(observer)\n    if (index !== -1) {\n      this.result = replaceAt(this.result, index, result)\n      this.notify()\n    }\n  }\n\n  private notify(): void {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({ listener }) => {\n        listener(this.result)\n      })\n    })\n  }\n}\n\ntype QueryObserverMatch = {\n  defaultedQueryOptions: DefaultedQueryObserverOptions\n  observer: QueryObserver\n}\n","'use client'\nimport * as React from 'react'\n\nimport { QueriesObserver, notifyManager } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useIsRestoring } from './isRestoring'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport {\n  ensureStaleTime,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch,\n} from './suspense'\nimport type { QueryFunction, QueryKey } from '@tanstack/query-core'\nimport type { UseQueryOptions, UseQueryResult } from './types'\n\n// This defines the `UseQueryOptions` that are accepted in `QueriesOptions` & `GetOptions`.\n// - `context` is omitted as it is passed as a root-level option to `useQueries` instead.\ntype UseQueryOptionsForUseQueries<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = Omit<UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>, 'context'>\n\n// Avoid TS depth-limit error in case of large array literal\ntype MAXIMUM_DEPTH = 20\n\ntype GetOptions<T> =\n  // Part 1: responsible for applying explicit type parameter to function arguments, if object { queryFnData: TQueryFnData, error: TError, data: TData }\n  T extends {\n    queryFnData: infer TQueryFnData\n    error?: infer TError\n    data: infer TData\n  }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData>\n    : T extends { queryFnData: infer TQueryFnData; error?: infer TError }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError>\n    : T extends { data: infer TData; error?: infer TError }\n    ? UseQueryOptionsForUseQueries<unknown, TError, TData>\n    : // Part 2: responsible for applying explicit type parameter to function arguments, if tuple [TQueryFnData, TError, TData]\n    T extends [infer TQueryFnData, infer TError, infer TData]\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData>\n    : T extends [infer TQueryFnData, infer TError]\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError>\n    : T extends [infer TQueryFnData]\n    ? UseQueryOptionsForUseQueries<TQueryFnData>\n    : // Part 3: responsible for inferring and enforcing type if no explicit parameter was provided\n    T extends {\n        queryFn?: QueryFunction<infer TQueryFnData, infer TQueryKey>\n        select: (data: any) => infer TData\n      }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, unknown, TData, TQueryKey>\n    : T extends { queryFn?: QueryFunction<infer TQueryFnData, infer TQueryKey> }\n    ? UseQueryOptionsForUseQueries<\n        TQueryFnData,\n        unknown,\n        TQueryFnData,\n        TQueryKey\n      >\n    : // Fallback\n      UseQueryOptionsForUseQueries\n\ntype GetResults<T> =\n  // Part 1: responsible for mapping explicit type parameter to function result, if object\n  T extends { queryFnData: any; error?: infer TError; data: infer TData }\n    ? UseQueryResult<TData, TError>\n    : T extends { queryFnData: infer TQueryFnData; error?: infer TError }\n    ? UseQueryResult<TQueryFnData, TError>\n    : T extends { data: infer TData; error?: infer TError }\n    ? UseQueryResult<TData, TError>\n    : // Part 2: responsible for mapping explicit type parameter to function result, if tuple\n    T extends [any, infer TError, infer TData]\n    ? UseQueryResult<TData, TError>\n    : T extends [infer TQueryFnData, infer TError]\n    ? UseQueryResult<TQueryFnData, TError>\n    : T extends [infer TQueryFnData]\n    ? UseQueryResult<TQueryFnData>\n    : // Part 3: responsible for mapping inferred type to results, if no explicit parameter was provided\n    T extends {\n        queryFn?: QueryFunction<unknown, any>\n        select: (data: any) => infer TData\n      }\n    ? UseQueryResult<TData>\n    : T extends { queryFn?: QueryFunction<infer TQueryFnData, any> }\n    ? UseQueryResult<TQueryFnData>\n    : // Fallback\n      UseQueryResult\n\n/**\n * QueriesOptions reducer recursively unwraps function arguments to infer/enforce type param\n */\nexport type QueriesOptions<\n  T extends any[],\n  Result extends any[] = [],\n  Depth extends ReadonlyArray<number> = [],\n> = Depth['length'] extends MAXIMUM_DEPTH\n  ? UseQueryOptionsForUseQueries[]\n  : T extends []\n  ? []\n  : T extends [infer Head]\n  ? [...Result, GetOptions<Head>]\n  : T extends [infer Head, ...infer Tail]\n  ? QueriesOptions<[...Tail], [...Result, GetOptions<Head>], [...Depth, 1]>\n  : unknown[] extends T\n  ? T\n  : // If T is *some* array but we couldn't assign unknown[] to it, then it must hold some known/homogenous type!\n  // use this to infer the param types in the case of Array.map() argument\n  T extends UseQueryOptionsForUseQueries<\n      infer TQueryFnData,\n      infer TError,\n      infer TData,\n      infer TQueryKey\n    >[]\n  ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData, TQueryKey>[]\n  : // Fallback\n    UseQueryOptionsForUseQueries[]\n\n/**\n * QueriesResults reducer recursively maps type param to results\n */\nexport type QueriesResults<\n  T extends any[],\n  Result extends any[] = [],\n  Depth extends ReadonlyArray<number> = [],\n> = Depth['length'] extends MAXIMUM_DEPTH\n  ? UseQueryResult[]\n  : T extends []\n  ? []\n  : T extends [infer Head]\n  ? [...Result, GetResults<Head>]\n  : T extends [infer Head, ...infer Tail]\n  ? QueriesResults<[...Tail], [...Result, GetResults<Head>], [...Depth, 1]>\n  : T extends UseQueryOptionsForUseQueries<\n      infer TQueryFnData,\n      infer TError,\n      infer TData,\n      any\n    >[]\n  ? // Dynamic-size (homogenous) UseQueryOptions array: map directly to array of results\n    UseQueryResult<unknown extends TData ? TQueryFnData : TData, TError>[]\n  : // Fallback\n    UseQueryResult[]\n\nexport function useQueries<T extends any[]>({\n  queries,\n  context,\n}: {\n  queries: readonly [...QueriesOptions<T>]\n  context?: UseQueryOptions['context']\n}): QueriesResults<T> {\n  const queryClient = useQueryClient({ context })\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n\n  const defaultedQueries = React.useMemo(\n    () =>\n      queries.map((options) => {\n        const defaultedOptions = queryClient.defaultQueryOptions(options)\n\n        // Make sure the results are already in fetching state before subscribing or updating options\n        defaultedOptions._optimisticResults = isRestoring\n          ? 'isRestoring'\n          : 'optimistic'\n\n        return defaultedOptions\n      }),\n    [queries, queryClient, isRestoring],\n  )\n\n  defaultedQueries.forEach((query) => {\n    ensureStaleTime(query)\n    ensurePreventErrorBoundaryRetry(query, errorResetBoundary)\n  })\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  const [observer] = React.useState(\n    () => new QueriesObserver(queryClient, defaultedQueries),\n  )\n\n  const optimisticResult = observer.getOptimisticResult(defaultedQueries)\n\n  useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        isRestoring\n          ? () => undefined\n          : observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer, isRestoring],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setQueries(defaultedQueries, { listeners: false })\n  }, [defaultedQueries, observer])\n\n  const shouldAtLeastOneSuspend = optimisticResult.some((result, index) =>\n    shouldSuspend(defaultedQueries[index], result, isRestoring),\n  )\n\n  const suspensePromises = shouldAtLeastOneSuspend\n    ? optimisticResult.flatMap((result, index) => {\n        const options = defaultedQueries[index]\n        const queryObserver = observer.getObservers()[index]\n\n        if (options && queryObserver) {\n          if (shouldSuspend(options, result, isRestoring)) {\n            return fetchOptimistic(options, queryObserver, errorResetBoundary)\n          } else if (willFetch(result, isRestoring)) {\n            void fetchOptimistic(options, queryObserver, errorResetBoundary)\n          }\n        }\n        return []\n      })\n    : []\n\n  if (suspensePromises.length > 0) {\n    throw Promise.all(suspensePromises)\n  }\n  const observerQueries = observer.getQueries()\n  const firstSingleResultWhichShouldThrow = optimisticResult.find(\n    (result, index) =>\n      getHasError({\n        result,\n        errorResetBoundary,\n        useErrorBoundary: defaultedQueries[index]?.useErrorBoundary ?? false,\n        query: observerQueries[index]!,\n      }),\n  )\n\n  if (firstSingleResultWhichShouldThrow?.error) {\n    throw firstSingleResultWhichShouldThrow.error\n  }\n\n  return optimisticResult as QueriesResults<T>\n}\n"],"names":["_class","_temp2","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","exports","properties","document","body","classList","add","getElementById","svgNS","feGaussianBlur","createElementNS","setAttribute","filter","appendChild","svgElem","createSVGBlurReconfirm","divTarget","targetId","console","error","children","createElement","id","root","_client","createRoot","render","_react2","default","ReactConfirmAlert","createElementReconfirm","_react","require","_interopRequireDefault","_propTypes2","obj","__esModule","_possibleConstructorReturn","self","ReferenceError","_Component","_ref","_temp","_this","instance","TypeError","_classCallCheck","this","_len","args","Array","_key","__proto__","getPrototypeOf","apply","concat","handleClickButton","button","onClick","close","handleClickOverlay","e","_this$props","closeOnClickOutside","onClickOutside","isClickOutside","overlay","stopPropagation","afterClose","remove","unmount","removeElementReconfirm","svg","parentNode","removeChild","removeSVGBlurReconfirm","keyboard","event","_this$props2","closeOnEscape","onKeypressEscape","onkeyPress","keyCodeForClose","keyCode","isKeyCodeEscape","includes","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","willUnmount","renderCustomUI","_this$props3","title","message","buttons","customUI","onClose","subClass","superClass","create","constructor","value","setPrototypeOf","_inherits","_this2","_props","childrenElement","overlayClassName","className","ref","dom","map","label","Component","propTypes","string","array","isRequired","func","bool","arrayOf","number","defaultProps","_excluded","bind","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","PropTypes","cssModule","listClassName","listTag","tagPropType","tag","Breadcrumb","_props$tag","Tag","_props$listTag","ListTag","_props$ariaLabel","attributes","classes","mapToCssModules","classNames","listClasses","React","active","BreadcrumbItem","undefined","QueriesObserver","Subscribable","client","queries","super","result","observers","observersMap","setQueries","onSubscribe","listeners","size","forEach","observer","subscribe","onUpdate","onUnsubscribe","destroy","Set","notifyOptions","notifyManager","batch","prevObservers","newObserverMatches","findMatchingObservers","match","setOptions","defaultedQueryOptions","newObservers","newObserversMap","fromEntries","options","queryHash","newResult","getCurrentResult","hasIndexChange","some","index","hasListeners","difference","notify","getQueries","getCurrentQuery","getObservers","getOptimisticResult","prevObserversMap","Map","defaultQueryOptions","matchingObservers","flatMap","defaultedOptions","get","matchedQueryHashes","unmatchedQueries","has","matchingObserversSet","unmatchedObservers","prevObserver","getObserver","currentObserver","QueryObserver","newOrReusedObservers","keepPreviousData","previouslyUsedObserver","sort","sortMatchesByOrderOfQueries","a","b","replaceAt","listener","useQueries","context","defaultedQueries","_optimisticResults","isRestoring","query","ensurePreventErrorBoundaryRetry","errorResetBoundary","queryClient","optimisticResult","useSyncExternalStore","onStoreChange","batchCalls","suspensePromises","queryObserver","fetchOptimistic","Promise","all","observerQueries","_defaultedQueries$ind","_defaultedQueries$ind2","getHasError","firstSingleResultWhichShouldThrow"],"sourceRoot":""}