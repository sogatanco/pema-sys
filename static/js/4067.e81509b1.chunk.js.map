{"version":3,"file":"static/js/4067.e81509b1.chunk.js","mappings":"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","sources":["pages/projects/InprogressTaskList.js","pages/projects/PDFFile.js","../node_modules/reactstrap/esm/CardTitle.js","../node_modules/reactstrap/esm/Form.js","../node_modules/reactstrap/esm/Tooltip.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Badge, Button, Card, CardBody, CardTitle, Col, Input, Row, Spinner } from 'reactstrap';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\nimport { Link } from 'react-router-dom';\r\nimport TaskPopup from './TaskPopup';\r\nimport PDFFile from './PDFFile';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport './ProjectTable.scss';\r\nimport './ProjectDetail.scss';\r\n// import TooltipHover from '../../components/atoms/TooltipHover';\r\n\r\n// const result = (emId) =>\r\n//   emId.filter(\r\n//     (person, index) => index === emId.findIndex((other) => person.employe_id === other.employe_id),\r\n//   );\r\n\r\nconst InprogressTaskList = () => {\r\n  const { auth } = useAuth();\r\n  const [modal, setModal] = useState(false);\r\n  const [task, setTask] = useState(undefined);\r\n  const [taskIdSelected, setTaskIdSelected] = useState();\r\n  const [addingFavorite, setAddingFavorite] = useState();\r\n  const [isDirector, setIsDirector] = useState(false);\r\n  const [projectTitle, setProjectTitle] = useState();\r\n  const [filterSearch, setFilterSearch] = useState();\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['inprogresstasks'],\r\n    queryFn: () =>\r\n      api.get(`api/task/director/inprogress/list`).then((res) => {\r\n        setProjectTitle(res.data.project);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFilterSearch(data);\r\n  }, [data]);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const openPopup = (selectedTask) => {\r\n    setModal(true);\r\n    setTask(selectedTask);\r\n  };\r\n\r\n  const handleFavorite = async (taskId) => {\r\n    setTaskIdSelected(taskId);\r\n    setAddingFavorite(true);\r\n    await api\r\n      .post(`api/task/${auth?.user.employe_id}/${taskId}/favorite`)\r\n      .then((res) => {\r\n        refetch();\r\n        alert('success', res.data.message);\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Something went wrong.');\r\n      });\r\n    setTaskIdSelected();\r\n    setAddingFavorite(false);\r\n  };\r\n\r\n  const favoriteAllowedRoles = ['Director'];\r\n  const reportTaskAllowedRoles = ['Manager'];\r\n\r\n  useEffect(() => {\r\n    if (auth?.user.roles.find((role) => favoriteAllowedRoles.includes(role))) {\r\n      setIsDirector(true);\r\n    }\r\n  }, [auth]);\r\n\r\n  const handleSearch = (value) => {\r\n    const filterByTitle = data.filter((item) =>\r\n      item.task_title.toLowerCase().includes(value.toLowerCase()),\r\n    );\r\n\r\n    setFilterSearch(filterByTitle);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        <Card className=\"rounded-3\">\r\n          <CardBody>\r\n            <CardTitle tag=\"h4\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                Inprogress Tasks\r\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                  <Button size=\"sm\" color=\"info\" outline className=\"d-flex align-items-center\">\r\n                    <MaterialIcon icon=\"chevron_left\" />\r\n                    Back to Dashboard\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n            </CardTitle>\r\n            {isLoading ? (\r\n              'loading...'\r\n            ) : error ? (\r\n              'Something went wrong.'\r\n            ) : (\r\n              <>\r\n                <Col className=\"bg-light-secondary my-auto p-2 rounded-3\">\r\n                  <Row>\r\n                    <Col sm=\"12 mb-2\" md=\"6\">\r\n                      <div className=\"d-flex gap-2\">\r\n                        <Button\r\n                          type=\"button\"\r\n                          className=\"d-flex align-items-center gap-2 rounded-3\"\r\n                          color=\"light\"\r\n                          size=\"sm\"\r\n                        >\r\n                          <MaterialIcon icon=\"filter_list\" style={{ fontSize: '12px' }} />\r\n                          Sort\r\n                        </Button>\r\n                        <Button\r\n                          type=\"button\"\r\n                          className=\"d-flex align-items-center gap-2 rounded-3\"\r\n                          color=\"light\"\r\n                          size=\"sm\"\r\n                        >\r\n                          <MaterialIcon icon=\"tune\" style={{ fontSize: '12px' }} />\r\n                          Filters\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <Col sm=\"12\" md=\"6\">\r\n                      <div className=\"d-flex gap-3 col-md-6 w-100\">\r\n                        <div className=\"w-100 position-relative\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            className=\"rounded-3\"\r\n                            bsSize=\"md\"\r\n                            placeholder=\"Search task...\"\r\n                            onChange={(e) => handleSearch(e.target.value)}\r\n                          />\r\n                        </div>\r\n                        {auth?.user.roles.find((role) => reportTaskAllowedRoles.includes(role)) && (\r\n                          <PDFDownloadLink\r\n                            document={<PDFFile {...{ projectTitle, data }} />}\r\n                            fileName={`Task Report - ${projectTitle?.project_number} - ${projectTitle?.division}`}\r\n                            style={{ textDecoration: 'none' }}\r\n                          >\r\n                            {/* {({ loading }) =>\r\n                          loading ? (\r\n                            <Button\r\n                              type=\"button\"\r\n                              size=\"sm\"\r\n                              className=\"btn btn-light d-flex rounded-3\"\r\n                            >\r\n                              Loading...\r\n                            </Button>\r\n                          ) : (\r\n                            <Button\r\n                              type=\"button\"\r\n                              size=\"sm\"\r\n                              className=\"btn btn-light-info text-info d-flex align-items-center gap-2 rounded-3\"\r\n                            >\r\n                              <MaterialIcon icon=\"picture_as_pdf\" style={{ fontSize: '12px' }} />\r\n                              Report\r\n                            </Button>\r\n                          )\r\n                        } */}\r\n                            <Button\r\n                              type=\"button\"\r\n                              className=\"btn btn-light-info text-info rounded-3 d-flex py-2\"\r\n                              // size=\"lg\"\r\n                            >\r\n                              <MaterialIcon icon=\"file_download\" style={{ fontSize: '18px' }} />\r\n                              {/* Report */}\r\n                            </Button>\r\n                          </PDFDownloadLink>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col sm=\"12 overflow-auto\">\r\n                  <h6 className=\"fw-bold mt-3\">List of tasks from {projectTitle?.division}</h6>\r\n                  <table className=\"rounded-corners\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th width=\"30\">#</th>\r\n                        <th>Task title</th>\r\n                        <th width=\"\">Status</th>\r\n                        <th>Progress</th>\r\n                        <th width=\"100\">PIC</th>\r\n                        {isDirector && <th width=\"50\"></th>}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filterSearch?.length > 0 ? (\r\n                        filterSearch?.map((ts, idx) => (\r\n                          <Fragment key={ts.task_id}>\r\n                            <tr>\r\n                              <td>{idx + 1}.</td>\r\n                              <td style={{ cursor: 'pointer' }} onClick={() => openPopup(ts)}>\r\n                                <span style={{ fontWeight: '600' }}>{ts.task_title}</span>\r\n                                <br></br>\r\n                                <Badge color=\"light\" className=\"text-muted\">\r\n                                  {ts?.subtasks?.length} subtask\r\n                                </Badge>\r\n                                {'  '}\r\n                                <Badge color=\"light\" className=\"text-muted\">\r\n                                  <MaterialIcon icon=\"comment\" style={{ fontSize: '12px' }} />\r\n                                  {ts.comments}\r\n                                </Badge>\r\n                              </td>\r\n                              <td>\r\n                                {ts.status === 0 ? (\r\n                                  <Badge color=\"light\" className=\"text-dark\">\r\n                                    To Do\r\n                                  </Badge>\r\n                                ) : ts.status === 1 ? (\r\n                                  <Badge color=\"warning\">In Progress</Badge>\r\n                                ) : ts.status === 2 ? (\r\n                                  <Badge color=\"light\" className=\"text-dark\">\r\n                                    Under Review\r\n                                  </Badge>\r\n                                ) : ts.status === 3 ? (\r\n                                  <Badge color=\"success\">Approved</Badge>\r\n                                ) : (\r\n                                  <Badge color=\"danger\">Revision</Badge>\r\n                                )}\r\n                              </td>\r\n                              <td>\r\n                                <span className=\"badge bg-light-success text-primary rounded-pill d-inline-block fw-bold\">\r\n                                  {ts?.task_progress?.toFixed()}%\r\n                                </span>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"members\">\r\n                                  <div className=\"members-item\">\r\n                                    {ts?.pics?.map(\r\n                                      (pic, i) =>\r\n                                        i < 2 && (\r\n                                          <Fragment key={pic.id}>\r\n                                            <img\r\n                                              id={`tooltip-${pic.id}`}\r\n                                              src={user1}\r\n                                              className=\"ava-pic rounded-circle\"\r\n                                              alt=\"avatar\"\r\n                                              width=\"35\"\r\n                                              height=\"35\"\r\n                                            />\r\n                                            <TooltipHover\r\n                                              title={pic.first_name}\r\n                                              id={pic.id?.toString()}\r\n                                            />\r\n                                          </Fragment>\r\n                                        ),\r\n                                    )}\r\n                                    {ts?.pics?.length > 2 && (\r\n                                      <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                        +{ts?.pics?.length - 2}\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              {isDirector && (\r\n                                <td className=\"text-center\">\r\n                                  {addingFavorite && taskIdSelected === ts.task_id ? (\r\n                                    <Spinner size=\"sm\" color=\"warning\" />\r\n                                  ) : (\r\n                                    <abbr title=\"Mark task\" style={{ textDecoration: 'none' }}>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"fav-btn\"\r\n                                        onClick={() => handleFavorite(ts.task_id)}\r\n                                      >\r\n                                        <MaterialIcon\r\n                                          icon=\"star\"\r\n                                          className={`${ts.isFavorite && 'is_favorite'}`}\r\n                                        />\r\n                                      </button>\r\n                                    </abbr>\r\n                                  )}\r\n                                </td>\r\n                              )}\r\n                            </tr>\r\n                            {ts?.subtasks?.length > 0 &&\r\n                              ts.subtasks.map((st) => (\r\n                                <tr key={st.task_id}>\r\n                                  <td></td>\r\n                                  <td onClick={() => openPopup(st)} style={{ cursor: 'pointer' }}>\r\n                                    {st.task_title}\r\n                                    <br></br>\r\n                                    <Badge color=\"light\" className=\"text-muted\">\r\n                                      <MaterialIcon icon=\"comment\" style={{ fontSize: '12px' }} />\r\n                                      {st.comments}\r\n                                    </Badge>\r\n                                  </td>\r\n\r\n                                  <td>\r\n                                    {/* {st.status === 0 ? (\r\n                                <Badge color=\"light\" className=\"text-dark\">\r\n                                  To Do\r\n                                </Badge>\r\n                              ) : st.status === 1 ? (\r\n                                <Badge color=\"warning\">In Progress</Badge>\r\n                              ) : st.status === 2 ? (\r\n                                <Badge color=\"light\" className=\"text-dark\">\r\n                                  Under Review\r\n                                </Badge>\r\n                              ) : st.status === 3 ? (\r\n                                <Badge color=\"success\">Approved</Badge>\r\n                              ) : (\r\n                                <Badge color=\"danger\">Revision</Badge>\r\n                              )} */}\r\n                                    -\r\n                                  </td>\r\n                                  <td>\r\n                                    <span className=\"badge bg-light-primary text-primary rounded-pill d-inline-block fw-bold\">\r\n                                      {st?.task_progress?.toFixed()}%\r\n                                    </span>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className=\"members\">\r\n                                      <div className=\"members-item\">\r\n                                        {st?.pics?.map(\r\n                                          (pic, i) =>\r\n                                            i < 2 && (\r\n                                              <Fragment key={pic.id}>\r\n                                                <img\r\n                                                  key={pic.id}\r\n                                                  id={`tooltip-${pic.id}`}\r\n                                                  src={user1}\r\n                                                  className=\"ava-pic rounded-circle\"\r\n                                                  alt=\"avatar\"\r\n                                                  width=\"35\"\r\n                                                  height=\"35\"\r\n                                                />\r\n                                                <TooltipHover\r\n                                                  title={pic.first_name}\r\n                                                  id={pic.id?.toString()}\r\n                                                />\r\n                                              </Fragment>\r\n                                            ),\r\n                                        )}\r\n                                        {st?.pics?.length > 2 && (\r\n                                          <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                            +{st.pics.length - 2}\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </td>\r\n                                  {isDirector && (\r\n                                    <td className=\"text-center\">\r\n                                      {addingFavorite && taskIdSelected === st.task_id ? (\r\n                                        <Spinner size=\"sm\" color=\"warning\" />\r\n                                      ) : (\r\n                                        <abbr title=\"Mark task\" style={{ textDecoration: 'none' }}>\r\n                                          <button\r\n                                            type=\"button\"\r\n                                            className=\"fav-btn\"\r\n                                            onClick={() => handleFavorite(st.task_id)}\r\n                                          >\r\n                                            <MaterialIcon\r\n                                              icon=\"star\"\r\n                                              className={`${st.isFavorite && 'is_favorite'}`}\r\n                                            />\r\n                                          </button>\r\n                                        </abbr>\r\n                                      )}\r\n                                    </td>\r\n                                  )}\r\n                                </tr>\r\n                              ))}\r\n                          </Fragment>\r\n                        ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan=\"5\" align=\"center\">\r\n                            Data not found.\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </Col>\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      {modal && <TaskPopup {...{ modal, setModal, toggle, task }} mode=\"activities\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InprogressTaskList;\r\n","import React, { Fragment } from 'react';\r\nimport { Page, Text, Document, StyleSheet, View } from '@react-pdf/renderer';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 10,\r\n    textAlign: 'center',\r\n  },\r\n  text: {\r\n    margin: 10,\r\n    fontSize: 10,\r\n    textAlign: 'justify',\r\n  },\r\n  image: {\r\n    marginVertical: 4,\r\n    marginHorizontal: 15,\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  header: {\r\n    fontSize: 10,\r\n    marginBottom: 5,\r\n    textAlign: 'left',\r\n    color: '#3f3f3f',\r\n    fontWeight: 'bold',\r\n  },\r\n  pageNumber: {\r\n    position: 'absolute',\r\n    fontSize: 10,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n  printAt: {\r\n    position: 'absolute',\r\n    fontSize: 8,\r\n    bottom: 30,\r\n    left: 35,\r\n    right: 0,\r\n    textAlign: 'left',\r\n    color: 'grey',\r\n  },\r\n  table: {\r\n    display: 'table',\r\n    width: 'auto',\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderRightWidth: 0,\r\n    borderBottomWidth: 0,\r\n    color: '#3f3f3f',\r\n  },\r\n  tableRow: {\r\n    margin: 'auto',\r\n    flexDirection: 'row',\r\n  },\r\n  tableCol: {\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderLeftWidth: 0,\r\n    borderTopWidth: 0,\r\n  },\r\n  tableCell: {\r\n    // margin: 'auto',\r\n    marginTop: 3,\r\n    marginBottom: 3,\r\n    marginLeft: 3,\r\n    marginRight: 3,\r\n    fontSize: 10,\r\n  },\r\n});\r\n\r\nconst today = () => {\r\n  const currentDate = new Date();\r\n  return `${currentDate.toDateString()}, ${currentDate.toLocaleString().split(',')[1]}`;\r\n};\r\n\r\nconst PDFFile = ({ projectTitle, data }) => {\r\n  const pageColor = '#fff';\r\n\r\n  return (\r\n    <Document>\r\n      <Page style={{ ...styles.body, backgroundColor: pageColor }}>\r\n        <Text style={styles.header} fixed>\r\n          Project : {projectTitle?.project_name}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Partner : {projectTitle?.partner}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Division : {projectTitle?.division}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Phase : {projectTitle?.phase}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Schema : {projectTitle?.schema === 'jo' ? 'Join Operational' : 'Join Venture'}\r\n        </Text>\r\n        <View style={styles.table}>\r\n          <View style={styles.tableRow}>\r\n            <View style={{ ...styles.tableCol, width: '5%' }}>\r\n              <Text style={styles.tableCell}>No.</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '35%' }}>\r\n              <Text style={styles.tableCell}>Task Title</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '15%' }}>\r\n              <Text style={styles.tableCell}>Status</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '15%' }}>\r\n              <Text style={styles.tableCell}>Deadline</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '30%' }}>\r\n              <Text style={styles.tableCell}>PIC</Text>\r\n            </View>\r\n          </View>\r\n          {data?.map((item, i) => (\r\n            <Fragment key={item.task_id}>\r\n              <View style={styles.tableRow}>\r\n                <View style={{ ...styles.tableCol, width: '5%' }}>\r\n                  <Text style={{ ...styles.tableCell, textAlign: 'center' }}>{i + 1}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '35%' }}>\r\n                  <Text style={styles.tableCell}>{item.task_title}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                  <Text style={{ ...styles.tableCell, fontSize: '10px' }}>\r\n                    {item.status === 0\r\n                      ? 'To do'\r\n                      : item.status === 1\r\n                      ? 'In progress'\r\n                      : item.status === 2\r\n                      ? 'Under review'\r\n                      : item.status === 3\r\n                      ? 'Approved'\r\n                      : 'Revision'}\r\n                  </Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                  <Text style={styles.tableCell}>{item.end_date}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '30%' }}>\r\n                  {item.pics?.map((p) => (\r\n                    <Text style={styles.tableCell} key={p.id}>\r\n                      {p.first_name}\r\n                    </Text>\r\n                  ))}\r\n                </View>\r\n              </View>\r\n              {item.level_2?.map((st) => (\r\n                <View style={styles.tableRow} key={st.task_id}>\r\n                  <View style={{ ...styles.tableCol, width: '5%' }}>\r\n                    <Text style={styles.tableCell}></Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '35%' }}>\r\n                    <Text style={styles.tableCell}>{st.task_title}</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                    <Text style={styles.tableCell}>-</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                    <Text style={styles.tableCell}>{st.end_date}</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '30%' }}>\r\n                    {st.pics?.map((p) => (\r\n                      <Text style={styles.tableCell} key={p.id}>\r\n                        {p.first_name}\r\n                      </Text>\r\n                    ))}\r\n                  </View>\r\n                </View>\r\n              ))}\r\n            </Fragment>\r\n          ))}\r\n        </View>\r\n        <Text\r\n          style={styles.pageNumber}\r\n          render={({ pageNumber, totalPages }) => `${pageNumber} / ${totalPages}`}\r\n        />\r\n        <Text style={styles.printAt} render={today} />\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nPDFFile.propTypes = {\r\n  projectTitle: PropTypes.object,\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default PDFFile;\r\n","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction CardTitle(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nCardTitle.propTypes = propTypes;\nexport default CardTitle;","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nvar _excluded = [\"className\", \"cssModule\", \"tag\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar Form = /*#__PURE__*/function (_Component) {\n  _inherits(Form, _Component);\n  var _super = _createSuper(Form);\n  function Form(props) {\n    var _this;\n    _classCallCheck(this, Form);\n    _this = _super.call(this, props);\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(Form, [{\n    key: \"getRef\",\n    value: function getRef(ref) {\n      if (this.props.innerRef) {\n        this.props.innerRef(ref);\n      }\n      this.ref = ref;\n    }\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      if (this.ref) {\n        this.ref.submit();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        _this$props$tag = _this$props.tag,\n        Tag = _this$props$tag === void 0 ? 'form' : _this$props$tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutProperties(_this$props, _excluded);\n      var classes = mapToCssModules(className, cssModule);\n      return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n        ref: innerRef,\n        className: classes\n      }));\n    }\n  }]);\n  return Form;\n}(Component);\nForm.propTypes = propTypes;\nexport default Form;","function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport classNames from 'classnames';\nimport TooltipPopoverWrapper, { propTypes } from './TooltipPopoverWrapper';\nimport { addDefaultProps } from './utils';\nvar defaultProps = {\n  placement: 'top',\n  autohide: true,\n  placementPrefix: 'bs-tooltip',\n  trigger: 'hover focus'\n};\nfunction Tooltip(props) {\n  var arrowClasses = classNames('tooltip-arrow', props.arrowClassName);\n  var popperClasses = classNames('tooltip', 'show', props.popperClassName);\n  var classes = classNames('tooltip-inner', props.innerClassName);\n  var _props = addDefaultProps(defaultProps, props);\n  return /*#__PURE__*/React.createElement(TooltipPopoverWrapper, _extends({}, _props, {\n    arrowClassName: arrowClasses,\n    popperClassName: popperClasses,\n    innerClassName: classes\n  }));\n}\nTooltip.propTypes = propTypes;\nexport default Tooltip;"],"names":["InprogressTaskList","auth","useAuth","modal","setModal","useState","task","setTask","undefined","taskIdSelected","setTaskIdSelected","addingFavorite","setAddingFavorite","isDirector","setIsDirector","projectTitle","setProjectTitle","filterSearch","setFilterSearch","api","useAxios","isLoading","error","data","refetch","useQuery","queryKey","queryFn","get","then","res","project","useEffect","openPopup","selectedTask","handleFavorite","async","taskId","post","concat","user","employe_id","alert","message","catch","favoriteAllowedRoles","reportTaskAllowedRoles","roles","find","role","includes","_jsxs","_Fragment","children","_jsx","Col","Card","className","CardBody","CardTitle","tag","Link","to","style","textDecoration","Button","size","color","outline","MaterialIcon","icon","Row","sm","md","type","fontSize","Input","bsSize","placeholder","onChange","e","value","filterByTitle","filter","item","task_title","toLowerCase","handleSearch","target","PDFDownloadLink","document","PDFFile","fileName","project_number","division","width","length","map","ts","idx","_ts$subtasks","_ts$task_progress","_ts$pics","_ts$pics2","_ts$pics3","_ts$subtasks2","Fragment","cursor","onClick","fontWeight","Badge","subtasks","comments","status","task_progress","toFixed","pics","pic","i","_pic$id","id","src","user1","alt","height","TooltipHover","title","first_name","toString","task_id","Spinner","isFavorite","st","_st$task_progress","_st$pics","_st$pics2","_pic$id2","colSpan","align","TaskPopup","toggle","mode","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","textAlign","text","margin","image","marginVertical","marginHorizontal","header","marginBottom","pageNumber","position","bottom","left","right","printAt","table","display","borderStyle","borderWidth","borderRightWidth","borderBottomWidth","tableRow","flexDirection","tableCol","borderLeftWidth","borderTopWidth","tableCell","marginTop","marginLeft","marginRight","today","currentDate","Date","toDateString","toLocaleString","split","_ref","Document","Page","_objectSpread","backgroundColor","Text","fixed","project_name","partner","phase","schema","View","_item$pics","_item$level_","end_date","p","level_2","render","_ref2","totalPages","_excluded","_extends","Object","assign","bind","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","PropTypes","cssModule","tagPropType","props","_props$tag","Tag","attributes","classes","mapToCssModules","classNames","React","_typeof","obj","Symbol","iterator","constructor","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","_setPrototypeOf","o","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_isNativeReflectConstruct","result","Super","_getPrototypeOf","NewTarget","self","TypeError","_assertThisInitialized","_possibleConstructorReturn","ReferenceError","getPrototypeOf","innerRef","Form","_Component","subClass","superClass","_inherits","Constructor","protoProps","staticProps","_super","_this","instance","_classCallCheck","getRef","submit","ref","_this$props","_this$props$tag","Component","defaultProps","placement","autohide","placementPrefix","trigger","Tooltip","arrowClasses","arrowClassName","popperClasses","popperClassName","innerClassName","_props","addDefaultProps","TooltipPopoverWrapper"],"sourceRoot":""}