{"version":3,"file":"static/js/4807.5decf832.chunk.js","mappings":"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","sources":["components/actionMenu/ActionMenu.js","components/atoms/Toast.js","components/atoms/TooltipHover.js","pages/projects/TaskPopup.js","utils/formatDate.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ActionMenu.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ActionMenu = ({ menuOptions, taskId, status, action, progress, duplicateFn }) => {\r\n  const [actionMenu, setActionMenu] = useState(false);\r\n\r\n  const deleteTask = () => {\r\n    setActionMenu(false);\r\n    action();\r\n  };\r\n\r\n  const changeStatusTask = (setStatus) => {\r\n    action(taskId, setStatus);\r\n    setActionMenu(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"action\">\r\n      <button\r\n        type=\"button\"\r\n        className={`btn-option ${actionMenu && 'active'}`}\r\n        onClick={() => setActionMenu(true)}\r\n      >\r\n        <MaterialIcon icon=\"more_vert\" />\r\n      </button>\r\n      {actionMenu && (\r\n        <>\r\n          <div className=\"action-overlay\" onClick={() => setActionMenu(false)} />\r\n          <div className=\"action-options rounded-3\">\r\n            {menuOptions?.options.map((op) => (\r\n              <div key={op.id}>\r\n                {op.to === 'duplicate' ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-muted\"\r\n                    disabled\r\n                    onClick={() => duplicateFn(taskId)}\r\n                  >\r\n                    {op.icon}\r\n                    Duplicate\r\n                  </button>\r\n                ) : op.type === 'button' ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-muted\"\r\n                    onClick={() => changeStatusTask(op.to)}\r\n                    disabled={\r\n                      op.to === status ||\r\n                      (op.to === 2 && status === 0) ||\r\n                      (op.to === 2 && status === 4) ||\r\n                      (op.to === 0 && status === 4) ||\r\n                      (op.to === 2 && progress !== 100)\r\n                    }\r\n                  >\r\n                    {op.icon}\r\n                    {op.label}\r\n                  </button>\r\n                ) : op.type === 'link' ? (\r\n                  <Link className=\"text-muted\" onClick={op.to}>\r\n                    {op.icon}\r\n                    {op.label}\r\n                  </Link>\r\n                ) : (\r\n                  <div className=\"action-del\">\r\n                    <button type=\"button\" onClick={deleteTask}>\r\n                      <MaterialIcon icon=\"delete_outline\" />\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nActionMenu.propTypes = {\r\n  menuOptions: PropTypes.object,\r\n  taskId: PropTypes.number,\r\n  status: PropTypes.number,\r\n  action: PropTypes.func,\r\n  progress: PropTypes.number,\r\n  duplicateFn: PropTypes.func,\r\n};\r\n\r\nexport default ActionMenu;\r\n","import React from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst notify = (type, msg) =>\r\n  type === 'success'\r\n    ? toast.success(msg)\r\n    : type === 'create'\r\n    ? toast(msg, {\r\n        icon: '🤗',\r\n      })\r\n    : type === 'start'\r\n    ? toast('Lets get started, cheer up!', {\r\n        icon: '💪',\r\n      })\r\n    : type === 'done'\r\n    ? toast('Horeee, task done!', {\r\n        icon: '👏',\r\n      })\r\n    : toast.error(msg);\r\n\r\nexport const Toast = () => {\r\n  return (\r\n    <Toaster\r\n      toastOptions={{\r\n        className: '',\r\n        style: {\r\n          //   border: '1px solid #713200',\r\n          //   padding: '16px',\r\n          //   color: '#713200',\r\n          //   width: '800px',\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const alert = (type, msg) => {\r\n  notify(type, msg);\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Tooltip } from 'reactstrap';\r\n\r\nconst TooltipHover = (props) => {\r\n  const { title, id } = props;\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n  return (\r\n    <span>\r\n      <Tooltip placement=\"top\" isOpen={tooltipOpen} target={`tooltip-${id}`} toggle={toggle}>\r\n        {title}\r\n      </Tooltip>\r\n    </span>\r\n  );\r\n};\r\n\r\nTooltipHover.propTypes = {\r\n  title: PropTypes.string,\r\n  id: PropTypes.string,\r\n};\r\n\r\nexport default TooltipHover;\r\n","import React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport './TaskPopup.scss';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport ActionMenu from '../../components/actionMenu/ActionMenu';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\n// const result = (emId) =>\r\n//   emId.filter(\r\n//     (person, index) => index === emId.findIndex((other) => person.employe_id === other.employe_id),\r\n//   );\r\n\r\n// const sortByDate = (data) => data.sort(({ date: a }, { date: b }) => (a < b ? -1 : a > b ? 1 : 0));\r\n\r\nconst sortHistoryByDate = (data) => {\r\n  return data?.sort((a, b) => a.created_at.localeCompare(b.created_at));\r\n};\r\n\r\nconst TaskPopup = ({ modal, setModal, toggle, task, refetch, mode, name }) => {\r\n  const { projectId } = useParams();\r\n  const { auth } = useAuth();\r\n  const [history, setHistory] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [taskTemp, setTaskTemp] = useState('');\r\n  const [assignedEmployees, setAssignedEmployees] = useState([]);\r\n  const [listEmployee, setListEmploye] = useState();\r\n  const [emModal, setEmModal] = useState(false);\r\n  const [updating, setUpdating] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [comments, setComments] = useState();\r\n  const [postComment, setPostComment] = useState();\r\n  const [commentSending, setCommentSending] = useState(false);\r\n  const [files, setFiles] = useState([]);\r\n  const [popContent, setPopContent] = useState();\r\n  const [selectedFileId, setSelectedFileId] = useState();\r\n  const [isDeletingFile, setIsDeletingFile] = useState(false);\r\n  const [listFile, setListFile] = useState([]);\r\n  const [userIsPic, setUserIsPic] = useState(false);\r\n\r\n  const inputCommentRef = useRef();\r\n\r\n  const userRoles = auth?.user?.roles;\r\n  const userId = auth?.user?.employe_id;\r\n\r\n  const api = useAxios();\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const assigneModal = () => {\r\n    setEmModal(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTaskTemp({\r\n      approval_id: task?.approval_id,\r\n      task_title: task?.task_title,\r\n      task_desc: task?.task_desc,\r\n      task_progress: task?.task_progress,\r\n      start_date: task?.start_date,\r\n      end_date: task?.end_date,\r\n    });\r\n\r\n    if (task?.pics) {\r\n      setAssignedEmployees(\r\n        task.pics.map((pic) => ({\r\n          label: pic.first_name,\r\n          value: pic.employe_id,\r\n        })),\r\n      );\r\n    }\r\n\r\n    async function fetchHistory() {\r\n      await api.get(`api/task/history/${task?.task_id}`).then((res) => {\r\n        setHistory(res.data.data);\r\n      });\r\n    }\r\n\r\n    async function fetchComments() {\r\n      await api.get(`api/comment/${task?.task_id}`).then((res) => setComments(res.data.data));\r\n    }\r\n\r\n    setListFile(task?.files);\r\n\r\n    fetchComments();\r\n    fetchHistory();\r\n\r\n    setUserIsPic(!!task?.pics?.find((p) => p.employe_id.toString() === userId));\r\n  }, [task]);\r\n\r\n  useEffect(() => {\r\n    async function fetchEmployees() {\r\n      await api\r\n        .get(`api/employe/assignment-list?search=${name}`)\r\n        .then((res) => setListEmploye(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n    if (!userRoles.includes('Staff')) {\r\n      fetchEmployees();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setPopContent(history?.concat(comments));\r\n  }, [history, comments]);\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setUpdating(true);\r\n    if (assignedEmployees.length !== 0) {\r\n      taskTemp.pic = assignedEmployees;\r\n      taskTemp.project_id = projectId;\r\n\r\n      if (files) {\r\n        taskTemp.files = files;\r\n      }\r\n      await api\r\n        .patch(`api/task/${task?.task_id}`, taskTemp)\r\n        .then(() => {\r\n          alert('success', 'Task has been updated.');\r\n          setModal(false);\r\n          refetch();\r\n        })\r\n        .catch(() => alert('error', 'Something went wrong'));\r\n    } else {\r\n      alert('error', 'Field employee cannot be empty');\r\n    }\r\n    setUpdating(false);\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (files?.length === 0) {\r\n      alert('error', 'Field cannot be empty');\r\n    } else if (files[0]?.size > 10000000) {\r\n      alert('error', 'Maximum file size is 10mb');\r\n    } else {\r\n      setUploading(true);\r\n      await api\r\n        .post(`api/task/${task.task_id}/upload`, files, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        })\r\n        .then((res) => {\r\n          // eslint-disable-next-line no-unused-expressions\r\n          task?.files?.push(res.data.file);\r\n          // listFile.push(res.data.file);\r\n          alert('success', 'File has been uploaded.');\r\n        })\r\n        .catch(() => {\r\n          alert('error', 'Upload file failed');\r\n        });\r\n      setFiles([]);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteTask = async () => {\r\n    setLoading(true);\r\n    await api\r\n      .delete(`api/task/${task.task_id}`)\r\n      .then(() => alert('success', 'Task has been deleted'))\r\n      .catch(() => alert('error', 'Something went wrong'));\r\n    setLoading(false);\r\n    setModal(false);\r\n    refetch();\r\n  };\r\n\r\n  const deleteFile = async (fileId) => {\r\n    setIsDeletingFile(true);\r\n    setSelectedFileId(fileId);\r\n    await api\r\n      .delete(`api/task/file/delete/${fileId}`)\r\n      .then(() => {\r\n        refetch();\r\n        setModal(false);\r\n        alert('success', 'A file has been deleted');\r\n      })\r\n      .catch('error', 'Delete file failed');\r\n    setSelectedFileId();\r\n    setIsDeletingFile(false);\r\n  };\r\n\r\n  const menuOptions = {\r\n    taskId: task?.task_id,\r\n    options: [\r\n      {\r\n        id: 1,\r\n        type: 'delete',\r\n        to: 'toDelete',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const handleComment = async (e) => {\r\n    e.preventDefault();\r\n    setCommentSending(true);\r\n    postComment.employe_id = auth.user.employe_id;\r\n    postComment.task_id = task.task_id;\r\n    await api\r\n      .post(`api/comment`, postComment)\r\n      .then((res) => setPopContent((current) => [...current, res.data.data]));\r\n    setCommentSending(false);\r\n    setPostComment();\r\n    e.target.reset();\r\n  };\r\n\r\n  const fileUrl = process.env.REACT_APP_BASEURL;\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"xl\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}></ModalHeader>\r\n        <ModalBody>\r\n          {loading ? (\r\n            <div className=\"d-flex justify-content-center\" style={{ height: '400px' }}>\r\n              Loading..\r\n            </div>\r\n          ) : (\r\n            <div className=\"popup-body\">\r\n              <div className=\"left\">\r\n                {/* {auth?.user.employe_id !== task.employe_id.toString() || mode === 'activities' ? ( */}\r\n                {mode === 'activities' ||\r\n                task?.status === 2 ||\r\n                task?.status === 3 ||\r\n                (!userIsPic && task?.created_by !== auth?.user?.first_name) ? (\r\n                  <>\r\n                    <div className=\"top\">\r\n                      <div className=\"date\">\r\n                        <h6>Start Date </h6>\r\n                        <span>{taskTemp?.start_date || '-'}</span>\r\n                      </div>\r\n                      <div className=\"date\">\r\n                        <h6>Due Date</h6>\r\n                        <span>{taskTemp?.end_date || '-'}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"bottom mt-3\">\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"taskTitle\">Task Title</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"taskTitle\"\r\n                          name=\"taskTitle\"\r\n                          value={taskTemp?.task_title || ''}\r\n                          readOnly\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"taskDesc\">Description</Label>\r\n                        <Input\r\n                          type=\"textarea\"\r\n                          id=\"taskDesc\"\r\n                          name=\"taskDesc\"\r\n                          value={taskTemp?.task_desc || ''}\r\n                          readOnly\r\n                          disabled\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <span>PICs</span>\r\n                        <br></br>\r\n                        <div className=\"d-flex flex-column\">\r\n                          {assignedEmployees.map((em, i) => (\r\n                            <div key={em.value} className=\"d-flex gap-3\">\r\n                              <span>{i + 1}.</span>\r\n                              <span>{em.label}</span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {userRoles.includes('Staff') || userRoles.includes('Supervisor') ? (\r\n                      <>\r\n                        <form onSubmit={handleUpload} className=\"mt-2\">\r\n                          <h6>Attachment files ({task?.files?.length || 0})</h6>\r\n                          <div className=\"d-flex justify-content-between align-items-center bg-light px-2 rounded-3 mt-2\">\r\n                            <div className=\"d-flex align-items-center gap-1\">\r\n                              <div className=\"pt-2\" id=\"tooltip-3\">\r\n                                <Label for=\"attach\">\r\n                                  <MaterialIcon icon=\"attach_file\" className=\"btn-icon\" />\r\n                                </Label>\r\n                                <input\r\n                                  type=\"file\"\r\n                                  id=\"attach\"\r\n                                  name=\"attach\"\r\n                                  hidden\r\n                                  onChange={(e) => setFiles(e.target.files)}\r\n                                />\r\n                                <TooltipHover title=\"Upload file\" id=\"3\" />\r\n                              </div>\r\n                              <span style={{ color: '#1F88E5', fontSize: '12px' }}>\r\n                                {files[0] ? (\r\n                                  files[0]?.name\r\n                                ) : (\r\n                                  <span style={{ color: '#68757C' }}>Max. 10mb</span>\r\n                                )}\r\n                              </span>\r\n                            </div>\r\n                            <Button\r\n                              type=\"submit\"\r\n                              className=\"btn\"\r\n                              outline\r\n                              size=\"sm\"\r\n                              disabled={task?.status === 3}\r\n                            >\r\n                              {uploading ? 'Uploading...' : 'Upload'}\r\n                            </Button>\r\n                          </div>\r\n                        </form>\r\n                        <div className=\"attach\">\r\n                          <ul>\r\n                            {task?.files?.length > 0 &&\r\n                              listFile.map(\r\n                                (f) =>\r\n                                  f.employe_id?.toString() === userId && (\r\n                                    <div\r\n                                      key={f.file_id}\r\n                                      className=\"d-flex gap-1 align-items-center\"\r\n                                    >\r\n                                      <li>\r\n                                        <Link\r\n                                          className=\"file-link\"\r\n                                          to={`${fileUrl}taskfiles/${f.file_name}`}\r\n                                          target=\"_blank\"\r\n                                        >\r\n                                          {f.file_name}\r\n                                        </Link>\r\n                                      </li>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn d-flex\"\r\n                                        style={{ color: '#EF6767' }}\r\n                                        disabled={isDeletingFile}\r\n                                        onClick={() => deleteFile(f.file_id)}\r\n                                      >\r\n                                        {isDeletingFile && selectedFileId === f.file_id ? (\r\n                                          'Deleting..'\r\n                                        ) : (\r\n                                          <MaterialIcon\r\n                                            icon=\"delete_outline\"\r\n                                            style={{ fontSize: '20px' }}\r\n                                          />\r\n                                        )}\r\n                                      </button>\r\n                                    </div>\r\n                                  ),\r\n                              )}\r\n                          </ul>\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <div className=\"attach\">\r\n                        <h6>Attachment files ({task?.files?.length || 0})</h6>\r\n                        <ul>\r\n                          {task?.files?.length > 0 &&\r\n                            listFile.map((f) => (\r\n                              <div key={f.file_id} className=\"d-flex gap-1 align-items-center\">\r\n                                <li>\r\n                                  <Link\r\n                                    className=\"file-link\"\r\n                                    to={`${fileUrl}taskfiles/${f.file_name}`}\r\n                                    target=\"_blank\"\r\n                                  >\r\n                                    {f.file_name}\r\n                                  </Link>\r\n                                </li>\r\n                              </div>\r\n                            ))}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <form onSubmit={handleUpdate}>\r\n                      <div className=\"top\">\r\n                        <div className=\"date\">\r\n                          <h6>Start Date</h6>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"start_date\"\r\n                            value={taskTemp?.start_date || ''}\r\n                            onChange={(e) =>\r\n                              setTaskTemp({ ...taskTemp, start_date: e.target.value })\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div className=\"date\">\r\n                          <h6>Due Date</h6>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"end_date\"\r\n                            value={taskTemp?.end_date || ''}\r\n                            onChange={(e) => setTaskTemp({ ...taskTemp, end_date: e.target.value })}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"bottom mt-3\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"task_title\"\r\n                          value={taskTemp?.task_title || ''}\r\n                          onChange={(e) => setTaskTemp({ ...taskTemp, task_title: e.target.value })}\r\n                        />\r\n                        <Input\r\n                          type=\"textarea\"\r\n                          cols=\"5\"\r\n                          rows=\"6\"\r\n                          name=\"task_desc\"\r\n                          value={taskTemp?.task_desc || ''}\r\n                          onChange={(e) => setTaskTemp({ ...taskTemp, task_desc: e.target.value })}\r\n                        />\r\n                        {task?.child > 0 || task?.sub !== null\r\n                          ? ''\r\n                          : task?.pics?.map(\r\n                              (pic) =>\r\n                                pic.employe_id.toString() === auth?.user.employe_id && (\r\n                                  <div\r\n                                    className=\"d-flex gap-2 justify-content-between\"\r\n                                    key={pic.id}\r\n                                  >\r\n                                    <div className=\"col-sm-10\">\r\n                                      <Input\r\n                                        type=\"range\"\r\n                                        defaultValue={task.task_progress}\r\n                                        onChange={(e) =>\r\n                                          setTaskTemp({\r\n                                            ...taskTemp,\r\n                                            task_progress: e.target.value,\r\n                                          })\r\n                                        }\r\n                                      />\r\n                                    </div>\r\n                                    <div className=\"col-sm-1 d-flex justify-content-end\">\r\n                                      {taskTemp?.task_progress}%\r\n                                    </div>\r\n                                  </div>\r\n                                ),\r\n                            )}\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                        <div className=\"d-flex align-items-center gap-3\">\r\n                          <button type=\"button\" className=\"btn-assigne\" onClick={assigneModal}>\r\n                            <i className=\"bi-person-plus-fill\"></i>\r\n                            <span>{assignedEmployees?.length || 0}</span>\r\n                          </button>\r\n                        </div>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          className=\"btn\"\r\n                          color=\"info\"\r\n                          disabled={updating || task?.status === 3}\r\n                          size=\"sm\"\r\n                        >\r\n                          {updating ? 'Updating...' : 'Update'}\r\n                        </Button>\r\n                      </div>\r\n                    </form>\r\n                    <form onSubmit={handleUpload} className=\"mt-2\">\r\n                      <h6>Attachment files ({task?.files?.length || 0})</h6>\r\n                      <div className=\"d-flex justify-content-between align-items-center bg-light px-2 rounded-3 mt-2\">\r\n                        <div className=\"d-flex align-items-center gap-1\">\r\n                          <div className=\"pt-2\" id=\"tooltip-3\">\r\n                            <Label for=\"attach\">\r\n                              <MaterialIcon icon=\"attach_file\" className=\"btn-icon\" />\r\n                            </Label>\r\n                            <input\r\n                              type=\"file\"\r\n                              id=\"attach\"\r\n                              name=\"attach\"\r\n                              hidden\r\n                              onChange={(e) => setFiles(e.target.files)}\r\n                            />\r\n                            <TooltipHover title=\"Upload file\" id=\"3\" />\r\n                          </div>\r\n                          <span style={{ color: '#1F88E5', fontSize: '12px' }}>\r\n                            {files[0] ? (\r\n                              files[0]?.name\r\n                            ) : (\r\n                              <span style={{ color: '#68757C' }}>Max. 10mb</span>\r\n                            )}\r\n                          </span>\r\n                        </div>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          className=\"btn\"\r\n                          outline\r\n                          size=\"sm\"\r\n                          disabled={task?.status === 3}\r\n                        >\r\n                          {uploading ? 'Uploading...' : 'Upload'}\r\n                        </Button>\r\n                      </div>\r\n                    </form>\r\n                    <div className=\"attach\">\r\n                      <ul>\r\n                        {task?.files?.length > 0 &&\r\n                          listFile.map((f) => (\r\n                            <div key={f.file_id} className=\"d-flex gap-1 align-items-center\">\r\n                              <li>\r\n                                <Link\r\n                                  className=\"file-link\"\r\n                                  to={`${fileUrl}taskfiles/${f.file_name}`}\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  {f.file_name}\r\n                                </Link>\r\n                              </li>\r\n                              {userId === f.employe_id.toString() && (\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn d-flex\"\r\n                                  style={{ color: '#EF6767' }}\r\n                                  disabled={isDeletingFile}\r\n                                  onClick={() => deleteFile(f.file_id)}\r\n                                >\r\n                                  {isDeletingFile ? (\r\n                                    'Deleting..'\r\n                                  ) : (\r\n                                    <MaterialIcon\r\n                                      icon=\"delete_outline\"\r\n                                      style={{ fontSize: '20px' }}\r\n                                    />\r\n                                  )}\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          ))}\r\n                      </ul>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"right\">\r\n                <div className=\"top\">\r\n                  {task.task_parent === null ? (\r\n                    <div className=\"status\">\r\n                      <span className=\"badge bg-light-success text-primary rounded-pill d-inline-block fw-bold\">\r\n                        Task\r\n                      </span>\r\n                      {task?.status === 0 ? (\r\n                        <Badge color=\"info\">To Do</Badge>\r\n                      ) : task?.status === 1 ? (\r\n                        <Badge color=\"primary\">In Progress</Badge>\r\n                      ) : task?.status === 2 ? (\r\n                        <Badge color=\"light\" className=\"text-dark\">\r\n                          <i className=\"bi-clock mr-4\" style={{ fontSize: '12px' }}></i>\r\n                          &nbsp; Waiting for approval<strong></strong>\r\n                        </Badge>\r\n                      ) : task?.status === 3 ? (\r\n                        <Badge color=\"success\" className=\"d-flex\">\r\n                          {' '}\r\n                          <i className=\"bi-check2-circle mr-4\" style={{ fontSize: '13px' }}></i>\r\n                          &nbsp; Approved\r\n                        </Badge>\r\n                      ) : (\r\n                        <Badge color=\"danger\">Revision</Badge>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"status\">\r\n                      <span className=\"badge bg-light-success text-primary rounded-pill d-inline-block fw-bold\">\r\n                        Subtask\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {(userIsPic || task?.created_by === auth?.user?.first_name) && (\r\n                    <ActionMenu menuOptions={menuOptions} action={deleteTask} />\r\n                  )}\r\n                </div>\r\n                <div className=\"bottom\">\r\n                  {history && comments ? (\r\n                    <>\r\n                      <div className=\"history-item\">\r\n                        <div className=\"comment-name\">\r\n                          <span>\r\n                            <strong>{task && task.created_by}</strong> create this task\r\n                          </span>\r\n                          <br />\r\n                        </div>\r\n                        <small>{task && newDate(task.created_at)}</small>\r\n                      </div>\r\n                      {sortHistoryByDate(popContent)?.map((h, i) =>\r\n                        h?.approval_id ? (\r\n                          <Fragment key={h?.approval_id}>\r\n                            <div className=\"history-item\">\r\n                              <div className=\"comment-name\">\r\n                                {h?.status === 0 && i < 1 ? (\r\n                                  <>\r\n                                    <span>\r\n                                      <strong>{h?.pic_task}</strong> sdsd\r\n                                    </span>\r\n                                    <br />\r\n                                    <span style={{ fontSize: '12px' }}>\r\n                                      Deadline: {h?.end_date}\r\n                                    </span>\r\n                                  </>\r\n                                ) : h?.status === 0 && i > 0 ? (\r\n                                  <>\r\n                                    <span>\r\n                                      <strong>{h?.pic_task}</strong> change task to To Do\r\n                                    </span>\r\n                                    <br />\r\n                                    <span style={{ fontSize: '12px' }}>\r\n                                      Deadline: {h?.end_date}\r\n                                    </span>\r\n                                  </>\r\n                                ) : h?.status === 0 ? (\r\n                                  <>\r\n                                    <span>\r\n                                      <strong>{h?.pic_task}</strong> was assigned\r\n                                    </span>\r\n                                    <br />\r\n                                    <span style={{ fontSize: '12px' }}>\r\n                                      Deadline: {h?.end_date}\r\n                                    </span>\r\n                                  </>\r\n                                ) : h?.status === 1 ? (\r\n                                  <>\r\n                                    <span>\r\n                                      <strong>{h?.pic_task}</strong> change task to In Progress\r\n                                    </span>\r\n                                    <br />\r\n                                    <span style={{ fontSize: '12px' }}>\r\n                                      Deadline: {h?.end_date}\r\n                                    </span>\r\n                                  </>\r\n                                ) : h?.status === 2 ? (\r\n                                  <>\r\n                                    <span>\r\n                                      <strong>{h?.pic_task}</strong> change task to Review\r\n                                    </span>\r\n                                    <br />\r\n                                    <span style={{ fontSize: '12px' }}>\r\n                                      Deadline: {h?.end_date}\r\n                                    </span>\r\n                                  </>\r\n                                ) : h?.status === 3 ? (\r\n                                  <span>\r\n                                    <strong>{h?.status_by} </strong> task approved\r\n                                  </span>\r\n                                ) : (\r\n                                  <>\r\n                                    <span>\r\n                                      <strong>{h?.status_by} </strong>change task to Revision\r\n                                    </span>\r\n                                    <br />\r\n                                    <span style={{ fontSize: '12px' }}>\r\n                                      Deadline: {h?.end_date}\r\n                                    </span>\r\n                                  </>\r\n                                )}\r\n                              </div>\r\n                              <small>{newDate(h?.created_at)}</small>\r\n                            </div>\r\n                            {(h?.status === 3 || h?.status === 4) && (\r\n                              <div className=\"comment-item mt-1\">\r\n                                <div className=\"comment-user \">\r\n                                  <div\r\n                                    className={`comment-teks ${\r\n                                      h?.status === 3 ? 'text-success' : 'text-warning'\r\n                                    }`}\r\n                                  >\r\n                                    <small style={{ fontWeight: '600' }}>\r\n                                      {h?.status === 3 ? 'Comment' : 'Notes'}\r\n                                    </small>\r\n                                    {h.notes}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          </Fragment>\r\n                        ) : (\r\n                          <div key={h?.comment_id} className=\"comment-item\">\r\n                            <div className=\"comment-user\">\r\n                              <img\r\n                                src={user1}\r\n                                className=\"rounded-circle\"\r\n                                alt=\"avatar\"\r\n                                width=\"35\"\r\n                                height=\"35\"\r\n                              />\r\n                              <div key={h?.comment_id} className=\"comment-teks\">\r\n                                <small style={{ fontWeight: '600' }}>{h?.first_name}</small>\r\n                                {h?.comment}\r\n                                <div className=\"comment-time\">\r\n                                  <small>{newDate(h?.created_at)}</small>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ),\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    'Loading...'\r\n                  )}\r\n                </div>\r\n                <Form onSubmit={handleComment}>\r\n                  <div className=\"input-comment\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"comment\"\r\n                      ref={inputCommentRef}\r\n                      onChange={(e) => setPostComment({ comment: e.target.value })}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    <div className=\"\">\r\n                      <Button\r\n                        className=\"btn\"\r\n                        outline\r\n                        color=\"info\"\r\n                        disabled={commentSending}\r\n                        type=\"submit\"\r\n                      >\r\n                        <MaterialIcon icon=\"send\" />\r\n                        {commentSending ? 'Sending' : 'Send'}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ModalBody>\r\n      </Modal>\r\n      <Modal isOpen={emModal} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={() => setEmModal(false)}>Assigne Employee</ModalHeader>\r\n        <ModalBody>\r\n          <Select\r\n            closeMenuOnSelect\r\n            components={animatedComponents}\r\n            isMulti\r\n            defaultValue={assignedEmployees}\r\n            options={listEmployee}\r\n            onChange={(choice) => setAssignedEmployees(choice)}\r\n          />\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nTaskPopup.propTypes = {\r\n  modal: PropTypes.bool,\r\n  setModal: PropTypes.func,\r\n  toggle: PropTypes.any,\r\n  task: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  mode: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default TaskPopup;\r\n","const newDate = (date) => {\r\n  if (date) {\r\n    const todayTimeStamp = new Date();\r\n    const timestamp = new Date(date);\r\n\r\n    const dateString =\r\n      timestamp.toDateString() === todayTimeStamp.toDateString()\r\n        ? 'Today'\r\n        : timestamp.toDateString();\r\n    const localeString = timestamp.toLocaleString();\r\n    const time = localeString.split(',')[1];\r\n    return `${dateString}, ${time.split(':')[0]}:${time.split(':')[1]} ${time.split(' ')[2] || ''}`;\r\n  }\r\n  return date;\r\n  //   return `${dateString}, ${time.split(':')[0]}:${time.split(':')[1]}`;\r\n};\r\n\r\nexport default newDate;\r\n"],"names":["_ref","menuOptions","taskId","status","action","progress","duplicateFn","actionMenu","setActionMenu","useState","deleteTask","_jsxs","className","children","_jsx","type","concat","onClick","MaterialIcon","icon","_Fragment","options","map","op","to","disabled","changeStatusTask","setStatus","label","Link","id","Toast","Toaster","toastOptions","style","alert","msg","notify","toast","success","error","props","title","tooltipOpen","setTooltipOpen","Tooltip","placement","isOpen","target","toggle","_auth$user","_auth$user2","_auth$user3","_task$files2","_files$2","_task$files3","_task$files4","_task$files5","_task$pics2","_task$files6","_files$3","_task$files7","_auth$user4","_sortHistoryByDate","modal","setModal","task","refetch","mode","name","projectId","useParams","auth","useAuth","history","setHistory","loading","setLoading","taskTemp","setTaskTemp","assignedEmployees","setAssignedEmployees","listEmployee","setListEmploye","emModal","setEmModal","updating","setUpdating","uploading","setUploading","comments","setComments","postComment","setPostComment","commentSending","setCommentSending","files","setFiles","popContent","setPopContent","selectedFileId","setSelectedFileId","isDeletingFile","setIsDeletingFile","listFile","setListFile","userIsPic","setUserIsPic","inputCommentRef","useRef","userRoles","user","roles","userId","employe_id","api","useAxios","animatedComponents","makeAnimated","useEffect","_task$pics","approval_id","task_title","task_desc","task_progress","start_date","end_date","pics","pic","first_name","value","async","get","task_id","then","res","data","fetchComments","fetchHistory","find","p","toString","includes","catch","err","console","log","fetchEmployees","handleUpload","_files$","e","preventDefault","length","size","post","headers","_task$files","push","file","deleteFile","fileId","delete","fileUrl","process","Modal","bind","fade","centered","ModalHeader","ModalBody","height","created_by","FormGroup","Label","htmlFor","Input","readOnly","em","i","onSubmit","for","hidden","onChange","TooltipHover","color","fontSize","Button","outline","f","_f$employe_id","file_name","file_id","project_id","patch","_objectSpread","cols","rows","child","sub","defaultValue","assigneModal","task_parent","Badge","ActionMenu","newDate","created_at","sort","a","b","localeCompare","h","Fragment","pic_task","status_by","fontWeight","notes","src","user1","alt","width","comment","comment_id","Form","current","reset","ref","autoComplete","Select","closeMenuOnSelect","components","isMulti","choice","date","todayTimeStamp","Date","timestamp","dateString","toDateString","time","toLocaleString","split"],"sourceRoot":""}