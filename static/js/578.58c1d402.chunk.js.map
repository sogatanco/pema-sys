{"version":3,"file":"static/js/578.58c1d402.chunk.js","mappings":"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","sources":["components/actionMenu/ActionMenu.js","components/atoms/Toast.js","layouts/breadcrumbs/BreadCrumbs.js","pages/daily/Newtask.js","pages/daily/TaskBoard.js","pages/daily/Daily.js","pages/daily/Review.js","pages/daily/TeamAct.js","pages/daily/Home.js","pages/daily/index.js","views/dashboards/TopCardsData.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ActionMenu.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ActionMenu = ({ menuOptions, taskId, status, action, progress, duplicateFn }) => {\r\n  const [actionMenu, setActionMenu] = useState(false);\r\n\r\n  const deleteTask = () => {\r\n    setActionMenu(false);\r\n    action();\r\n  };\r\n\r\n  const changeStatusTask = (setStatus) => {\r\n    action(taskId, setStatus);\r\n    setActionMenu(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"action\">\r\n      <button\r\n        type=\"button\"\r\n        className={`btn-option ${actionMenu && 'active'}`}\r\n        onClick={() => setActionMenu(true)}\r\n      >\r\n        <MaterialIcon icon=\"more_vert\" />\r\n      </button>\r\n      {actionMenu && (\r\n        <>\r\n          <div className=\"action-overlay\" onClick={() => setActionMenu(false)} />\r\n          <div className=\"action-options rounded-3\">\r\n            {menuOptions?.options.map((op) => (\r\n              <div key={op.id}>\r\n                {op.to === 'duplicate' ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-muted\"\r\n                    disabled\r\n                    onClick={() => duplicateFn(taskId)}\r\n                  >\r\n                    {op.icon}\r\n                    Duplicate\r\n                  </button>\r\n                ) : op.type === 'button' ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-muted\"\r\n                    onClick={() => changeStatusTask(op.to)}\r\n                    disabled={\r\n                      op.to === status ||\r\n                      (op.to === 2 && status === 0) ||\r\n                      (op.to === 2 && status === 4) ||\r\n                      (op.to === 0 && status === 4) ||\r\n                      (op.to === 2 && progress !== 100)\r\n                    }\r\n                  >\r\n                    {op.icon}\r\n                    {op.label}\r\n                  </button>\r\n                ) : op.type === 'link' ? (\r\n                  <Link className=\"text-muted\" onClick={op.to}>\r\n                    {op.icon}\r\n                    {op.label}\r\n                  </Link>\r\n                ) : (\r\n                  <div className=\"action-del\">\r\n                    <button type=\"button\" onClick={deleteTask}>\r\n                      <MaterialIcon icon=\"delete_outline\" />\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nActionMenu.propTypes = {\r\n  menuOptions: PropTypes.object,\r\n  taskId: PropTypes.number,\r\n  status: PropTypes.number,\r\n  action: PropTypes.func,\r\n  progress: PropTypes.number,\r\n  duplicateFn: PropTypes.func,\r\n};\r\n\r\nexport default ActionMenu;\r\n","import React from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst notify = (type, msg) =>\r\n  type === 'success'\r\n    ? toast.success(msg)\r\n    : type === 'create'\r\n    ? toast(msg, {\r\n        icon: '🤗',\r\n      })\r\n    : type === 'start'\r\n    ? toast('Lets get started, cheer up!', {\r\n        icon: '💪',\r\n      })\r\n    : type === 'done'\r\n    ? toast('Horeee, task done!', {\r\n        icon: '👏',\r\n      })\r\n    : toast.error(msg);\r\n\r\nexport const Toast = () => {\r\n  return (\r\n    <Toaster\r\n      toastOptions={{\r\n        className: '',\r\n        style: {\r\n          //   border: '1px solid #713200',\r\n          //   padding: '16px',\r\n          //   color: '#713200',\r\n          //   width: '800px',\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const alert = (type, msg) => {\r\n  notify(type, msg);\r\n};\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = () => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  return (\r\n    <>\r\n      <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import React, { useEffect } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport { DemoItem } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { MobileDateTimePicker } from '@mui/x-date-pickers/MobileDateTimePicker';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { Row, Col, Button } from 'reactstrap';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport { useQueries } from '@tanstack/react-query';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst filt = createFilterOptions();\r\n\r\nconst Newtask = ({ refetch }) => {\r\n  const [activities, setActivities] = React.useState([]);\r\n  const [categories, setCategories] = React.useState([]);\r\n  const [value, setValue] = React.useState(null);\r\n  const [star, setStar] = React.useState(dayjs());\r\n  const [end, setEnd] = React.useState(dayjs());\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [category, setCategory] = React.useState(null);\r\n  const [actpoin, setActpoin] = React.useState(0);\r\n  const [isAddForm, setIsAddForm] = React.useState(false);\r\n\r\n  const activityValueSubmit = {\r\n    activity: '',\r\n    poin: 0,\r\n    start: dayjs(),\r\n    end: dayjs(),\r\n    category: '',\r\n    progress: 0,\r\n  };\r\n  const api = useAxios();\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    if (value?.activity && category?.id) {\r\n      activityValueSubmit.activity = value?.activity;\r\n      activityValueSubmit.start = dayjs(star);\r\n      activityValueSubmit.end = dayjs(end);\r\n      activityValueSubmit.category = category?.id;\r\n      activityValueSubmit.progress = progress;\r\n      activityValueSubmit.poin = actpoin;\r\n      e.preventDefault();\r\n      await api\r\n        .post(`dapi/activit`, activityValueSubmit)\r\n        .then(() => {\r\n          alert('success', `Data has been submitted !`);\r\n          setValue(null);\r\n          setCategory(null);\r\n          setProgress(0);\r\n          setStar(dayjs());\r\n          setEnd(dayjs());\r\n          refetch();\r\n        })\r\n        .catch((err) => {\r\n          alert('error', err);\r\n        });\r\n    } else {\r\n      alert('error', `Fields Can't Be Empty !!`);\r\n    }\r\n  };\r\n\r\n  const addForm = async (e) => {\r\n    e.preventDefault();\r\n    setIsAddForm(true);\r\n  };\r\n\r\n  const removeForm = async (e) => {\r\n    e.preventDefault();\r\n    setIsAddForm(false);\r\n  };\r\n\r\n  const [act, cat] = useQueries({\r\n    queries: [\r\n      {\r\n        queryKey: ['act'],\r\n        queryFn: () =>\r\n          api.get(`dapi/activities`).then((res) => {\r\n            return res.data.data;\r\n          }),\r\n      },\r\n      {\r\n        queryKey: ['cat'],\r\n        queryFn: () =>\r\n          api.get(`dapi/categories`).then((res) => {\r\n            return res.data.data;\r\n          }),\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    setCategories(cat.data);\r\n    setActivities(act.data);\r\n  }, [cat.data, act.data]);\r\n\r\n  return !isAddForm ? (\r\n    <div className=\"d-grid gap-2 mt-3\">\r\n      <Button variant=\"dark\" size=\"lg\" onClick={addForm}>\r\n        Add New Activity\r\n      </Button>\r\n    </div>\r\n  ) : (\r\n    <>\r\n      <div className=\"d-flex justify-content-end mb-3\">\r\n        <MaterialIcon icon=\"close\" onClick={removeForm} />\r\n      </div>\r\n      <Autocomplete\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          if (typeof newValue === 'string') {\r\n            setValue({\r\n              activity: newValue,\r\n            });\r\n            setActpoin(0);\r\n          } else if (newValue && newValue.inputValue) {\r\n            setValue({\r\n              activity: newValue.inputValue,\r\n            });\r\n            setActpoin(0);\r\n          } else {\r\n            setValue(newValue);\r\n            setActpoin(newValue?.poin);\r\n\r\n            const filcat = cat.data.filter((cats) => cats.id === parseInt(newValue?.category, 10));\r\n            if (filcat?.length > 0) {\r\n              setCategory(filcat[0]);\r\n            }\r\n          }\r\n        }}\r\n        filterOptions={(options, params) => {\r\n          const filtered = filt(options, params);\r\n\r\n          const { inputValue } = params;\r\n          const isExisting = options.some((option) => inputValue === option.activity);\r\n          if (inputValue !== '' && !isExisting) {\r\n            filtered.push({\r\n              inputValue,\r\n              activity: `Add \"${inputValue}\"`,\r\n            });\r\n          }\r\n\r\n          return filtered;\r\n        }}\r\n        selectOnFocus\r\n        clearOnBlur\r\n        handleHomeEndKeys\r\n        id=\"free-solo-with-text-demo\"\r\n        options={activities || []}\r\n        getOptionLabel={(option) => {\r\n          if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.activity;\r\n        }}\r\n        renderOption={(props, option) => <li {...props}>{option.activity}</li>}\r\n        freeSolo\r\n        renderInput={(params) => <TextField {...params} label=\"What are you doing today ?\" />}\r\n      />\r\n      <Row className=\"mt-3\">\r\n        <Col>\r\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <DemoItem>\r\n              <MobileDateTimePicker value={star} onChange={(e) => setStar(e)} label=\"Mulai\" />\r\n            </DemoItem>\r\n          </LocalizationProvider>\r\n        </Col>\r\n        <Col>\r\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <DemoItem>\r\n              <MobileDateTimePicker label=\"Selesai\" value={end} onChange={(e) => setEnd(e)} />\r\n            </DemoItem>\r\n          </LocalizationProvider>\r\n        </Col>\r\n        <Col>\r\n          <Autocomplete\r\n            id=\"disabled-options-demo\"\r\n            options={categories || []}\r\n            value={category}\r\n            onChange={(event, newValue) => {\r\n              if (typeof newValue === 'string') {\r\n                setCategory({\r\n                  category_name: newValue,\r\n                });\r\n              } else if (newValue && newValue.inputValue) {\r\n                setCategory({\r\n                  category_name: newValue.inputValue,\r\n                });\r\n              } else {\r\n                setCategory(newValue);\r\n              }\r\n            }}\r\n            getOptionLabel={(option) => {\r\n              if (typeof option === 'string') {\r\n                return option;\r\n              }\r\n              if (option.inputValue) {\r\n                return option.inputValue;\r\n              }\r\n              return option.category_name;\r\n            }}\r\n            renderOption={(props, option) => <li {...props}>{option.category_name}</li>}\r\n            renderInput={(params) => <TextField {...params} label=\"Category\" />}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Box sx={{ p: 2, borderRadius: 2, marginTop: 2, border: '0.5px solid #C4C4C4' }}>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item>\r\n            <Typography id=\"input-slider\" gutterBottom>\r\n              Progress\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider\r\n              value={typeof progress === 'number' ? progress : 0}\r\n              onChange={(e, newVal) => setProgress(newVal)}\r\n              aria-labelledby=\"input-slider\"\r\n            />\r\n          </Grid>\r\n          <Grid item>{`${progress}%`}</Grid>\r\n        </Grid>\r\n      </Box>\r\n      <div className=\"d-grid gap-2 mt-3\">\r\n        <Button variant=\"dark\" size=\"lg\" onClick={submit}>\r\n          SUBMIT\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nNewtask.propTypes = {\r\n  refetch: PropTypes.func,\r\n};\r\nexport default Newtask;\r\n","import React, { useState } from 'react';\r\nimport { Card, Badge, Modal, ModalBody, ModalHeader, Button } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport PropTypes from 'prop-types';\r\nimport './TaskBoard.scss';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport Slider from '@mui/material/Slider';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport ActionMenu from '../../components/actionMenu/ActionMenu';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst TaskBoard = ({ data, isLoading, employe, refetch }) => {\r\n  const menuOptions = {\r\n    options: [\r\n      {\r\n        id: 1,\r\n        icon: <MaterialIcon icon=\"edit_note\" />,\r\n        type: 'button',\r\n        label: 'Delete',\r\n        to: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [assignedEmployees, setAssignedEmployees] = useState([]);\r\n  const [createdId, setCreatedId] = useState();\r\n  const [idTaskUpdate, setIdTaskUpdate] = useState();\r\n  const [newMem, setNewMem] = useState();\r\n  const [modal, setModal] = useState(false);\r\n  const [modalProgress, setModalProgress] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [modal1, setModal1] = useState(false);\r\n  const [assignee, SetAssignee] = useState();\r\n\r\n  const api = useAxios();\r\n  const valueSubmit = {\r\n    id: 0,\r\n    new_member: '',\r\n  };\r\n\r\n  const dataProgress = {\r\n    id: 0,\r\n    progress: 0,\r\n  };\r\n\r\n  const dataDelete = {\r\n    id: 0,\r\n  };\r\n  const changeAssign = (choice) => {\r\n    setAssignedEmployees(choice);\r\n    const s = choice.filter((c) => c.value !== createdId);\r\n    const newMember = [`//${createdId}//`];\r\n    s.map((r) => newMember.push(`//${r.value}//`));\r\n    setNewMem(newMember.toLocaleString());\r\n  };\r\n\r\n  const toggle = (p, idd) => {\r\n    setModal(!modal);\r\n    setCreatedId(p[0]?.employe_id);\r\n    setIdTaskUpdate(idd);\r\n    if (!modal) {\r\n      const dataMember = [];\r\n      p.map((s) => dataMember.push({ label: s.first_name, value: s.employe_id }));\r\n      setAssignedEmployees(dataMember);\r\n    }\r\n  };\r\n\r\n  const toggleProgress = (id, prog) => {\r\n    setIdTaskUpdate(id);\r\n    setModalProgress(!modalProgress);\r\n\r\n    if (!modalProgress) {\r\n      setProgress(parseInt(prog, 10));\r\n      console.log(id);\r\n    }\r\n  };\r\n\r\n  const updateDataAssign = async (e) => {\r\n    console.log(newMem);\r\n    console.log(idTaskUpdate);\r\n    valueSubmit.id = idTaskUpdate;\r\n    valueSubmit.new_member = newMem;\r\n\r\n    e.preventDefault();\r\n    await api.post(`dapi/myactivity/update`, valueSubmit).then(() => {\r\n      setModal(!modal);\r\n      alert('success', `Task Members has been updated !`);\r\n      refetch();\r\n    });\r\n  };\r\n\r\n  const updateProgress = async (e) => {\r\n    dataProgress.id = idTaskUpdate;\r\n    dataProgress.progress = progress;\r\n    console.log(dataProgress);\r\n    e.preventDefault();\r\n\r\n    await api.post(`dapi/myactivity/progress`, dataProgress).then(() => {\r\n      setModalProgress(!modalProgress);\r\n      alert('success', `Progress has been updated !`);\r\n      refetch();\r\n    });\r\n  };\r\n\r\n  const actionMenu = async (taskId, to) => {\r\n    if (to === 1) {\r\n      dataDelete.id = taskId;\r\n\r\n      await confirmAlert({\r\n        title: `Are you sure ?`,\r\n        message: `Be careful, what has gone will not come back`,\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n              api.post(`dapi/myactivity/delete`, dataDelete).then(() => {\r\n                alert('success', `Activity Deleted !`);\r\n                refetch();\r\n              });\r\n            },\r\n          },\r\n          {\r\n            label: 'No',\r\n            onClick: () => {},\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  };\r\n\r\n  const toggle1 = (p) => {\r\n    setModal1(!modal1);\r\n    if (!modal1) {\r\n      SetAssignee(p);\r\n    }\r\n  };\r\n\r\n  return isLoading ? (\r\n    'Loading'\r\n  ) : (\r\n    <>\r\n      {data?.map((act) => (\r\n        <Card body key={act.id} className=\"mb-2\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <Badge className=\"img-pluss\" color=\"info\" style={{ height: 'max-content' }}>\r\n              {act.category_name}\r\n            </Badge>\r\n            {parseInt(act.progress, 10)===100?<small>{act.status}</small>:<ActionMenu\r\n              menuOptions={menuOptions}\r\n              taskId={act.id}\r\n              status={parseInt(act.status, 10)}\r\n              progress={parseInt(act.progress, 10)}\r\n              action={actionMenu}\r\n            />}\r\n          </div>\r\n          <div className=\"board-body\">\r\n            <div className=\"task-title fw-bold\">{act.activity}</div>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <small className=\"text-muted\">Start : {act.start}</small>\r\n              <small className=\"text-muted\">End : {act.end}</small>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-between\">\r\n            {act.status!=='approve'?<div className=\"member\">\r\n              {act?.member?.map((m, r) =>\r\n                r < 2 ? (\r\n                  <img\r\n                    key={m?.employe_id}\r\n                    src={\r\n                      m?.img\r\n                        ? m?.img\r\n                        : 'https://i.pinimg.com/736x/10/ec/86/10ec8691f73b787677bd0bbeddbd22e0.jpg'\r\n                    }\r\n                    className=\"rounded-circle\"\r\n                    alt=\"avatar\"\r\n                    width=\"35\"\r\n                    height=\"35\"\r\n                  />\r\n                ) : (\r\n                  ''\r\n                ),\r\n              )}\r\n              {act?.status!=='approve'?<div onClick={() => toggle(act?.member, act?.id)}>\r\n                <img\r\n                  src=\"https://cdn5.vectorstock.com/i/1000x1000/38/64/color-circle-with-plus-icon-vector-13503864.jpg\"\r\n                  className=\"rounded-circle img-pluss\"\r\n                  alt=\"avatar\"\r\n                  width=\"20\"\r\n                  height=\"20\"\r\n                />\r\n              </div>:''}\r\n              {/* here */}\r\n            </div>:<div className='member' onClick={()=>toggle1(act.member)}>\r\n            {act?.member?.map((m, r) =>\r\n                r < 2 ? (\r\n                  <img\r\n                    key={m?.employe_id}\r\n                    src={\r\n                      m?.img\r\n                        ? m?.img\r\n                        : 'https://i.pinimg.com/736x/10/ec/86/10ec8691f73b787677bd0bbeddbd22e0.jpg'\r\n                    }\r\n                    className=\"rounded-circle\"\r\n                    alt=\"avatar\"\r\n                    width=\"35\"\r\n                    height=\"35\"\r\n                  />\r\n                ) : (\r\n                  ''\r\n                ),\r\n              )}\r\n              </div>}\r\n            {act.status==='approve'?\r\n            <Badge\r\n            className=\"img-pluss\"\r\n            color={parseInt(act.progress,10)===0?'danger':parseInt(act.progress,10)===100?'success':'warning'}\r\n            style={{ height: 'max-content' }}\r\n          >\r\n            Progress : {act.progress}%\r\n          </Badge>\r\n            :<Badge\r\n              className=\"img-pluss\"\r\n              color={parseInt(act.progress,10)===0?'danger':parseInt(act.progress,10)===100?'success':'warning'}\r\n              style={{ height: 'max-content' }}\r\n              onClick={() => toggleProgress(act?.id, act.progress)}\r\n            >\r\n              Progress : {act.progress}%\r\n            </Badge>}\r\n          </div>\r\n        </Card>\r\n      ))}\r\n\r\n      {/* modal assign */}\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Add Another Employee</ModalHeader>\r\n        <ModalBody>\r\n          <Select\r\n            // closeMenuOnSelect={true}\r\n            components={animatedComponents}\r\n            isMulti\r\n            value={assignedEmployees}\r\n            options={employe}\r\n            onChange={changeAssign}\r\n            isClearable={assignedEmployees.some((v) => !v.isFixed)}\r\n          />\r\n\r\n          <div className=\"d-grid gap-2 mt-3\">\r\n            <Button onClick={updateDataAssign}>Update Data</Button>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      {/* modal progress */}\r\n      <Modal isOpen={modalProgress} toggle={toggleProgress}>\r\n        <ModalHeader toggle={toggleProgress}>Live Progress ({`${progress}%`})</ModalHeader>\r\n        <ModalBody>\r\n          <Slider\r\n            value={typeof progress === 'number' ? progress : 0}\r\n            onChange={(e, newVal) => setProgress(newVal)}\r\n            aria-labelledby=\"input-slider\"\r\n          />\r\n          <div className=\"d-grid gap-2 mt-3\">\r\n            <Button onClick={updateProgress}>Submit Update</Button>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modal1} toggle={toggle1}>\r\n        <ModalBody>\r\n          {assignee?.map((a) => (\r\n            <Badge key={a.employe_id} color=\"primary\" className=\"me-2\">\r\n              {a.first_name}\r\n            </Badge>\r\n          ))}\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nTaskBoard.propTypes = {\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  employe: PropTypes.array,\r\n  refetch: PropTypes.func,\r\n};\r\n\r\nexport default TaskBoard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\nimport { useQueries } from '@tanstack/react-query';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport Newtask from './Newtask';\r\nimport TaskBoard from './TaskBoard';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst Daily = () => {\r\n  const [todos, setTodos] = useState();\r\n  const [progress, setProgress] = useState();\r\n  const [done, setDone] = useState();\r\n  const [employe, setEmploye] = useState();\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  const [filtere, setFiltere] = useState('today');\r\n\r\n  const api = useAxios();\r\n  const result = useQueries({\r\n    queries: [\r\n      {\r\n        queryKey: ['act', 0],\r\n        queryFn: () =>\r\n          api.get(`dapi/myactivity/${filtere}`).then((res) => {\r\n            return res.data.data;\r\n          }),\r\n      },\r\n      {\r\n        queryKey: ['cat', 1],\r\n        queryFn: () =>\r\n          api.get(`api/employe/assignment-list?search=all`).then((res) => {\r\n            return res.data.data;\r\n          }),\r\n      },\r\n    ],\r\n  });\r\n\r\n  const isLoadingAct = result[0].isLoading;\r\n  const { refetch } = result[0];\r\n\r\n  useEffect(() => {\r\n    const todofFiltered = result[0]?.data?.filter((act) => parseInt(act.progress, 10) === 0);\r\n    const progressFiltered = result[0]?.data?.filter(\r\n      (act) => parseInt(act.progress, 10) > 0 && parseInt(act.progress, 10) < 100,\r\n    );\r\n    const doneFiltered = result[0]?.data?.filter((act) => parseInt(act.progress, 10) === 100);\r\n\r\n    setTodos(todofFiltered);\r\n    setProgress(progressFiltered);\r\n    setDone(doneFiltered);\r\n\r\n    setEmploye(result[1]?.data);\r\n  }, [result[0].data]);\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [filtere]);\r\n\r\n  const handleFiltere = (f) => {\r\n    setFiltere(f);\r\n    alert(`success`, `My Activity fitlered by start : ${f}`);\r\n  };\r\n  return (\r\n    <>\r\n      <Card className=\"mb-3\">\r\n        <CardBody className=\"p-4\">\r\n          <Newtask {...{ refetch }}></Newtask>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <div className=\"d-flex justify-content-end\">\r\n        <Dropdown isOpen={dropdownOpen} toggle={toggle} className=\"mb-3\">\r\n          <DropdownToggle caret>\r\n            <MaterialIcon icon=\"filter_alt\" />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem onClick={() => handleFiltere('today')}>Today</DropdownItem>\r\n            <DropdownItem onClick={() => handleFiltere('yesterday')}>Yesterday</DropdownItem>\r\n            <DropdownItem onClick={() => handleFiltere('week')}>This Week</DropdownItem>\r\n            <DropdownItem onClick={() => handleFiltere('month')}>This Month</DropdownItem>\r\n            <DropdownItem onClick={() => handleFiltere('year')}>This Years</DropdownItem>\r\n            <DropdownItem onClick={() => handleFiltere('all')}>All The Time</DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </div>\r\n\r\n      <Row>\r\n        <Col md=\"4\">\r\n          <Card className=\"mb-3\" body>\r\n            <h3 className=\"mb-0\">Todo({todos?.length})</h3>\r\n          </Card>\r\n          <TaskBoard data={todos} {...{ isLoadingAct, employe, refetch }}></TaskBoard>\r\n        </Col>\r\n        <Col md=\"4\">\r\n          <Card className=\"mb-3\" body>\r\n            <h3 className=\"mb-0\">Progres({progress?.length})</h3>\r\n          </Card>\r\n          <TaskBoard data={progress} {...{ isLoadingAct, employe, refetch }}></TaskBoard>\r\n        </Col>\r\n        <Col md=\"4\">\r\n          <Card className=\"mb-3\" body>\r\n            <h3 className=\"mb-0\">Done({done?.length})</h3>\r\n          </Card>\r\n          <TaskBoard data={done} {...{ isLoadingAct, employe, refetch }}></TaskBoard>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Daily;\r\n","import React, { useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Table,\r\n  Badge,\r\n  Button,\r\n  ButtonGroup,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Input,\r\n  FormGroup,\r\n  Label,\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport './Review.scss';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst Review = ({ misal, refetch }) => {\r\n  const [modal, setModal] = useState(false);\r\n  const [modal1, setModal1] = useState(false);\r\n  const [idAct, setIdAct] = useState(0);\r\n  const [catatan, setCatatan] = useState('');\r\n  const [modalApprove, setModalApprove] = useState(false);\r\n  const [activity, setActivity] = useState();\r\n\r\n  const [activityName, setActivityName] = useState('');\r\n  const [activityPoin, setActivityPoin] = useState(0);\r\n  const [category, setCategory] = useState(0);\r\n  const [assignee, SetAssignee] = useState();\r\n\r\n  const activityValueSubmit = {\r\n    id: 0,\r\n    activity: '',\r\n    poin: 0,\r\n    category: 0,\r\n    status: '',\r\n    catatan: '',\r\n  };\r\n\r\n  const api = useAxios();\r\n\r\n  const { data } = useQuery({\r\n    queryKey: ['cat'],\r\n    queryFn: () =>\r\n      api.get(`dapi/categories`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  const toggle = (p) => {\r\n    setModal(!modal);\r\n    if (!modal) {\r\n      setIdAct(p);\r\n    }\r\n  };\r\n\r\n  const toggleApprove = (p) => {\r\n    setModalApprove(!modalApprove);\r\n    if (!modalApprove) {\r\n      setIdAct(p.id);\r\n      setActivity(p);\r\n      setActivityName(p.activity);\r\n      setActivityPoin(parseInt(p.poin, 10));\r\n      setCategory(parseInt(p.category, 10));\r\n    }\r\n  };\r\n\r\n  const reject = async (e) => {\r\n    activityValueSubmit.status = 'reject';\r\n    activityValueSubmit.catatan = catatan;\r\n    activityValueSubmit.id = idAct;\r\n\r\n    if (catatan !== '') {\r\n      e.preventDefault();\r\n\r\n      await api\r\n        .post(`dapi/mustreview/review`, activityValueSubmit)\r\n        .then(() => {\r\n          alert('success', `Rejected Succesfully !!`);\r\n          setCatatan('');\r\n          setModal(!modal);\r\n          refetch();\r\n        })\r\n        .catch((err) => {\r\n          alert('error', err);\r\n          setModal(!modal);\r\n        });\r\n    } else {\r\n      setModal(!modal);\r\n      alert('error', `Please Privide your reason !!`);\r\n    }\r\n  };\r\n\r\n  const toggle1 = (p) => {\r\n    setModal1(!modal1);\r\n    if (!modal1) {\r\n      SetAssignee(p);\r\n    }\r\n  };\r\n\r\n  const approvesubmit = async (e) => {\r\n    activityValueSubmit.status = 'approve';\r\n    activityValueSubmit.id = idAct;\r\n    activityValueSubmit.poin = activityPoin;\r\n    activityValueSubmit.activity = activityName;\r\n    activityValueSubmit.category = category;\r\n\r\n    if (activityPoin !== 0) {\r\n      e.preventDefault();\r\n\r\n      await api\r\n        .post(`dapi/mustreview/review`, activityValueSubmit)\r\n        .then(() => {\r\n          alert('success', `Approved Succesfully !!`);\r\n          setCatatan('');\r\n          setModalApprove(!modalApprove);\r\n          refetch();\r\n        })\r\n        .catch((err) => {\r\n          alert('error', err);\r\n          setModalApprove(!modalApprove);\r\n        });\r\n    } else {\r\n      setModalApprove(!modalApprove);\r\n      alert('error', 'The Activity Poin must more than 0 !');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          {misal?.length > 0 ? (\r\n            <Table striped className=\"mt-2\" responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>Activities</th>\r\n                  <th>Poin</th>\r\n                  <th>Done By</th>\r\n                  <th>Progres</th>\r\n                  <th>Due Date</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {misal?.map((d) => (\r\n                  <tr key={d.id}>\r\n                    <th scope=\"row\">{d.activity}</th>\r\n                    <th scope=\"row\">{d.poin}</th>\r\n\r\n                    <th scope=\"row\">\r\n                      <div className=\"member\" onClick={() => toggle1(d.member)}>\r\n                        {d?.member?.map((m, r) =>\r\n                          r < 3 ? (\r\n                            <img\r\n                              key={m?.employe_id}\r\n                              src={\r\n                                m?.img\r\n                                  ? m?.img\r\n                                  : 'https://i.pinimg.com/736x/10/ec/86/10ec8691f73b787677bd0bbeddbd22e0.jpg'\r\n                              }\r\n                              className=\"rounded-circle\"\r\n                              alt=\"avatar\"\r\n                              width=\"35\"\r\n                              height=\"35\"\r\n                            />\r\n                          ) : (\r\n                            ''\r\n                          ),\r\n                        )}\r\n\r\n                        {d?.member?.length > 3 ? (\r\n                          <img\r\n                            src=\"https://cdn5.vectorstock.com/i/1000x1000/38/64/color-circle-with-plus-icon-vector-13503864.jpg\"\r\n                            className=\"rounded-circle img-pluss\"\r\n                            alt=\"avatar\"\r\n                            width=\"20\"\r\n                            height=\"20\"\r\n                          />\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </div>\r\n                    </th>\r\n                    <th scope=\"row\">\r\n                      <Badge color=\"success\">{d.progress} % </Badge>\r\n                    </th>\r\n                    <th scope=\"row\">{new Date(d.end).toLocaleString()}</th>\r\n                    <th scope=\"row\">\r\n                      <ButtonGroup size=\"sm\">\r\n                        <Button color=\"danger\" onClick={() => toggle(d.id)}>\r\n                          Reject\r\n                        </Button>\r\n                        <Button color=\"success\" onClick={() => toggleApprove(d)}>\r\n                          Approve\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </th>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          ) : (\r\n            <p className=\"text-center mt-2\">no data available yet, please come back in a moment</p>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>What the reason ?</ModalHeader>\r\n        <ModalBody>\r\n          <Input\r\n            id=\"exampleText\"\r\n            name=\"text\"\r\n            type=\"textarea\"\r\n            value={catatan}\r\n            onChange={(e) => setCatatan(e.target.value)}\r\n          />\r\n          <div className=\"d-grid gap-2 mt-3\">\r\n            <Button onClick={reject}>Submit</Button>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalApprove} toggle={toggleApprove}>\r\n        <ModalHeader toggle={toggleApprove}>Approve Form</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"activity\">Activity</Label>\r\n            <Input\r\n              id=\"activity\"\r\n              name=\"activity\"\r\n              onChange={(e) => setActivityName(e.target.value)}\r\n              value={activityName}\r\n              disabled={parseInt(activity?.poin, 10) !== 0}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"activity\">Poin</Label>\r\n            <Input\r\n              id=\"activity\"\r\n              name=\"activity\"\r\n              type=\"number\"\r\n              onChange={(e) => setActivityPoin(e.target.value)}\r\n              value={parseInt(activityPoin, 10)}\r\n              disabled={parseInt(activity?.poin, 10) !== 0}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"activity\">Category</Label>\r\n            <Input\r\n              className=\"mb-3\"\r\n              type=\"select\"\r\n              value={category}\r\n              disabled={parseInt(activity?.poin, 10) !== 0}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n            >\r\n              {data?.map((d) => (\r\n                <option key={d.id} value={d.id}>\r\n                  {d.category_name}\r\n                </option>\r\n              ))}\r\n            </Input>\r\n          </FormGroup>\r\n          <div className=\"d-grid gap-2 mt-3\">\r\n            <Button onClick={approvesubmit}>Approve</Button>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modal1} toggle={toggle1}>\r\n        <ModalBody>\r\n          {assignee?.map((a) => (\r\n            <Badge key={a.employe_id} color=\"primary\" className=\"me-2\">\r\n              {a.first_name}\r\n            </Badge>\r\n          ))}\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nReview.propTypes = {\r\n  misal: PropTypes.array,\r\n  refetch: PropTypes.func,\r\n};\r\nexport default Review;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport * as XLSX from 'xlsx';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Table,\r\n  Badge,\r\n  Modal,\r\n  ModalBody,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Button\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport TopCardsData from '../../views/dashboards/TopCardsData';\r\n// import IndoDate from '../../utils/IndoDate';\r\n\r\nconst TeamAct = ({ tipetab }) => {\r\n  const [filterby, setFilterby] = useState('today');\r\n  const [modal, setModal] = useState(false);\r\n  const [assignee, SetAssignee] = useState();\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [todo, setTodo] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [done, setDone] = useState(0);\r\n  const toggle1 = () => setDropdownOpen((prevState) => !prevState);\r\n  const api = useAxios();\r\n  const { auth } = useAuth();\r\n  const { data, refetch, isLoading } = useQuery({\r\n    queryKey: ['catdfhds'],\r\n    queryFn: () =>\r\n      api.get(`dapi/${auth?.user.roles.includes('AllDaily') && tipetab === 'all' ? 'all' : 'myteam'}/activities/${filterby}`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n  const toggle = (p) => {\r\n    setModal(!modal);\r\n    if (!modal) {\r\n      SetAssignee(p);\r\n    }\r\n  };\r\n\r\n  const handleFiltere = (f) => {\r\n    setFilterby(f);\r\n    alert(`success`, `My Activity fitlered by start : ${f}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [filterby]);\r\n\r\n  useEffect(() => {\r\n    const todofFiltered = data?.filter((act) => parseInt(act.progress, 10) === 0);\r\n    const progressFiltered = data?.filter(\r\n      (act) => parseInt(act.progress, 10) > 0 && parseInt(act.progress, 10) < 100,\r\n    );\r\n    const doneFiltered = data?.filter((act) => parseInt(act.progress, 10) === 100);\r\n    setTodo(todofFiltered?.length);\r\n    setProgress(progressFiltered?.length);\r\n    setDone(doneFiltered?.length);\r\n  }, [data]);\r\n  // console.log(data);\r\n\r\n  const exportData=()=>{\r\n    console.log('te', data)\r\n    const rows = data.map((da) => ({\r\n      activity: da.activity,\r\n      category: da.category_name,\r\n      member:da.member.map((m)=>{\r\n        return m.first_name\r\n      }).toString(),\r\n      progress:da.progress,\r\n      status:da.status,\r\n      poin:da.poin,\r\n      start:da.start,\r\n      end:da.end,\r\n    \r\n    }));\r\n\r\n    console.log(rows)\r\n\r\n    const workbook = XLSX.utils.book_new();\r\n    const worksheet = XLSX.utils.json_to_sheet(rows);\r\n\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Products\");\r\n\r\n    XLSX.utils.sheet_add_aoa(worksheet, [\r\n      [ \"Activity Name\", \"Category\", \"Members\", \"Progress\", \"Status\", \"Poin\", \"Start\", \"End\"],\r\n    ]);\r\n\r\n    XLSX.writeFile(workbook, \"ReportFor2023.xlsx\", { compression: true });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <TopCardsData\r\n                    bg=\"danger\"\r\n                    icon=\"play-circle\"\r\n                    title={todo}\r\n                    subtitle=\"Todo Activity\"\r\n                    loading={isLoading}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <TopCardsData\r\n                    bg=\"warning\"\r\n                    icon=\"arrow-repeat\"\r\n                    title={progress}\r\n                    subtitle=\"On Process\"\r\n                    loading={isLoading}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <TopCardsData\r\n                    bg=\"success\"\r\n                    icon=\"check-circle\"\r\n                    title={done}\r\n                    subtitle=\"Done Activity\"\r\n                    loading={isLoading}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n            <div className='me-2'>\r\n            {auth?.user.roles.includes('AllDaily') && tipetab === 'all' ? <Button\r\n              color=\"warning\" onClick={exportData}\r\n            >\r\n              <MaterialIcon icon=\"print\" size=\"lg\"/>\r\n            </Button> : ''}\r\n            </div>\r\n            \r\n            <div>\r\n\r\n              <Dropdown isOpen={dropdownOpen} toggle={toggle1} className=\"mb-3\">\r\n                <DropdownToggle caret>\r\n                  <MaterialIcon icon=\"filter_alt\" />\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <DropdownItem onClick={() => handleFiltere('today')}>Today</DropdownItem>\r\n                  <DropdownItem onClick={() => handleFiltere('yesterday')}>Yesterday</DropdownItem>\r\n                  <DropdownItem onClick={() => handleFiltere('week')}>This Week</DropdownItem>\r\n                  <DropdownItem onClick={() => handleFiltere('month')}>This Month</DropdownItem>\r\n                  <DropdownItem onClick={() => handleFiltere('year')}>This Years</DropdownItem>\r\n                  <DropdownItem onClick={() => handleFiltere('all')}>All The Time</DropdownItem>\r\n                </DropdownMenu>\r\n              </Dropdown>\r\n\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n          {data?.length > 0 ? (\r\n            <Table striped className=\"mt-2\" id=\"printablediv\" responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>Activities</th>\r\n                  <th>Due Date</th>\r\n                  <th>Poin</th>\r\n                  <th>Assignee</th>\r\n                  <th>Progres</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data?.map((d) => (\r\n                  <tr key={d.id}>\r\n                    <th scope=\"row\">{d.activity}</th>\r\n                    <th scope=\"row\">{d.end}</th>\r\n                    <th scope=\"row\">{d.poin}</th>\r\n                    <th scope=\"row\">\r\n                      <div className=\"member\" onClick={() => toggle(d.member)}>\r\n                        {d?.member?.map((m, r) =>\r\n                          r < 3 ? (\r\n                            <img\r\n                              key={m?.employe_id}\r\n                              src={\r\n                                m?.img\r\n                                  ? m?.img\r\n                                  : 'https://i.pinimg.com/736x/10/ec/86/10ec8691f73b787677bd0bbeddbd22e0.jpg'\r\n                              }\r\n                              className=\"rounded-circle\"\r\n                              alt=\"avatar\"\r\n                              width=\"35\"\r\n                              height=\"35\"\r\n                            />\r\n                          ) : (\r\n                            ''\r\n                          ),\r\n                        )}\r\n\r\n                        {d?.member?.length > 3 ? (\r\n                          <img\r\n                            src=\"https://cdn5.vectorstock.com/i/1000x1000/38/64/color-circle-with-plus-icon-vector-13503864.jpg\"\r\n                            className=\"rounded-circle img-pluss\"\r\n                            alt=\"avatar\"\r\n                            width=\"20\"\r\n                            height=\"20\"\r\n                          />\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </div>\r\n                    </th>\r\n                    <th scope=\"row\">\r\n                      <Badge color={parseInt(d?.progress, 10) === 100 ? 'success' : 'warning'}>\r\n                        {d.progress} %\r\n                      </Badge>\r\n                    </th>\r\n                    <th scope=\"row\">\r\n                      <Badge color={d?.status === 'approve' ? 'success' : 'warning'}>\r\n                        {d.status}\r\n                      </Badge>\r\n                    </th>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          ) : (\r\n            <p className=\"text-center mt-2\">no data available yet, please come back in a moment</p>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalBody>\r\n          {assignee?.map((a) => (\r\n            <Badge key={a.employe_id} color=\"primary\" className=\"me-2\">\r\n              {a.first_name}\r\n            </Badge>\r\n          ))}\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nTeamAct.propTypes = {\r\n  tipetab: PropTypes.string\r\n}\r\n\r\nexport default TeamAct;\r\n","import React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport Badge from '@mui/material/Badge';\r\nimport { Card } from 'reactstrap';\r\nimport Daily from './Daily';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport Review from './Review';\r\nimport TeamAct from './TeamAct';\r\n\r\nconst Home = () => {\r\n  const [value, setValue] = React.useState('1');\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const api = useAxios();\r\n  const { auth } = useAuth();\r\n\r\n  const { data, refetch } = useQuery({\r\n    queryKey: ['todos'],\r\n    queryFn: () =>\r\n      api.get(`dapi/mustreview`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <TabContext value={value}>\r\n        <Card className=\"mb-1\">\r\n          <TabList onChange={handleChange} aria-label=\"lab API tabs example\" variant=\"scrollable\"\r\n            scrollButtons=\"auto\">\r\n            <Tab\r\n              label={\r\n                <Badge\r\n                  badgeContent={0}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  <strong>MY ACTIVITY</strong> &nbsp;&nbsp;\r\n                </Badge>\r\n              }\r\n              value=\"1\"\r\n            />\r\n            <Tab\r\n              label={\r\n                <Badge\r\n                  badgeContent={0}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  <strong>TEAMS ACTIVITY</strong> &nbsp;&nbsp;\r\n                </Badge>\r\n              }\r\n              value=\"2\"\r\n            />\r\n\r\n            <Tab\r\n              label={\r\n                <Badge\r\n                  badgeContent={data?.length}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  <strong>NEED TO REVIEW</strong> &nbsp;&nbsp;\r\n                </Badge>\r\n              }\r\n              value=\"3\"\r\n            />\r\n\r\n            {auth?.user.roles.includes('AllDaily') ? (<Tab\r\n              label={\r\n                <Badge\r\n                  badgeContent={0}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  <strong>ALL ACTIVITIES</strong> &nbsp;&nbsp;\r\n                </Badge>\r\n              }\r\n              value=\"4\"\r\n            />) : ''}\r\n          </TabList>\r\n        </Card>\r\n\r\n        <TabPanel value=\"1\" className=\"ps-0 pe-0\">\r\n          <Daily></Daily>\r\n        </TabPanel>\r\n        <TabPanel value=\"2\" className=\"ps-0 pe-0\">\r\n          <TeamAct tipetab='team'></TeamAct>\r\n        </TabPanel>\r\n        <TabPanel value=\"3\" className=\"ps-0 pe-0\">\r\n          <Review misal={data} {...{ refetch }}></Review>\r\n        </TabPanel>\r\n        <TabPanel value=\"4\" className=\"ps-0 pe-0\">\r\n          <TeamAct tipetab='all'></TeamAct>\r\n        </TabPanel>\r\n      </TabContext>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport Home from './Home';\r\n\r\nconst index = () => {\r\n  return (\r\n    <>\r\n    <BreadCrumbs />\r\n    <Home></Home>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TopCardsData = ({ bg, icon, title, subtitle, loading }) => {\r\n  return (\r\n    <Card className=\"rounded-3\">\r\n      <CardBody>\r\n        <div className=\"d-flex align-items-center\">\r\n          <span className={`circle-box md-box text-dark-white bg-${bg}`}>\r\n            <i className={`fs-2 bi bi-${icon}`} />\r\n          </span>\r\n          <div className=\"ms-3\">\r\n            <h2 className=\"mb-1 fw-normal\">{loading ? '...' : title}</h2>\r\n            <CardSubtitle className=\"fs-6 text-muted\">{subtitle}</CardSubtitle>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TopCardsData;\r\n\r\nTopCardsData.propTypes = {\r\n  bg: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  title: PropTypes.number,\r\n  subtitle: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n};\r\n"],"names":["_ref","menuOptions","taskId","status","action","progress","duplicateFn","actionMenu","setActionMenu","useState","deleteTask","_jsxs","className","children","_jsx","type","onClick","MaterialIcon","icon","_Fragment","options","map","op","to","disabled","changeStatusTask","setStatus","label","Link","id","Toast","Toaster","toastOptions","style","alert","msg","notify","toast","success","error","BreadCrumbs","location","useLocation","firstUrl","pathname","split","secondUrl","Breadcrumb","BreadcrumbItem","tag","active","filt","createFilterOptions","refetch","activities","setActivities","React","categories","setCategories","value","setValue","star","setStar","dayjs","end","setEnd","setProgress","category","setCategory","actpoin","setActpoin","isAddForm","setIsAddForm","activityValueSubmit","activity","poin","start","api","useAxios","act","cat","useQueries","queries","queryKey","queryFn","get","then","res","data","useEffect","async","e","preventDefault","Autocomplete","onChange","event","newValue","inputValue","filcat","filter","cats","parseInt","length","filterOptions","params","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","props","freeSolo","renderInput","TextField","Row","Col","LocalizationProvider","dateAdapter","AdapterDayjs","DemoItem","MobileDateTimePicker","category_name","Box","sx","p","borderRadius","marginTop","border","Grid","container","spacing","alignItems","item","Typography","gutterBottom","xs","Slider","newVal","Button","variant","size","post","catch","err","animatedComponents","makeAnimated","isLoading","employe","assignedEmployees","setAssignedEmployees","createdId","setCreatedId","idTaskUpdate","setIdTaskUpdate","newMem","setNewMem","modal","setModal","modalProgress","setModalProgress","modal1","setModal1","assignee","SetAssignee","valueSubmit","new_member","dataProgress","dataDelete","toggle","idd","_p$","employe_id","dataMember","s","first_name","toggleProgress","prog","console","log","confirmAlert","title","message","buttons","toggle1","_act$member","_act$member2","Card","body","Badge","color","height","ActionMenu","member","m","r","src","img","alt","width","Modal","isOpen","ModalHeader","ModalBody","Select","components","isMulti","choice","c","newMember","toLocaleString","isClearable","v","isFixed","a","Daily","todos","setTodos","done","setDone","setEmploye","dropdownOpen","setDropdownOpen","filtere","setFiltere","result","isLoadingAct","_result$","_result$$data","_result$2","_result$2$data","_result$3","_result$3$data","_result$4","todofFiltered","progressFiltered","doneFiltered","handleFiltere","f","CardBody","Newtask","Dropdown","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","md","TaskBoard","misal","idAct","setIdAct","catatan","setCatatan","modalApprove","setModalApprove","setActivity","activityName","setActivityName","activityPoin","setActivityPoin","useQuery","toggleApprove","Table","striped","responsive","d","_d$member","_d$member2","scope","Date","ButtonGroup","Input","name","target","FormGroup","Label","for","tipetab","filterby","setFilterby","todo","setTodo","auth","useAuth","user","roles","includes","Container","TopCardsData","bg","subtitle","loading","exportData","rows","da","toString","workbook","XLSX","book_new","worksheet","json_to_sheet","book_append_sheet","sheet_add_aoa","compression","Home","TabContext","TabList","handleChange","scrollButtons","Tab","badgeContent","anchorOrigin","vertical","horizontal","TabPanel","TeamAct","Review","index","CardSubtitle"],"sourceRoot":""}