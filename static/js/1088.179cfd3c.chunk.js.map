{"version":3,"file":"static/js/1088.179cfd3c.chunk.js","mappings":"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","sources":["pages/timeline/Timeline.js","utils/formatDate.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Scheduler } from '@bitnoi.se/react-scheduler';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\n\r\n// const mockedSchedulerData = [\r\n//   {\r\n//     id: '070ac5b5-8369-4cd2-8ba2-0a209130cc60',\r\n//     label: {\r\n//       //   icon: 'https://picsum.photos/24',\r\n//       title: 'Pemeriksaan Kode Program di setiap Modul PEMA Sys',\r\n//       subtitle: 'Divisi Teknologi Informasi',\r\n//     },\r\n//     data: [\r\n//       {\r\n//         id: '8b71a8a5-33dd-4fc8-9caa-b4a584ba3453',\r\n//         startDate: new Date('2024-04-13'),\r\n//         endDate: new Date('2024-04-28'),\r\n//         occupancy: 3600,\r\n//         title: 'Blackbox and Whitebox Testing',\r\n//         subtitle: '',\r\n//         description: '12 Subtask',\r\n//         bgColor: 'rgb(21, 137, 252)',\r\n//       },\r\n//       {\r\n//         id: '8b71a8a5-33dd-4fc8-9caa-b4a545645645',\r\n//         startDate: new Date('2024-04-13'),\r\n//         endDate: new Date('2024-04-15'),\r\n//         occupancy: 0,\r\n//         title: 'Subtask 1',\r\n//         subtitle: 'Membuat dokumen pengantar MOU',\r\n//         description: '',\r\n//         bgColor: 'rgb(105, 174, 244)',\r\n//       },\r\n//       {\r\n//         id: '8b71a8a5-33dd-4fc8-9caa-b4a5456454545',\r\n//         startDate: new Date('2024-04-15'),\r\n//         endDate: new Date('2024-04-18'),\r\n//         occupancy: 0,\r\n//         title: 'Subtask 2',\r\n//         subtitle: 'Membuat dokumen legalitas',\r\n//         description: '',\r\n//         bgColor: 'rgb(105, 174, 244)',\r\n//       },\r\n//       {\r\n//         id: '8b71a8a5-33dd-4fc8-9caa-b4a545645434535',\r\n//         startDate: new Date('2024-04-18'),\r\n//         endDate: new Date('2024-04-20'),\r\n//         occupancy: 0,\r\n//         title: 'Subtask 3',\r\n//         subtitle: 'Membuat laporan dari lapangan',\r\n//         description: '',\r\n//         bgColor: 'rgb(105, 174, 244)',\r\n//       },\r\n//       {\r\n//         id: '8b71a8a5-33dd-4fc8-9caa-b4a584ba23456',\r\n//         startDate: new Date('2024-04-25'),\r\n//         endDate: 'new Date('2024-05-05')',\r\n//         occupancy: 3600,\r\n//         title: 'Rapat dengan Sekretariat Perusahaan Pembahasan Pengembangan Aplikasi CSR',\r\n//         subtitle: '',\r\n//         description: '-',\r\n//         bgColor: 'rgb(238,157,35)',\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: '070ac5b5-8369-4cd2-8ba2-0a209130ckdorr',\r\n//     label: {\r\n//       //   icon: 'https://picsum.photos/24',\r\n//       title: 'Pemindahan Sistem Administrasi Surat & SPPD ke PEMA Sys',\r\n//       subtitle: 'Divisi Teknologi Informasi',\r\n//     },\r\n//     data: [\r\n//       {\r\n//         id: '8b71a8a5-33dd-4fc8-9caa-b4a584ba3762',\r\n//         startDate: new Date('2024-04-22T15:31:24.272Z'),\r\n//         endDate: new Date('2024-04-28T10:28:22.649Z'),\r\n//         occupancy: 3600,\r\n//         title: 'Development (Frontend & Backend)',\r\n//         subtitle: '',\r\n//         description: '-',\r\n//         bgColor: 'rgb(14,183,175)',\r\n//       },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\nconst Timeline = () => {\r\n  const [filterButtonState, setFilterButtonState] = useState(0);\r\n  const [list, setList] = useState([]);\r\n  const [tlData, setTlData] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [selectedTask, setSelectedTask] = useState();\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const api = useAxios();\r\n\r\n  const { data } = useQuery({\r\n    queryKey: ['timeline-list'],\r\n    queryFn: () =>\r\n      api.get(`api/project/timeline/list-data`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const filtered = data?.filter((item) => item?.task > 0);\r\n\r\n    setList(filtered);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    const listProj = list;\r\n    // const tasks = [];\r\n    // const datas = [];\r\n    for (let idx = 0; idx < list?.length; idx++) {\r\n      for (let is = 0; is < listProj[idx].data.length; is++) {\r\n        listProj[idx].data[is].startDate = list[idx].data[is].start_date\r\n          ? new Date(list[idx].data[is].start_date)\r\n          : new Date();\r\n        listProj[idx].data[is].endDate = new Date(list[idx].data[is].end_date);\r\n      }\r\n\r\n      //   listProj[idx] = {\r\n      //     id: list[idx].id,\r\n      //     label: {\r\n      //       title: list[idx].label.title,\r\n      //       subtitle: list[idx].label.subtitle,\r\n      //     },\r\n      //     task: list[idx].task,\r\n      //     data: tasks,\r\n      //   };\r\n    }\r\n\r\n    setTlData(listProj);\r\n  }, [list]);\r\n\r\n  const handlePopup = (item) => {\r\n    setModal(true);\r\n    setSelectedTask(item);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row style={{ minHeight: '660px' }}>\r\n        {tlData?.length > 0 ? (\r\n          <Card>\r\n            <CardBody>\r\n              <section className=\"bg-info\">\r\n                <Scheduler\r\n                  data={tlData}\r\n                  // isLoading={isLoading}\r\n                  //   onRangeChange={(newRange) => console.log(newRange)}\r\n                  onTileClick={(item) => handlePopup(item)}\r\n                  //   onItemClick={(item) => console.log(item)}\r\n                  onFilterData={() => {\r\n                    // Some filtering logic...\r\n                    setFilterButtonState(1);\r\n                  }}\r\n                  onClearFilterData={() => {\r\n                    // Some clearing filters logic...\r\n                    setFilterButtonState(0);\r\n                  }}\r\n                  config={{\r\n                    zoom: 0,\r\n                    filterButtonState,\r\n                  }}\r\n                />\r\n              </section>\r\n            </CardBody>\r\n          </Card>\r\n        ) : (\r\n          'Loading..'\r\n        )}\r\n        <Modal isOpen={modal} toggle={toggle.bind(null)} centered size=\"lg\">\r\n          <ModalHeader toggle={toggle.bind(null)}>Task Info</ModalHeader>\r\n          <ModalBody>\r\n            <table className=\"w-100\">\r\n              <tbody>\r\n                <tr>\r\n                  <td width=\"200\">Status</td>\r\n                  <td>:</td>\r\n                  <td className=\"text-dark\">\r\n                    {selectedTask?.status === 0 ? (\r\n                      <Badge color=\"primary\">To do</Badge>\r\n                    ) : selectedTask?.status === 1 ? (\r\n                      <Badge color=\"warning\">Inprogress</Badge>\r\n                    ) : (\r\n                      <Badge color=\"success\">Done</Badge>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Task Title</td>\r\n                  <td>:</td>\r\n                  <td className=\"text-dark\">{selectedTask?.title}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Start date</td>\r\n                  <td>:</td>\r\n                  <td className=\"text-dark\">\r\n                    {newDate(selectedTask?.startDate?.toLocaleString())?.split(',')[0]}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>End date</td>\r\n                  <td>:</td>\r\n                  <td className=\"text-dark\">\r\n                    {newDate(selectedTask?.endDate?.toLocaleString())?.split(',')[0]}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" size=\"sm\" outline onClick={toggle.bind(null)}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","const newDate = (date) => {\r\n  if (date) {\r\n    const todayTimeStamp = new Date();\r\n    const timestamp = new Date(date);\r\n\r\n    const dateString =\r\n      timestamp.toDateString() === todayTimeStamp.toDateString()\r\n        ? 'Today'\r\n        : timestamp.toDateString();\r\n    const localeString = timestamp.toLocaleString();\r\n    const time = localeString.split(',')[1];\r\n    return `${dateString}, ${time.split(':')[0]}:${time.split(':')[1]} ${time.split(' ')[2] || ''}`;\r\n  }\r\n  return date;\r\n  //   return `${dateString}, ${time.split(':')[0]}:${time.split(':')[1]}`;\r\n};\r\n\r\nexport default newDate;\r\n"],"names":["Timeline","_newDate","_selectedTask$startDa","_newDate2","_selectedTask$endDate","filterButtonState","setFilterButtonState","useState","list","setList","tlData","setTlData","modal","setModal","selectedTask","setSelectedTask","toggle","api","useAxios","data","useQuery","queryKey","queryFn","get","then","res","useEffect","filtered","filter","item","task","listProj","idx","length","is","startDate","start_date","Date","endDate","end_date","_jsx","_Fragment","children","_jsxs","Row","style","minHeight","Card","CardBody","className","Scheduler","onTileClick","handlePopup","onFilterData","onClearFilterData","config","zoom","Modal","isOpen","bind","centered","size","ModalHeader","ModalBody","width","status","Badge","color","title","newDate","toLocaleString","split","ModalFooter","Button","outline","onClick","date","todayTimeStamp","timestamp","dateString","toDateString","time","concat"],"sourceRoot":""}