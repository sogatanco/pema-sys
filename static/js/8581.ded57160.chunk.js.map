{"version":3,"file":"static/js/8581.ded57160.chunk.js","mappings":"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","sources":["components/tabmui/TabMui.js","utils/previewPdf.js","components/fetchingFile/FetchingFile.js","components/cardFrame/CardFrame.js","pages/vendor/checks/TabGeneral.js","components/fileview/FileView.js","pages/vendor/checks/TabOfficial.js","pages/vendor/checks/TabDocument.js","pages/vendor/checks/TabPortfolio.js","pages/vendor/checks/TabBusinessField.js","pages/vendor/checks/DocumentCheck.js","utils/rupiah.js","../node_modules/reactstrap/esm/Badge.js","../node_modules/reactstrap/esm/ModalFooter.js","../node_modules/reactstrap/esm/ModalHeader.js","../node_modules/reactstrap/esm/Table.js","../node_modules/@tanstack/react-query/src/useQuery.ts","../node_modules/@tanstack/react-query/src/useBaseQuery.ts"],"sourcesContent":["import Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport Badge from '@mui/material/Badge';\r\nimport React from 'react';\r\nimport { Card, CardBody, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TabMui = ({ activeTab, setActiveTab, items, panels, children }) => {\r\n  const handleActive = (event, val) => {\r\n    setActiveTab(val);\r\n  };\r\n\r\n  return (\r\n    <TabContext value={activeTab}>\r\n      <Card className=\"mb-0 rounded-3 overflow-hidden\" style={{ paddingRight: '7px' }}>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <Col md=\"12\">\r\n            <TabList\r\n              aria-label=\"full width tabs example\"\r\n              variant=\"fullWidth\"\r\n              onChange={handleActive}\r\n            >\r\n              {items?.map((item) => (\r\n                <Tab\r\n                  key={item.id}\r\n                  label={\r\n                    <Badge\r\n                      badgeContent={0}\r\n                      anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                      }}\r\n                      color=\"primary\"\r\n                      style={{ textTransform: 'capitalize' }}\r\n                    >\r\n                      <strong>{item.title}</strong> &nbsp;&nbsp;\r\n                    </Badge>\r\n                  }\r\n                  value={item.id}\r\n                />\r\n              ))}\r\n            </TabList>\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n      {panels?.map((panel) => (\r\n        <TabPanel key={panel.id} value={panel.id} className=\"ps-0 pe-0\">\r\n          <Card className=\"mb-0 rounded-3\">\r\n            <CardBody>{children}</CardBody>\r\n          </Card>\r\n        </TabPanel>\r\n      ))}\r\n    </TabContext>\r\n  );\r\n};\r\n\r\nTabMui.propTypes = {\r\n  activeTab: PropTypes.number,\r\n  setActiveTab: PropTypes.func,\r\n  items: PropTypes.array,\r\n  panels: PropTypes.array,\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default TabMui;\r\n","const newBlob = (val, filename) => {\r\n  const blob = new Blob([val], { type: 'application/pdf' });\r\n  const url = URL.createObjectURL(blob);\r\n\r\n  window.open(\r\n    url,\r\n    filename || 'document',\r\n    'height=500,width=800,left=50,top=50,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes',\r\n  );\r\n};\r\n\r\nexport default newBlob;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FetchingFile = ({ progress }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: '4px 20px',\r\n        borderRadius: '5px',\r\n        backgroundColor: '#B9B9B9',\r\n        color: 'white',\r\n        position: 'relative',\r\n        // hover\r\n        '&:hover': {\r\n          color: 'white',\r\n        },\r\n        overflow: 'hidden',\r\n        width: 'max-content',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          height: '100%',\r\n          width: `${progress}%`,\r\n          backgroundColor: '#21C1D6',\r\n          transition: 'width 0.5s ease-in-out',\r\n        }}\r\n      />\r\n      <span style={{ position: 'relative', fontWeight: 'normal', color: 'white' }}>\r\n        Loading preview..\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nFetchingFile.propTypes = {\r\n  progress: PropTypes.number,\r\n};\r\n\r\nexport default FetchingFile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './CardFrame.scss';\r\n\r\nconst CardFrame = ({ children, title }) => {\r\n  return (\r\n    <div className=\"card-frame\">\r\n      <h5 className=\"fw-bold\">{title}</h5>\r\n      <hr />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nCardFrame.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default CardFrame;\r\n","import { useQuery } from '@tanstack/react-query';\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Table } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport useAxios from '../../../hooks/useAxios';\r\nimport previewPdf from '../../../utils/previewPdf';\r\nimport FetchingFile from '../../../components/fetchingFile/FetchingFile';\r\nimport { alert } from '../../../components/atoms/Toast';\r\nimport CardFrame from '../../../components/cardFrame/CardFrame';\r\n\r\nconst TabGeneral = ({ companyId, setSelectedName }) => {\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [selectedFileType, setSelectedFileType] = useState(null);\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['general-list'],\r\n    queryFn: () =>\r\n      api.get(`dapi/vendor/${companyId}/list-data-umum`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setSelectedName(data?.nama_perusahaan);\r\n  }, [data]);\r\n\r\n  const downloadFile = async (file, filetype) => {\r\n    setIsFetching(true);\r\n    setSelectedFileType(filetype);\r\n    const splitBySlash = file.split('/');\r\n    const fileName = splitBySlash[splitBySlash.length - 1];\r\n    await api\r\n      .get(`api/file/preview/${companyId}?type=null&file=${fileName}`, {\r\n        responseType: 'arraybuffer',\r\n        onDownloadProgress: (progressEvent) => {\r\n          const { loaded, total } = progressEvent;\r\n          const percentage = total ? Math.floor((loaded / total) * 100) : null;\r\n          setProgress(percentage);\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setIsFetching(false);\r\n        setProgress(0);\r\n        previewPdf(res.data, fileName);\r\n      })\r\n      .catch(() => {\r\n        setIsFetching(false);\r\n        alert('error', 'Failed to fetch file');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <CardFrame title=\"Data Umum\">\r\n      {isLoading ? (\r\n        'Loading..'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : (\r\n        <Table className=\"w-100\">\r\n          <tbody>\r\n            <tr>\r\n              <td width=\"300\">Bentuk Perusahaan</td>\r\n              <td width=\"8\">:</td>\r\n              <td className=\"fw-bold\">{data.bentuk_usaha}</td>\r\n            </tr>\r\n            <tr>\r\n              <td width=\"300\">Nama Perusahaan</td>\r\n              <td>:</td>\r\n              <td className=\"fw-bold\">{data.nama_perusahaan}</td>\r\n            </tr>\r\n            <tr>\r\n              <td width=\"300\">Unique ID</td>\r\n              <td>:</td>\r\n              <td className=\"fw-bold\">{data.nomor_registrasi}</td>\r\n            </tr>\r\n            <tr>\r\n              <td width=\"300\">Tipe Penyedia</td>\r\n              <td>:</td>\r\n              <td className=\"fw-bold\">{data.tipe}</td>\r\n            </tr>\r\n            <tr>\r\n              <td width=\"300\">Email Perusahaan</td>\r\n              <td>:</td>\r\n              <td className=\"fw-bold\">{data.email}</td>\r\n            </tr>\r\n            <tr>\r\n              <td width=\"300\">NPWP</td>\r\n              <td>:</td>\r\n              <td className=\"fw-bold\">{data.no_npwp}</td>\r\n            </tr>\r\n            <tr>\r\n              <td width=\"300\">File NPWP</td>\r\n              <td>:</td>\r\n              <td className=\"fw-bold\">\r\n                {isFetching && selectedFileType === 'npwp' ? (\r\n                  <FetchingFile progress={progress} />\r\n                ) : (\r\n                  <Link to=\"#\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"sm\"\r\n                      color=\"light\"\r\n                      onClick={() => downloadFile(data?.file_npwp, 'npwp')}\r\n                    >\r\n                      Lihat File NPWP\r\n                    </Button>\r\n                  </Link>\r\n                )}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td width=\"300\">Kontak</td>\r\n              <td>:</td>\r\n              <td className=\"fw-bold\">{data.hp}</td>\r\n            </tr>\r\n            <tr>\r\n              <td width=\"300\">Alamat</td>\r\n              <td>:</td>\r\n              <td className=\"fw-bold\">{data.alamat}</td>\r\n            </tr>\r\n            <tr>\r\n              <td width=\"300\">Provinsi</td>\r\n              <td>:</td>\r\n              <td className=\"fw-bold\">{data.provinsi}</td>\r\n            </tr>\r\n            <tr>\r\n              <td width=\"300\">File PVD</td>\r\n              <td>:</td>\r\n              <td className=\"fw-bold\">\r\n                {isFetching && selectedFileType === 'pvd' ? (\r\n                  <FetchingFile progress={progress} />\r\n                ) : (\r\n                  <Link to=\"#\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"sm\"\r\n                      color=\"light\"\r\n                      onClick={() => downloadFile(data?.file_pvd, 'pvd')}\r\n                    >\r\n                      Lihat File PVD\r\n                    </Button>\r\n                  </Link>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </CardFrame>\r\n  );\r\n};\r\n\r\nTabGeneral.propTypes = {\r\n  companyId: PropTypes.string,\r\n  setSelectedName: PropTypes.func,\r\n};\r\n\r\nexport default TabGeneral;\r\n","import React, { useState } from 'react';\r\nimport { Button, Col, Row } from 'reactstrap';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport previewPdf from '../../utils/previewPdf';\r\nimport FetchingFile from '../fetchingFile/FetchingFile';\r\nimport { alert } from '../atoms/Toast';\r\n\r\nconst FileView = ({ companyId, title, filename, mode, action, file }) => {\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const api = useAxios();\r\n\r\n  const downloadFile = async () => {\r\n    setIsFetching(true);\r\n    const splitBySlash = file.split('/');\r\n    const fileName = splitBySlash[splitBySlash.length - 1];\r\n    await api\r\n      .get(`api/file/preview/${companyId}?type=null&file=${fileName}`, {\r\n        responseType: 'arraybuffer',\r\n        onDownloadProgress: (progressEvent) => {\r\n          const { loaded, total } = progressEvent;\r\n          const percentage = total ? Math.floor((loaded / total) * 100) : null;\r\n          setProgress(percentage);\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setIsFetching(false);\r\n        setProgress(0);\r\n        previewPdf(res.data, fileName);\r\n      })\r\n      .catch(() => {\r\n        setIsFetching(false);\r\n        alert('error', 'Failed to fetch file');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Row className=\"align-items-center mb-4\">\r\n      <span>{title}</span>\r\n      <Col sm=\"12\" lg=\"12\">\r\n        <div className=\"d-flex rounded-2 border align-items-center justify-content-between overflow-hidden\">\r\n          <div className=\"h-100 d-flex p-3 bg-success\">\r\n            <MaterialIcon icon=\"text_snippet\" style={{ color: 'white' }} />\r\n          </div>\r\n          <div className=\"d-flex w-100 px-3\">\r\n            <span className=\"fw-bold\">{filename}</span>\r\n          </div>\r\n          <div className=\"d-flex p-2\">\r\n            {mode === 'preview' ? (\r\n              isFetching ? (\r\n                <FetchingFile progress={progress} />\r\n              ) : (\r\n                <Link to=\"#\">\r\n                  <Button type=\"button\" size=\"sm\" color=\"light\" onClick={() => downloadFile()}>\r\n                    Preview\r\n                  </Button>\r\n                </Link>\r\n              )\r\n            ) : (\r\n              <Button type=\"button\" size=\"sm\" color=\"secondary\" className=\"d-flex\" onClick={action}>\r\n                Edit\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Col>\r\n      {/* <Col sm=\"12\" lg=\"1\">\r\n        <Button type=\"button\" block outline>\r\n          Edit\r\n        </Button>\r\n      </Col> */}\r\n    </Row>\r\n  );\r\n};\r\n\r\nFileView.propTypes = {\r\n  companyId: PropTypes.string,\r\n  title: PropTypes.string,\r\n  filename: PropTypes.string,\r\n  mode: PropTypes.string,\r\n  action: PropTypes.func,\r\n  file: PropTypes.any,\r\n};\r\n\r\nexport default FileView;\r\n","import { useQuery } from '@tanstack/react-query';\r\nimport React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport useAxios from '../../../hooks/useAxios';\r\nimport FileView from '../../../components/fileview/FileView';\r\nimport CardFrame from '../../../components/cardFrame/CardFrame';\r\n\r\nconst TabOfficial = ({ companyId }) => {\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['official-list'],\r\n    queryFn: () =>\r\n      api.get(`dapi/vendor/${companyId}/list-jajaran`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <CardFrame title=\"Daftar Jajaran Direksi/Komisaris\">\r\n        {isLoading ? (\r\n          'Loading..'\r\n        ) : error ? (\r\n          'Something went wrong.'\r\n        ) : (\r\n          <>\r\n            <Table hover bordered>\r\n              <thead>\r\n                <tr>\r\n                  <th width=\"50\">#</th>\r\n                  <th className=\"text-center\">Nama</th>\r\n                  <th className=\"text-center\">Jabatan</th>\r\n                  <th className=\"text-center\">NPWP</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data?.jajaran?.length > 0 ? (\r\n                  data?.jajaran.map((item, i) => (\r\n                    <tr key={item.id}>\r\n                      <td>{i + 1}</td>\r\n                      <td>{item.nama}</td>\r\n                      <td>{item.jabatan}</td>\r\n                      <td>{item.no_npwp_direksi}</td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan={4} className=\"text-center\">\r\n                      Belum ada data jajaran\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          </>\r\n        )}\r\n      </CardFrame>\r\n      <CardFrame title=\"Struktur Perusahaan\">\r\n        {isLoading\r\n          ? 'Loading..'\r\n          : error\r\n          ? 'Something went wrong.'\r\n          : (data?.file_struktur !== '-' || data?.file_struktur !== null) && (\r\n              <FileView\r\n                companyId={companyId}\r\n                filename=\"File Struktur Perusahaan\"\r\n                file={data?.file_struktur}\r\n                mode=\"preview\"\r\n              />\r\n            )}\r\n      </CardFrame>\r\n    </>\r\n  );\r\n};\r\n\r\nTabOfficial.propTypes = {\r\n  companyId: PropTypes.string,\r\n};\r\n\r\nexport default TabOfficial;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Table } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport useAxios from '../../../hooks/useAxios';\r\nimport FileView from '../../../components/fileview/FileView';\r\nimport FetchingFile from '../../../components/fetchingFile/FetchingFile';\r\nimport previewPdf from '../../../utils/previewPdf';\r\nimport { alert } from '../../../components/atoms/Toast';\r\nimport CardFrame from '../../../components/cardFrame/CardFrame';\r\n\r\nconst fileName = [\r\n  {\r\n    key: 'company_profile',\r\n    name: 'File Company Profil',\r\n  },\r\n  {\r\n    key: 'ktp_pengurus',\r\n    name: 'File KTP Pengurus',\r\n  },\r\n  {\r\n    key: 'sk_kemenkumham',\r\n    name: 'File SK Kemenkumham',\r\n  },\r\n  {\r\n    key: 'fakta_integritas',\r\n    name: 'File Fakta Integritas',\r\n  },\r\n  {\r\n    key: 'spt',\r\n    name: 'File SPT 3 Tahun Terakhir',\r\n  },\r\n  {\r\n    key: 'pph',\r\n    name: 'File Laporan Pajak 3 Bulan Terakhir',\r\n  },\r\n  {\r\n    key: 'lap_keuangan',\r\n    name: 'File Laporan Keuangan 3 Tahun Terakhir',\r\n  },\r\n  {\r\n    key: 'rek_koran',\r\n    name: 'File Rekening Koran 3 Bulan Terakhir',\r\n  },\r\n];\r\n\r\nconst TabDocument = ({ companyId }) => {\r\n  const [akta, setAkta] = useState();\r\n  const [izin, setIzin] = useState();\r\n  const [dokumen, setDokumen] = useState(undefined);\r\n  const [aktaIsLoading, setAktaIsLoading] = useState(false);\r\n  const [izinIsLoading, setIzinIsLoading] = useState(false);\r\n  const [dokumenIsLoading, setDokumenIsLoading] = useState(false);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [selectedFileType, setSelectedFileType] = useState(null);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n\r\n  const api = useAxios();\r\n\r\n  useEffect(() => {\r\n    async function fetchAkta() {\r\n      setAktaIsLoading(true);\r\n      await api.get(`dapi/vendor/${companyId}/list-akta`).then((res) => {\r\n        setAkta(res.data.data);\r\n        setAktaIsLoading(false);\r\n      });\r\n    }\r\n\r\n    async function fetchIzin() {\r\n      setIzinIsLoading(true);\r\n      await api.get(`dapi/vendor/${companyId}/list-izin`).then((res) => {\r\n        setIzin(res.data.data);\r\n        setIzinIsLoading(false);\r\n      });\r\n    }\r\n\r\n    async function fetchDokumen() {\r\n      setDokumenIsLoading(true);\r\n      await api.get(`dapi/vendor/${companyId}/list-dokumen`).then((res) => {\r\n        setDokumen(res.data.data);\r\n        setDokumenIsLoading(false);\r\n      });\r\n    }\r\n\r\n    fetchAkta();\r\n    fetchIzin();\r\n    fetchDokumen();\r\n  }, []);\r\n\r\n  const downloadFile = async (file, filetype, id) => {\r\n    setIsFetching(true);\r\n    setSelectedFileType(filetype);\r\n    setSelectedId(id);\r\n    const splitBySlash = file.split('/');\r\n    const nameFile = splitBySlash[splitBySlash.length - 1];\r\n    await api\r\n      .get(`api/file/preview/${companyId}?type=${filetype}&file=${nameFile}`, {\r\n        responseType: 'arraybuffer',\r\n        onDownloadProgress: (progressEvent) => {\r\n          const { loaded, total } = progressEvent;\r\n          const percentage = total ? Math.floor((loaded / total) * 100) : null;\r\n          setProgress(percentage);\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setIsFetching(false);\r\n        setProgress(0);\r\n        previewPdf(res.data, nameFile);\r\n      })\r\n      .catch(() => {\r\n        setIsFetching(false);\r\n        alert('error', 'Failed to fetch file');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CardFrame title=\"Daftar Akta Perusahaan\">\r\n        {aktaIsLoading ? (\r\n          'Loading..'\r\n        ) : akta?.length > 0 ? (\r\n          <Table hover bordered>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ textAlign: 'center' }} width=\"50\">\r\n                  #\r\n                </th>\r\n                <th style={{ textAlign: 'center' }}>Nomor</th>\r\n                <th style={{ textAlign: 'center' }}>Terbit</th>\r\n                <th style={{ textAlign: 'center' }}>Notaris</th>\r\n                <th style={{ textAlign: 'center' }}>Jenis</th>\r\n                <th style={{ textAlign: 'center' }} width=\"200\">\r\n                  File\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {akta?.map((ak, i) => (\r\n                <tr key={ak.id_akta}>\r\n                  <td>{i + 1}</td>\r\n                  <td>{ak.no_akta}</td>\r\n                  <td>{ak.tgl_terbit}</td>\r\n                  <td>{ak.nama_notaris}</td>\r\n                  <td>{ak.jenis}</td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {isFetching && selectedFileType === 'akta' && selectedId === ak.id_akta ? (\r\n                      <FetchingFile progress={0} />\r\n                    ) : (\r\n                      <Link to=\"#\">\r\n                        <Button\r\n                          type=\"button\"\r\n                          size=\"sm\"\r\n                          color=\"light\"\r\n                          onClick={() => downloadFile(ak.file_akta, 'akta', ak.id_akta)}\r\n                        >\r\n                          Lihat File Akta\r\n                        </Button>\r\n                      </Link>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        ) : (\r\n          <div>Belum ada data akta</div>\r\n        )}\r\n      </CardFrame>\r\n      <CardFrame title=\"Daftar Izin Perusahaan\">\r\n        {izinIsLoading ? (\r\n          'Loading..'\r\n        ) : izin?.length > 0 ? (\r\n          <Table hover bordered>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ textAlign: 'center' }} width=\"50\">\r\n                  #\r\n                </th>\r\n                <th style={{ textAlign: 'center' }}>Nomor</th>\r\n                <th style={{ textAlign: 'center' }}>Nama Izin</th>\r\n                <th style={{ textAlign: 'center' }}>Terbit</th>\r\n                <th style={{ textAlign: 'center' }}>Berakhir</th>\r\n                <th style={{ textAlign: 'center' }} width=\"200\">\r\n                  File\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {izin?.map((iz, i) => (\r\n                <tr key={iz.id_izin}>\r\n                  <td>{i + 1}</td>\r\n                  <td>{iz.nomor}</td>\r\n                  <td>{iz.nama_izin}</td>\r\n                  <td style={{ textAlign: 'center' }}>{iz.tgl_terbit}</td>\r\n                  <td style={{ textAlign: 'center' }}>{iz.tgl_berakhir}</td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {isFetching && selectedFileType === 'izin' && selectedId === iz.id_izin ? (\r\n                      <FetchingFile progress={progress} />\r\n                    ) : (\r\n                      <Link to=\"#\">\r\n                        <Button\r\n                          type=\"button\"\r\n                          size=\"sm\"\r\n                          color=\"light\"\r\n                          onClick={() => downloadFile(iz.file_izin, 'izin', iz.id_izin)}\r\n                        >\r\n                          Lihat File Izin\r\n                        </Button>\r\n                      </Link>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        ) : (\r\n          <div>Belum ada data izin</div>\r\n        )}\r\n      </CardFrame>\r\n      <CardFrame title=\"Daftar Dokumen Perusahaan\">\r\n        {dokumenIsLoading\r\n          ? 'Loading..'\r\n          : dokumen !== undefined &&\r\n            fileName.map(\r\n              (f) =>\r\n                dokumen[f.key] !== '-' && (\r\n                  <FileView\r\n                    key={f.key}\r\n                    companyId={companyId}\r\n                    mode=\"preview\"\r\n                    file={dokumen !== undefined && dokumen[f.key]}\r\n                    filename={f.name}\r\n                  />\r\n                ),\r\n            )}\r\n      </CardFrame>\r\n    </>\r\n  );\r\n};\r\n\r\nTabDocument.propTypes = {\r\n  companyId: PropTypes.string,\r\n};\r\n\r\nexport default TabDocument;\r\n","import React, { useState } from 'react';\r\nimport { Button, Table } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport useAxios from '../../../hooks/useAxios';\r\nimport rupiah from '../../../utils/rupiah';\r\nimport FetchingFile from '../../../components/fetchingFile/FetchingFile';\r\nimport previewPdf from '../../../utils/previewPdf';\r\nimport { alert } from '../../../components/atoms/Toast';\r\nimport CardFrame from '../../../components/cardFrame/CardFrame';\r\n\r\nconst TabPortfolio = ({ companyId }) => {\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [selectedFileType, setSelectedFileType] = useState(null);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['portofolio-list'],\r\n    queryFn: () =>\r\n      api.get(`dapi/vendor/${companyId}/list-portofolio`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  const downloadFile = async (file, filetype, id) => {\r\n    setIsFetching(true);\r\n    setSelectedFileType(filetype);\r\n    setSelectedId(id);\r\n    const splitBySlash = file.split('/');\r\n    const nameFile = splitBySlash[splitBySlash.length - 1];\r\n    await api\r\n      .get(`api/file/preview/${companyId}?type=${filetype}&file=${nameFile}`, {\r\n        responseType: 'arraybuffer',\r\n        onDownloadProgress: (progressEvent) => {\r\n          const { loaded, total } = progressEvent;\r\n          const percentage = total ? Math.floor((loaded / total) * 100) : null;\r\n          setProgress(percentage);\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setIsFetching(false);\r\n        setProgress(0);\r\n        previewPdf(res.data, nameFile);\r\n      })\r\n      .catch(() => {\r\n        setIsFetching(false);\r\n        alert('error', 'Failed to fetch file');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <CardFrame title=\"Daftar Portofolio Perusahaan\">\r\n      {isLoading ? (\r\n        'Loading..'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : data?.length > 0 ? (\r\n        <Table hover bordered>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ verticalAlign: 'middle', textAlign: 'center' }} width=\"50\">\r\n                #\r\n              </th>\r\n              <th style={{ verticalAlign: 'middle', textAlign: 'center' }}>Nama Projek</th>\r\n              <th style={{ verticalAlign: 'middle', textAlign: 'center' }}>Tahun Mulai</th>\r\n              <th style={{ verticalAlign: 'middle', textAlign: 'center' }}>Tahun Selesai</th>\r\n              <th style={{ verticalAlign: 'middle', textAlign: 'center' }}>Durasi (Bulan)</th>\r\n              <th style={{ verticalAlign: 'middle', textAlign: 'center' }}>Owner</th>\r\n              <th style={{ verticalAlign: 'middle', textAlign: 'center' }}>Nilai PO</th>\r\n              <th style={{ verticalAlign: 'middle', textAlign: 'center' }} width=\"180\">\r\n                SPK\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data?.map((pr, i) => (\r\n              <tr key={pr.id_porto}>\r\n                <td>{i + 1}</td>\r\n                <td>{pr.nama_project}</td>\r\n                <td>{pr.tahun_mulai}</td>\r\n                <td>{pr.tahun_selesai}</td>\r\n                <td>{pr.durasi}</td>\r\n                <td>{pr.owner}</td>\r\n                <td>{rupiah(pr.nilai_po)}</td>\r\n                <td style={{ textAlign: 'center' }}>\r\n                  {isFetching && selectedFileType === 'spk_porto' && selectedId === pr.id_porto ? (\r\n                    <FetchingFile progress={progress} />\r\n                  ) : (\r\n                    <Link to=\"#\">\r\n                      <Button\r\n                        type=\"button\"\r\n                        size=\"sm\"\r\n                        color=\"light\"\r\n                        onClick={() => downloadFile(pr.spk, 'spk_porto', pr.id_porto)}\r\n                      >\r\n                        Lihat File SPK\r\n                      </Button>\r\n                    </Link>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        'Belum ada data.'\r\n      )}\r\n    </CardFrame>\r\n  );\r\n};\r\n\r\nTabPortfolio.propTypes = {\r\n  companyId: PropTypes.string,\r\n};\r\n\r\nexport default TabPortfolio;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Table } from 'reactstrap';\r\nimport useAxios from '../../../hooks/useAxios';\r\nimport CardFrame from '../../../components/cardFrame/CardFrame';\r\n\r\nconst TabBusinessField = ({ companyId }) => {\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['kbli-list'],\r\n    queryFn: () =>\r\n      api.get(`dapi/vendor/${companyId}/list-kbli`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  return (\r\n    <CardFrame title=\"Daftar KBLI Perusahaan\">\r\n      {isLoading ? (\r\n        'Loading..'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : data?.length > 0 ? (\r\n        <Table hover bordered>\r\n          <thead>\r\n            <tr>\r\n              <th width=\"50\">#</th>\r\n              <th>NIB</th>\r\n              <th>Nama Bidang Usaha</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data?.map((kb, i) => (\r\n              <tr key={kb.id_kbli}>\r\n                <td>{i + 1}</td>\r\n                <td>{kb.nomor_kbli}</td>\r\n                <td>{kb.nama_kbli}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        'Belum ada data.'\r\n      )}\r\n    </CardFrame>\r\n  );\r\n};\r\n\r\nTabBusinessField.propTypes = {\r\n  companyId: PropTypes.string,\r\n};\r\n\r\nexport default TabBusinessField;\r\n","import React, { useContext, useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { useParams } from 'react-router-dom';\r\nimport TabMui from '../../../components/tabmui/TabMui';\r\nimport TabGeneral from './TabGeneral';\r\nimport TabOfficial from './TabOfficial';\r\nimport TabDocument from './TabDocument';\r\nimport TabPortfolio from './TabPortfolio';\r\nimport TabBusinessField from './TabBusinessField';\r\nimport useAxios from '../../../hooks/useAxios';\r\nimport { alert } from '../../../components/atoms/Toast';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\n\r\nconst tabItems = [\r\n  {\r\n    id: 1,\r\n    title: 'Data Umum',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Data Jajaran/Komisaris',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Dokumen Perusahaan',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Portofolio',\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Bidang Usaha',\r\n  },\r\n];\r\n\r\nconst DocumentCheck = () => {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const { id } = useParams();\r\n  const [comment, setComment] = useState();\r\n  const [isApproving, setIsApproving] = useState(false);\r\n  const [selectedName, setSelectedName] = useState();\r\n  const [modal, setModal] = useState(false);\r\n  const [modal4, setModal4] = useState(false);\r\n  const { auth } = useContext(AuthContext);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['status-verifikasi'],\r\n    queryFn: () =>\r\n      api.get(`dapi/vendor/company-verify-status/${id}`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  const handleComment = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  const handleRevisi = async () => {\r\n    setIsApproving(true);\r\n    await api\r\n      .post(`dapi/vendor/verifikasi/${id}`, { status: 'revisi', komentar: comment })\r\n      .then(() => {\r\n        refetch();\r\n        alert('success', `Informasi revisi telah dikirim`);\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Gagal mengirim data');\r\n      });\r\n    setModal(false);\r\n    setIsApproving(false);\r\n  };\r\n\r\n  const toggle4 = () => {\r\n    setModal4(!modal4);\r\n  };\r\n\r\n  const handleConfirmation = (name) => {\r\n    setModal4(true);\r\n    setSelectedName(name);\r\n  };\r\n\r\n  const handleApprove = async () => {\r\n    setIsApproving(true);\r\n    await api\r\n      .post(`dapi/vendor/verifikasi/${id}`, { status: 'terverifikasi' })\r\n      .then(() => {\r\n        refetch();\r\n        alert('success', `Data Perusahaan ${selectedName} telah terverifikasi.`);\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Gagal mengirim data');\r\n      });\r\n    setModal4(false);\r\n    setIsApproving(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TabMui items={tabItems} panels={tabItems} {...{ activeTab, setActiveTab }}>\r\n        <>\r\n          {activeTab === 1 && <TabGeneral companyId={id} {...{ setSelectedName }} />}\r\n          {activeTab === 2 && <TabOfficial companyId={id} />}\r\n          {activeTab === 3 && <TabDocument companyId={id} />}\r\n          {activeTab === 4 && <TabPortfolio companyId={id} />}\r\n          {activeTab === 5 && <TabBusinessField companyId={id} />}\r\n        </>\r\n      </TabMui>\r\n      <Card className=\"rounded-3\">\r\n        <CardBody className=\"d-flex gap-3 justify-content-between\">\r\n          <div className=\"d-flex gap-1 flex-column\">\r\n            {isLoading ? (\r\n              'Loading...'\r\n            ) : error ? (\r\n              'Something went wrong.'\r\n            ) : (\r\n              <table>\r\n                <tbody>\r\n                  <tr>\r\n                    <td width=\"250\">Status di Divisi Umum</td>\r\n                    <td>:</td>\r\n                    <td>\r\n                      {data?.status_verifikasi_umum === 'register' && (\r\n                        <Badge color=\"success\" style={{ textTransform: 'capitalize' }}>\r\n                          Registered\r\n                        </Badge>\r\n                      )}\r\n                      {(data?.status_verifikasi_umum === 'review_submit' ||\r\n                        data?.status_verifikasi_umum === 'review_update') && (\r\n                        <Badge color=\"warning\" style={{ textTransform: 'capitalize' }}>\r\n                          Permintaan review dari vendor\r\n                        </Badge>\r\n                      )}\r\n                      {data?.status_verifikasi_umum === 'revisi' && (\r\n                        <Badge color=\"danger\" style={{ textTransform: 'capitalize' }}>\r\n                          Revisi data oleh Admin\r\n                        </Badge>\r\n                      )}\r\n                      {data?.status_verifikasi_umum === 'terverifikasi' && (\r\n                        <Badge color=\"success\" style={{ textTransform: 'capitalize' }}>\r\n                          Terverifikasi\r\n                        </Badge>\r\n                      )}{' '}\r\n                      <small>{data?.umum_updated_at ? `at ${data?.umum_updated_at}` : ''}</small>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td width=\"250\">Status di Divisi SCM</td>\r\n                    <td>:</td>\r\n\r\n                    <td>\r\n                      {data?.status_verifikasi_scm === 'register' && (\r\n                        <Badge color=\"success\" style={{ textTransform: 'capitalize' }}>\r\n                          Registered\r\n                        </Badge>\r\n                      )}\r\n                      {(data?.status_verifikasi_scm === 'review_submit' ||\r\n                        data?.status_verifikasi_scm === 'review_update') && (\r\n                        <Badge color=\"warning\" style={{ textTransform: 'capitalize' }}>\r\n                          Permintaan review dari vendor\r\n                        </Badge>\r\n                      )}\r\n                      {data?.status_verifikasi_scm === 'revisi' && (\r\n                        <Badge color=\"danger\" style={{ textTransform: 'capitalize' }}>\r\n                          Revisi data oleh Admin\r\n                        </Badge>\r\n                      )}\r\n                      {data?.status_verifikasi_scm === 'terverifikasi' && (\r\n                        <Badge color=\"success\" style={{ textTransform: 'capitalize' }}>\r\n                          Terverifikasi\r\n                        </Badge>\r\n                      )}\r\n                      <small> {data?.scm_updated_at ? `at ${data?.scm_updated_at}` : ''}</small>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            )}\r\n          </div>\r\n          {!auth.user.roles.includes('VendorViewer') && (\r\n            <div className=\"d-flex gap-3 align-items-center\">\r\n              <div>\r\n                <Button type=\"button\" color=\"warning\" outline onClick={toggle.bind(null)}>\r\n                  Revisi\r\n                </Button>\r\n              </div>\r\n              <div>\r\n                <Button color=\"secondary\" onClick={() => handleConfirmation(selectedName)}>\r\n                  Approve\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </CardBody>\r\n\r\n        {/* Modal Revisi */}\r\n        <Modal isOpen={modal} toggle={toggle.bind(null)} centered>\r\n          <ModalHeader toggle={toggle.bind(null)}>Revisi Data Perusahaan Vendor</ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"d-flex flex-column \">\r\n              <Label htmlFor=\"comment\">Catatan</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                id=\"comment\"\r\n                rows=\"10\"\r\n                name=\"comment\"\r\n                onChange={(e) => handleComment(e)}\r\n                placeholder=\"Masukkan catatan revisi\"\r\n              />\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                handleRevisi();\r\n              }}\r\n            >\r\n              {isApproving ? (\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <Spinner size=\"sm\" />\r\n                  Mengirim..\r\n                </div>\r\n              ) : (\r\n                'Kirim'\r\n              )}\r\n            </Button>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n        {/* Modal Revisi */}\r\n\r\n        {/* Modal Approve */}\r\n        <Modal isOpen={modal4} toggle={toggle4.bind(null)} centered>\r\n          <ModalHeader toggle={toggle4.bind(null)}>Konfirmasi</ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"d-flex text-center\">\r\n              <p>\r\n                {' '}\r\n                Data perusahaan <strong>{selectedName}</strong> akan diubah menjadi terverifikasi\r\n                dan akan mendapatkan informasi data pengadaan. Lanjutkan?\r\n              </p>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            {isApproving ? (\r\n              <Button type=\"button\" color=\"primary\" disabled>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <Spinner size=\"sm\" />\r\n                  Loading..\r\n                </div>\r\n              </Button>\r\n            ) : (\r\n              <Button type=\"button\" color=\"primary\" onClick={handleApprove}>\r\n                Ya\r\n              </Button>\r\n            )}\r\n            <Button color=\"secondary\" onClick={toggle4.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n        {/* Modal Approve */}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DocumentCheck;\r\n","const rupiah = (number) => {\r\n  return new Intl.NumberFormat('id-ID', {\r\n    style: 'currency',\r\n    currency: 'IDR',\r\n  }).format(number);\r\n};\r\n\r\nexport default rupiah;\r\n","var _excluded = [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Pass children so this component can wrap the child elements */\n  children: PropTypes.node,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change background color of Badge */\n  color: PropTypes.string,\n  /** Change existing className with a new className */\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  /** Add rounded corners to the Badge */\n  pill: PropTypes.bool,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction Badge(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$color = props.color,\n    color = _props$color === void 0 ? 'secondary' : _props$color,\n    innerRef = props.innerRef,\n    _props$pill = props.pill,\n    pill = _props$pill === void 0 ? false : _props$pill,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'span' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'badge', 'bg-' + color, pill ? 'rounded-pill' : false), cssModule);\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\nBadge.propTypes = propTypes;\nexport default Badge;","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction ModalFooter(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'modal-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nModalFooter.propTypes = propTypes;\nexport default ModalFooter;","var _excluded = [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"close\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Custom close button */\n  close: PropTypes.object,\n  closeAriaLabel: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType,\n  /** Function to be triggered when close button is clicked */\n  toggle: PropTypes.func,\n  wrapTag: tagPropType\n};\nfunction ModalHeader(props) {\n  var closeButton;\n  var className = props.className,\n    cssModule = props.cssModule,\n    children = props.children,\n    toggle = props.toggle,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'h5' : _props$tag,\n    _props$wrapTag = props.wrapTag,\n    WrapTag = _props$wrapTag === void 0 ? 'div' : _props$wrapTag,\n    _props$closeAriaLabel = props.closeAriaLabel,\n    closeAriaLabel = _props$closeAriaLabel === void 0 ? 'Close' : _props$closeAriaLabel,\n    close = props.close,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'modal-header'), cssModule);\n  if (!close && toggle) {\n    closeButton = /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('btn-close', cssModule),\n      \"aria-label\": closeAriaLabel\n    });\n  }\n  return /*#__PURE__*/React.createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), /*#__PURE__*/React.createElement(Tag, {\n    className: mapToCssModules('modal-title', cssModule)\n  }, children), close || closeButton);\n}\nModalHeader.propTypes = propTypes;\nexport default ModalHeader;","var _excluded = [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Adds border to all sides of table */\n  bordered: PropTypes.bool,\n  /** Removes all borders */\n  borderless: PropTypes.bool,\n  /** Adds custom class name to component */\n  className: PropTypes.string,\n  /**  */\n  cssModule: PropTypes.object,\n  /** Makes the table dark */\n  dark: PropTypes.bool,\n  /** Enables a hover state on the rows within `<tbody>` */\n  hover: PropTypes.bool,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]),\n  /** Responsive tables allow tables to be scrolled horizontally with ease */\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  responsiveTag: tagPropType,\n  /** Make tables more compact by cutting cell padding in half when setting size as sm. */\n  size: PropTypes.string,\n  /** Adds zebra-striping to any table row within the `<tbody>` */\n  striped: PropTypes.bool,\n  /** Add custom tag to the component */\n  tag: tagPropType\n};\nfunction Table(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    size = props.size,\n    bordered = props.bordered,\n    borderless = props.borderless,\n    striped = props.striped,\n    dark = props.dark,\n    hover = props.hover,\n    responsive = props.responsive,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'table' : _props$tag,\n    _props$responsiveTag = props.responsiveTag,\n    ResponsiveTag = _props$responsiveTag === void 0 ? 'div' : _props$responsiveTag,\n    innerRef = props.innerRef,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\".concat(responsive), cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n  return table;\n}\nTable.propTypes = propTypes;\nexport default Table;","'use client'\nimport { QueryObserver, parseQueryArgs } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type { QueryFunction, QueryKey } from '@tanstack/query-core'\nimport type {\n  DefinedUseQueryResult,\n  UseQueryOptions,\n  UseQueryResult,\n} from './types'\n\n// HOOK\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData,\n  TError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1: TQueryKey | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg2?:\n    | QueryFunction<TQueryFnData, TQueryKey>\n    | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg3?: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError> {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n  return useBaseQuery(parsedOptions, QueryObserver)\n}\n","'use client'\nimport * as React from 'react'\n\nimport { notifyManager } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useIsRestoring } from './isRestoring'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport { ensureStaleTime, fetchOptimistic, shouldSuspend } from './suspense'\nimport type { QueryKey, QueryObserver } from '@tanstack/query-core'\nimport type { UseBaseQueryOptions } from './types'\n\nexport function useBaseQuery<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: UseBaseQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  Observer: typeof QueryObserver,\n) {\n  const queryClient = useQueryClient({ context: options.context })\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n  const defaultedOptions = queryClient.defaultQueryOptions(options)\n\n  // Make sure results are optimistically set in fetching state before subscribing or updating options\n  defaultedOptions._optimisticResults = isRestoring\n    ? 'isRestoring'\n    : 'optimistic'\n\n  // Include callbacks in batch renders\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(\n      defaultedOptions.onError,\n    )\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(\n      defaultedOptions.onSuccess,\n    )\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(\n      defaultedOptions.onSettled,\n    )\n  }\n\n  ensureStaleTime(defaultedOptions)\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary)\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  const [observer] = React.useState(\n    () =>\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\n        queryClient,\n        defaultedOptions,\n      ),\n  )\n\n  const result = observer.getOptimisticResult(defaultedOptions)\n\n  useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = isRestoring\n          ? () => undefined\n          : observer.subscribe(notifyManager.batchCalls(onStoreChange))\n\n        // Update result to make sure we did not miss any query updates\n        // between creating the observer and subscribing to it.\n        observer.updateResult()\n\n        return unsubscribe\n      },\n      [observer, isRestoring],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, { listeners: false })\n  }, [defaultedOptions, observer])\n\n  // Handle suspense\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n  }\n\n  // Handle error boundary\n  if (\n    getHasError({\n      result,\n      errorResetBoundary,\n      useErrorBoundary: defaultedOptions.useErrorBoundary,\n      query: observer.getCurrentQuery(),\n    })\n  ) {\n    throw result.error\n  }\n\n  // Handle result property usage tracking\n  return !defaultedOptions.notifyOnChangeProps\n    ? observer.trackResult(result)\n    : result\n}\n"],"names":["_ref","activeTab","setActiveTab","items","panels","children","_jsxs","TabContext","value","_jsx","Card","className","style","paddingRight","Col","md","TabList","variant","onChange","handleActive","event","val","map","item","Tab","label","Badge","badgeContent","anchorOrigin","vertical","horizontal","color","textTransform","title","id","panel","TabPanel","CardBody","newBlob","filename","blob","Blob","type","url","URL","createObjectURL","window","open","progress","padding","borderRadius","backgroundColor","position","overflow","width","top","left","height","concat","transition","fontWeight","companyId","setSelectedName","isFetching","setIsFetching","useState","setProgress","selectedFileType","setSelectedFileType","api","useAxios","isLoading","error","data","useQuery","queryKey","queryFn","get","then","res","useEffect","nama_perusahaan","downloadFile","async","file","filetype","splitBySlash","split","fileName","length","responseType","onDownloadProgress","progressEvent","loaded","total","percentage","Math","floor","previewPdf","catch","alert","CardFrame","Table","bentuk_usaha","nomor_registrasi","tipe","email","no_npwp","FetchingFile","Link","to","Button","size","onClick","file_npwp","hp","alamat","provinsi","file_pvd","mode","action","Row","sm","lg","MaterialIcon","icon","_data$jajaran","_Fragment","hover","bordered","jajaran","i","nama","jabatan","no_npwp_direksi","colSpan","file_struktur","FileView","key","name","akta","setAkta","izin","setIzin","dokumen","setDokumen","undefined","aktaIsLoading","setAktaIsLoading","izinIsLoading","setIzinIsLoading","dokumenIsLoading","setDokumenIsLoading","selectedId","setSelectedId","fetchAkta","fetchIzin","fetchDokumen","nameFile","textAlign","ak","no_akta","tgl_terbit","nama_notaris","jenis","id_akta","file_akta","iz","nomor","nama_izin","tgl_berakhir","id_izin","file_izin","f","verticalAlign","pr","nama_project","tahun_mulai","tahun_selesai","durasi","owner","rupiah","nilai_po","id_porto","spk","kb","nomor_kbli","nama_kbli","id_kbli","tabItems","DocumentCheck","useParams","comment","setComment","isApproving","setIsApproving","selectedName","modal","setModal","modal4","setModal4","auth","useContext","AuthContext","toggle","refetch","toggle4","TabMui","TabGeneral","TabOfficial","TabDocument","TabPortfolio","TabBusinessField","status_verifikasi_umum","umum_updated_at","status_verifikasi_scm","scm_updated_at","user","roles","includes","outline","bind","handleConfirmation","Modal","isOpen","centered","ModalHeader","ModalBody","Label","htmlFor","Input","rows","e","target","handleComment","placeholder","ModalFooter","post","status","komentar","handleRevisi","Spinner","disabled","number","Intl","NumberFormat","currency","format","_excluded","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","PropTypes","cssModule","innerRef","pill","tag","tagPropType","props","_props$color","_props$pill","_props$tag","Tag","attributes","classes","mapToCssModules","classNames","href","React","ref","close","closeAriaLabel","wrapTag","closeButton","_props$wrapTag","WrapTag","_props$closeAriaLabel","borderless","dark","responsive","responsiveTag","striped","_props$responsiveTag","ResponsiveTag","table","responsiveClassName","arg1","arg2","arg3","options","Observer","ensurePreventErrorBoundaryRetry","defaultedOptions","errorResetBoundary","observer","queryClient","result","getOptimisticResult","useSyncExternalStore","onStoreChange","unsubscribe","isRestoring","subscribe","notifyManager","batchCalls","updateResult","getCurrentResult","setOptions","listeners","fetchOptimistic","getHasError","notifyOnChangeProps","trackResult","useBaseQuery","QueryObserver"],"sourceRoot":""}