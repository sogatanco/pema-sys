{"version":3,"file":"static/js/2644.060d4361.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/node_modules/@mui/system/esm/styled/styled.js","../node_modules/@mui/material/node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/Stack/Stack.js","../node_modules/@mui/material/Stack/stackClasses.js","../node_modules/@mui/x-date-pickers/internals/demo/DemoContainer.js","../node_modules/react-confirm-alert/lib/index.js","../node_modules/@tanstack/query-core/src/queriesObserver.ts","../node_modules/@tanstack/react-query/src/useQueries.ts"],"sourcesContent":["import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport deepmerge from '@mui/utils/deepmerge';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport systemStyled from \"../styled/index.js\";\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from \"../breakpoints/index.js\";\nimport { createUnarySpacing, getValue } from \"../spacing/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push(/*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    display: 'flex',\n    flexDirection: 'column',\n    ...handleBreakpoints({\n      theme\n    }, resolveBreakpointValues({\n      values: ownerState.direction,\n      breakpoints: theme.breakpoints.values\n    }), propValue => ({\n      flexDirection: propValue\n    }))\n  };\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children,\n      className,\n      useFlexGap = false,\n      ...other\n    } = props;\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, {\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className),\n      ...other,\n      children: divider ? joinChildren(children, divider) : children\n    });\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getStackUtilityClass(slot) {\n  return generateUtilityClass('MuiStack', slot);\n}\nconst stackClasses = generateUtilityClasses('MuiStack', ['root']);\nexport default stackClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Stack, { stackClasses } from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport { textFieldClasses } from '@mui/material/TextField';\nimport { pickersTextFieldClasses } from \"../../PickersTextField/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getChildTypeFromChildName = childName => {\n  if (childName.match(/^([A-Za-z]+)Range(Calendar|Clock)$/)) {\n    return 'multi-panel-UI-view';\n  }\n  if (childName.match(/^([A-Za-z]*)(DigitalClock)$/)) {\n    return 'Tall-UI-view';\n  }\n  if (childName.match(/^Static([A-Za-z]+)/) || childName.match(/^([A-Za-z]+)(Calendar|Clock)$/)) {\n    return 'UI-view';\n  }\n  if (childName.match(/^MultiInput([A-Za-z]+)RangeField$/) || childName.match(/^([A-Za-z]+)RangePicker$/)) {\n    return 'multi-input-range-field';\n  }\n  if (childName.match(/^SingleInput([A-Za-z]+)RangeField$/)) {\n    return 'single-input-range-field';\n  }\n  return 'single-input-field';\n};\nconst getSupportedSectionFromChildName = childName => {\n  if (childName.includes('DateTime')) {\n    return 'date-time';\n  }\n  if (childName.includes('Date')) {\n    return 'date';\n  }\n  return 'time';\n};\n/**\n * WARNING: This is an internal component used in documentation to achieve a desired layout.\n * Please do not use it in your application.\n */\nexport function DemoItem(props) {\n  const {\n    label,\n    children,\n    component,\n    sx: sxProp\n  } = props;\n  let spacing;\n  let sx = sxProp;\n  if (component && getChildTypeFromChildName(component) === 'multi-input-range-field') {\n    spacing = 1.5;\n    sx = _extends({}, sx, {\n      [`& .${textFieldClasses.root}`]: {\n        flexGrow: 1\n      }\n    });\n  } else {\n    spacing = 1;\n  }\n  return /*#__PURE__*/_jsxs(Stack, {\n    direction: \"column\",\n    alignItems: \"stretch\",\n    spacing: spacing,\n    sx: sx,\n    children: [label && /*#__PURE__*/_jsx(Typography, {\n      variant: \"body2\",\n      children: label\n    }), children]\n  });\n}\nDemoItem.displayName = 'DemoItem';\nconst isDemoItem = child => {\n  if (/*#__PURE__*/React.isValidElement(child) && typeof child.type !== 'string') {\n    // @ts-ignore\n    return child.type.displayName === 'DemoItem';\n  }\n  return false;\n};\n/**\n * WARNING: This is an internal component used in documentation to achieve a desired layout.\n * Please do not use it in your application.\n */\nexport function DemoContainer(props) {\n  const {\n    children,\n    components,\n    sx: sxProp\n  } = props;\n  const childrenTypes = new Set();\n  const childrenSupportedSections = new Set();\n  components.forEach(childName => {\n    childrenTypes.add(getChildTypeFromChildName(childName));\n    childrenSupportedSections.add(getSupportedSectionFromChildName(childName));\n  });\n  const getSpacing = direction => {\n    if (direction === 'row') {\n      return childrenTypes.has('UI-view') || childrenTypes.has('Tall-UI-view') ? 3 : 2;\n    }\n    return childrenTypes.has('UI-view') ? 4 : 3;\n  };\n  let direction;\n  let spacing;\n  let extraSx = {};\n  let demoItemSx = {};\n  const sx = _extends({\n    overflow: 'auto',\n    // Add padding as overflow can hide the outline text field label.\n    pt: 1\n  }, sxProp);\n  if (components.length > 2 || childrenTypes.has('multi-input-range-field') || childrenTypes.has('single-input-range-field') || childrenTypes.has('multi-panel-UI-view') || childrenTypes.has('UI-view') || childrenSupportedSections.has('date-time')) {\n    direction = 'column';\n    spacing = getSpacing('column');\n  } else {\n    direction = {\n      xs: 'column',\n      lg: 'row'\n    };\n    spacing = {\n      xs: getSpacing('column'),\n      lg: getSpacing('row')\n    };\n  }\n  if (childrenTypes.has('UI-view')) {\n    // noop\n  } else if (childrenTypes.has('single-input-range-field')) {\n    if (!childrenSupportedSections.has('date-time')) {\n      extraSx = {\n        [`& > .${textFieldClasses.root}, & > .${pickersTextFieldClasses.root}`]: {\n          minWidth: 300\n        }\n      };\n    } else {\n      extraSx = {\n        [`& > .${textFieldClasses.root}, & > .${pickersTextFieldClasses.root}`]: {\n          minWidth: {\n            xs: 300,\n            // If demo also contains MultiInputDateTimeRangeField, increase width to avoid cutting off the value.\n            md: childrenTypes.has('multi-input-range-field') ? 460 : 400\n          }\n        }\n      };\n    }\n  } else if (childrenSupportedSections.has('date-time')) {\n    extraSx = {\n      [`& > .${textFieldClasses.root}, & > .${pickersTextFieldClasses.root}`]: {\n        minWidth: 270\n      }\n    };\n    if (childrenTypes.has('multi-input-range-field')) {\n      // increase width for the multi input date time range fields\n      demoItemSx = {\n        [`& > .${stackClasses.root} > .${textFieldClasses.root}, & > .${stackClasses.root} > .${pickersTextFieldClasses.root}`]: {\n          minWidth: 210\n        }\n      };\n    }\n  } else {\n    extraSx = {\n      [`& > .${textFieldClasses.root}, & > .${pickersTextFieldClasses.root}`]: {\n        minWidth: 200\n      }\n    };\n  }\n  const finalSx = _extends({}, sx, extraSx);\n  return /*#__PURE__*/_jsx(Stack, {\n    direction: direction,\n    spacing: spacing,\n    sx: finalSx,\n    children: React.Children.map(children, child => {\n      if (/*#__PURE__*/React.isValidElement(child) && isDemoItem(child)) {\n        // Inject sx styles to the `DemoItem` if it is a direct child of `DemoContainer`.\n        // @ts-ignore\n        return /*#__PURE__*/React.cloneElement(child, {\n          sx: _extends({}, extraSx, demoItemSx)\n        });\n      }\n      return child;\n    })\n  });\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp2;\n\nexports.confirmAlert = confirmAlert;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _client = require('react-dom/client');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ReactConfirmAlert = (_temp2 = _class = function (_Component) {\n  _inherits(ReactConfirmAlert, _Component);\n\n  function ReactConfirmAlert() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ReactConfirmAlert);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactConfirmAlert.__proto__ || Object.getPrototypeOf(ReactConfirmAlert)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickButton = function (button) {\n      if (button.onClick) button.onClick();\n      _this.close();\n    }, _this.handleClickOverlay = function (e) {\n      var _this$props = _this.props,\n          closeOnClickOutside = _this$props.closeOnClickOutside,\n          onClickOutside = _this$props.onClickOutside;\n\n      var isClickOutside = e.target === _this.overlay;\n\n      if (closeOnClickOutside && isClickOutside) {\n        onClickOutside();\n        _this.close();\n      }\n\n      e.stopPropagation();\n    }, _this.close = function () {\n      var afterClose = _this.props.afterClose;\n\n      removeBodyClass();\n      removeElementReconfirm(_this.props);\n      removeSVGBlurReconfirm(afterClose);\n    }, _this.keyboard = function (event) {\n      var _this$props2 = _this.props,\n          closeOnEscape = _this$props2.closeOnEscape,\n          onKeypressEscape = _this$props2.onKeypressEscape,\n          onkeyPress = _this$props2.onkeyPress,\n          keyCodeForClose = _this$props2.keyCodeForClose;\n\n      var keyCode = event.keyCode;\n      var isKeyCodeEscape = keyCode === 27;\n\n      if (keyCodeForClose.includes(keyCode)) {\n        _this.close();\n      }\n\n      if (closeOnEscape && isKeyCodeEscape) {\n        onKeypressEscape(event);\n        _this.close();\n      }\n\n      if (onkeyPress) {\n        onkeyPress();\n      }\n    }, _this.componentDidMount = function () {\n      document.addEventListener('keydown', _this.keyboard, false);\n    }, _this.componentWillUnmount = function () {\n      document.removeEventListener('keydown', _this.keyboard, false);\n      _this.props.willUnmount();\n    }, _this.renderCustomUI = function () {\n      var _this$props3 = _this.props,\n          title = _this$props3.title,\n          message = _this$props3.message,\n          buttons = _this$props3.buttons,\n          customUI = _this$props3.customUI;\n\n      var dataCustomUI = {\n        title: title,\n        message: message,\n        buttons: buttons,\n        onClose: _this.close\n      };\n\n      return customUI(dataCustomUI);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ReactConfirmAlert, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          title = _props.title,\n          message = _props.message,\n          buttons = _props.buttons,\n          childrenElement = _props.childrenElement,\n          customUI = _props.customUI,\n          overlayClassName = _props.overlayClassName;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: 'react-confirm-alert-overlay ' + overlayClassName,\n          ref: function ref(dom) {\n            return _this2.overlay = dom;\n          },\n          onClick: this.handleClickOverlay\n        },\n        _react2.default.createElement(\n          'div',\n          { className: 'react-confirm-alert' },\n          customUI ? this.renderCustomUI() : _react2.default.createElement(\n            'div',\n            { className: 'react-confirm-alert-body' },\n            title && _react2.default.createElement(\n              'h1',\n              null,\n              title\n            ),\n            message,\n            childrenElement(),\n            _react2.default.createElement(\n              'div',\n              { className: 'react-confirm-alert-button-group' },\n              buttons.map(function (button, i) {\n                return _react2.default.createElement(\n                  'button',\n                  _extends({\n                    key: i,\n                    className: button.className\n                  }, button, {\n                    onClick: function onClick(e) {\n                      return _this2.handleClickButton(button);\n                    }\n                  }),\n                  button.label\n                );\n              })\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return ReactConfirmAlert;\n}(_react.Component), _class.propTypes = {\n  title: _propTypes2.default.string,\n  message: _propTypes2.default.string,\n  buttons: _propTypes2.default.array.isRequired,\n  childrenElement: _propTypes2.default.func,\n  customUI: _propTypes2.default.func,\n  closeOnClickOutside: _propTypes2.default.bool,\n  closeOnEscape: _propTypes2.default.bool,\n  keyCodeForClose: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  willUnmount: _propTypes2.default.func,\n  afterClose: _propTypes2.default.func,\n  onClickOutside: _propTypes2.default.func,\n  onKeypressEscape: _propTypes2.default.func,\n  onkeyPress: _propTypes2.default.func,\n  overlayClassName: _propTypes2.default.string\n}, _class.defaultProps = {\n  buttons: [{\n    label: 'Cancel',\n    onClick: function onClick() {\n      return null;\n    },\n    className: null\n  }, {\n    label: 'Confirm',\n    onClick: function onClick() {\n      return null;\n    },\n    className: null\n  }],\n  childrenElement: function childrenElement() {\n    return null;\n  },\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  keyCodeForClose: [],\n  willUnmount: function willUnmount() {\n    return null;\n  },\n  afterClose: function afterClose() {\n    return null;\n  },\n  onClickOutside: function onClickOutside() {\n    return null;\n  },\n  onKeypressEscape: function onKeypressEscape() {\n    return null;\n  }\n}, _temp2);\nexports.default = ReactConfirmAlert;\n\n\nvar root = null;\nvar targetId = 'react-confirm-alert';\n\nfunction createSVGBlurReconfirm() {\n  // If has svg ignore to create the svg\n  var svg = document.getElementById('react-confirm-alert-firm-svg');\n  if (svg) return;\n  var svgNS = 'http://www.w3.org/2000/svg';\n  var feGaussianBlur = document.createElementNS(svgNS, 'feGaussianBlur');\n  feGaussianBlur.setAttribute('stdDeviation', '0.3');\n\n  var filter = document.createElementNS(svgNS, 'filter');\n  filter.setAttribute('id', 'gaussian-blur');\n  filter.appendChild(feGaussianBlur);\n\n  var svgElem = document.createElementNS(svgNS, 'svg');\n  svgElem.setAttribute('id', 'react-confirm-alert-firm-svg');\n  svgElem.setAttribute('class', 'react-confirm-alert-svg');\n  svgElem.appendChild(filter);\n\n  document.body.appendChild(svgElem);\n}\n\nfunction removeSVGBlurReconfirm(afterClose) {\n  var svg = document.getElementById('react-confirm-alert-firm-svg');\n  if (svg) {\n    svg.parentNode.removeChild(svg);\n  }\n  document.body.children[0].classList.remove('react-confirm-alert-blur');\n  afterClose();\n}\n\nfunction createElementReconfirm(properties) {\n  var divTarget = document.getElementById(properties.targetId || targetId);\n\n  if (properties.targetId && !divTarget) {\n    console.error('React Confirm Alert:', 'Can not get element id (#' + properties.targetId + ')');\n  }\n\n  if (divTarget) {\n    root = (0, _client.createRoot)(divTarget);\n    root.render(_react2.default.createElement(ReactConfirmAlert, properties));\n  } else {\n    document.body.children[0].classList.add('react-confirm-alert-blur');\n    divTarget = document.createElement('div');\n    divTarget.id = targetId;\n    document.body.appendChild(divTarget);\n    root = (0, _client.createRoot)(divTarget);\n    root.render(_react2.default.createElement(ReactConfirmAlert, properties));\n  }\n}\n\nfunction removeElementReconfirm(properties) {\n  var target = document.getElementById(properties.targetId || targetId);\n  if (target) {\n    root.unmount(target);\n  }\n}\n\nfunction addBodyClass() {\n  document.body.classList.add('react-confirm-alert-body-element');\n}\n\nfunction removeBodyClass() {\n  document.body.classList.remove('react-confirm-alert-body-element');\n}\n\nfunction confirmAlert(properties) {\n  addBodyClass();\n  createSVGBlurReconfirm();\n  createElementReconfirm(properties);\n}","import { difference, replaceAt } from './utils'\nimport { notifyManager } from './notifyManager'\nimport { QueryObserver } from './queryObserver'\nimport { Subscribable } from './subscribable'\nimport type {\n  DefaultedQueryObserverOptions,\n  QueryObserverOptions,\n  QueryObserverResult,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { NotifyOptions } from './queryObserver'\n\ntype QueriesObserverListener = (result: QueryObserverResult[]) => void\n\nexport class QueriesObserver extends Subscribable<QueriesObserverListener> {\n  private client: QueryClient\n  private result: QueryObserverResult[]\n  private queries: QueryObserverOptions[]\n  private observers: QueryObserver[]\n  private observersMap: Record<string, QueryObserver>\n\n  constructor(client: QueryClient, queries?: QueryObserverOptions[]) {\n    super()\n\n    this.client = client\n    this.queries = []\n    this.result = []\n    this.observers = []\n    this.observersMap = {}\n\n    if (queries) {\n      this.setQueries(queries)\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.observers.forEach((observer) => {\n        observer.subscribe((result) => {\n          this.onUpdate(observer, result)\n        })\n      })\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.listeners.size) {\n      this.destroy()\n    }\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.observers.forEach((observer) => {\n      observer.destroy()\n    })\n  }\n\n  setQueries(\n    queries: QueryObserverOptions[],\n    notifyOptions?: NotifyOptions,\n  ): void {\n    this.queries = queries\n\n    notifyManager.batch(() => {\n      const prevObservers = this.observers\n\n      const newObserverMatches = this.findMatchingObservers(this.queries)\n\n      // set options for the new observers to notify of changes\n      newObserverMatches.forEach((match) =>\n        match.observer.setOptions(match.defaultedQueryOptions, notifyOptions),\n      )\n\n      const newObservers = newObserverMatches.map((match) => match.observer)\n      const newObserversMap = Object.fromEntries(\n        newObservers.map((observer) => [observer.options.queryHash, observer]),\n      )\n      const newResult = newObservers.map((observer) =>\n        observer.getCurrentResult(),\n      )\n\n      const hasIndexChange = newObservers.some(\n        (observer, index) => observer !== prevObservers[index],\n      )\n      if (prevObservers.length === newObservers.length && !hasIndexChange) {\n        return\n      }\n\n      this.observers = newObservers\n      this.observersMap = newObserversMap\n      this.result = newResult\n\n      if (!this.hasListeners()) {\n        return\n      }\n\n      difference(prevObservers, newObservers).forEach((observer) => {\n        observer.destroy()\n      })\n\n      difference(newObservers, prevObservers).forEach((observer) => {\n        observer.subscribe((result) => {\n          this.onUpdate(observer, result)\n        })\n      })\n\n      this.notify()\n    })\n  }\n\n  getCurrentResult(): QueryObserverResult[] {\n    return this.result\n  }\n\n  getQueries() {\n    return this.observers.map((observer) => observer.getCurrentQuery())\n  }\n\n  getObservers() {\n    return this.observers\n  }\n\n  getOptimisticResult(queries: QueryObserverOptions[]): QueryObserverResult[] {\n    return this.findMatchingObservers(queries).map((match) =>\n      match.observer.getOptimisticResult(match.defaultedQueryOptions),\n    )\n  }\n\n  private findMatchingObservers(\n    queries: QueryObserverOptions[],\n  ): QueryObserverMatch[] {\n    const prevObservers = this.observers\n    const prevObserversMap = new Map(\n      prevObservers.map((observer) => [observer.options.queryHash, observer]),\n    )\n\n    const defaultedQueryOptions = queries.map((options) =>\n      this.client.defaultQueryOptions(options),\n    )\n\n    const matchingObservers: QueryObserverMatch[] =\n      defaultedQueryOptions.flatMap((defaultedOptions) => {\n        const match = prevObserversMap.get(defaultedOptions.queryHash)\n        if (match != null) {\n          return [{ defaultedQueryOptions: defaultedOptions, observer: match }]\n        }\n        return []\n      })\n\n    const matchedQueryHashes = new Set(\n      matchingObservers.map((match) => match.defaultedQueryOptions.queryHash),\n    )\n    const unmatchedQueries = defaultedQueryOptions.filter(\n      (defaultedOptions) => !matchedQueryHashes.has(defaultedOptions.queryHash),\n    )\n\n    const matchingObserversSet = new Set(\n      matchingObservers.map((match) => match.observer),\n    )\n    const unmatchedObservers = prevObservers.filter(\n      (prevObserver) => !matchingObserversSet.has(prevObserver),\n    )\n\n    const getObserver = (options: QueryObserverOptions): QueryObserver => {\n      const defaultedOptions = this.client.defaultQueryOptions(options)\n      const currentObserver = this.observersMap[defaultedOptions.queryHash!]\n      return currentObserver ?? new QueryObserver(this.client, defaultedOptions)\n    }\n\n    const newOrReusedObservers: QueryObserverMatch[] = unmatchedQueries.map(\n      (options, index) => {\n        if (options.keepPreviousData) {\n          // return previous data from one of the observers that no longer match\n          const previouslyUsedObserver = unmatchedObservers[index]\n          if (previouslyUsedObserver !== undefined) {\n            return {\n              defaultedQueryOptions: options,\n              observer: previouslyUsedObserver,\n            }\n          }\n        }\n        return {\n          defaultedQueryOptions: options,\n          observer: getObserver(options),\n        }\n      },\n    )\n\n    const sortMatchesByOrderOfQueries = (\n      a: QueryObserverMatch,\n      b: QueryObserverMatch,\n    ): number =>\n      defaultedQueryOptions.indexOf(a.defaultedQueryOptions) -\n      defaultedQueryOptions.indexOf(b.defaultedQueryOptions)\n\n    return matchingObservers\n      .concat(newOrReusedObservers)\n      .sort(sortMatchesByOrderOfQueries)\n  }\n\n  private onUpdate(observer: QueryObserver, result: QueryObserverResult): void {\n    const index = this.observers.indexOf(observer)\n    if (index !== -1) {\n      this.result = replaceAt(this.result, index, result)\n      this.notify()\n    }\n  }\n\n  private notify(): void {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({ listener }) => {\n        listener(this.result)\n      })\n    })\n  }\n}\n\ntype QueryObserverMatch = {\n  defaultedQueryOptions: DefaultedQueryObserverOptions\n  observer: QueryObserver\n}\n","'use client'\nimport * as React from 'react'\n\nimport { QueriesObserver, notifyManager } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useIsRestoring } from './isRestoring'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport {\n  ensureStaleTime,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch,\n} from './suspense'\nimport type { QueryFunction, QueryKey } from '@tanstack/query-core'\nimport type { UseQueryOptions, UseQueryResult } from './types'\n\n// This defines the `UseQueryOptions` that are accepted in `QueriesOptions` & `GetOptions`.\n// - `context` is omitted as it is passed as a root-level option to `useQueries` instead.\ntype UseQueryOptionsForUseQueries<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = Omit<UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>, 'context'>\n\n// Avoid TS depth-limit error in case of large array literal\ntype MAXIMUM_DEPTH = 20\n\ntype GetOptions<T> =\n  // Part 1: responsible for applying explicit type parameter to function arguments, if object { queryFnData: TQueryFnData, error: TError, data: TData }\n  T extends {\n    queryFnData: infer TQueryFnData\n    error?: infer TError\n    data: infer TData\n  }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData>\n    : T extends { queryFnData: infer TQueryFnData; error?: infer TError }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError>\n    : T extends { data: infer TData; error?: infer TError }\n    ? UseQueryOptionsForUseQueries<unknown, TError, TData>\n    : // Part 2: responsible for applying explicit type parameter to function arguments, if tuple [TQueryFnData, TError, TData]\n    T extends [infer TQueryFnData, infer TError, infer TData]\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData>\n    : T extends [infer TQueryFnData, infer TError]\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError>\n    : T extends [infer TQueryFnData]\n    ? UseQueryOptionsForUseQueries<TQueryFnData>\n    : // Part 3: responsible for inferring and enforcing type if no explicit parameter was provided\n    T extends {\n        queryFn?: QueryFunction<infer TQueryFnData, infer TQueryKey>\n        select: (data: any) => infer TData\n      }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, unknown, TData, TQueryKey>\n    : T extends { queryFn?: QueryFunction<infer TQueryFnData, infer TQueryKey> }\n    ? UseQueryOptionsForUseQueries<\n        TQueryFnData,\n        unknown,\n        TQueryFnData,\n        TQueryKey\n      >\n    : // Fallback\n      UseQueryOptionsForUseQueries\n\ntype GetResults<T> =\n  // Part 1: responsible for mapping explicit type parameter to function result, if object\n  T extends { queryFnData: any; error?: infer TError; data: infer TData }\n    ? UseQueryResult<TData, TError>\n    : T extends { queryFnData: infer TQueryFnData; error?: infer TError }\n    ? UseQueryResult<TQueryFnData, TError>\n    : T extends { data: infer TData; error?: infer TError }\n    ? UseQueryResult<TData, TError>\n    : // Part 2: responsible for mapping explicit type parameter to function result, if tuple\n    T extends [any, infer TError, infer TData]\n    ? UseQueryResult<TData, TError>\n    : T extends [infer TQueryFnData, infer TError]\n    ? UseQueryResult<TQueryFnData, TError>\n    : T extends [infer TQueryFnData]\n    ? UseQueryResult<TQueryFnData>\n    : // Part 3: responsible for mapping inferred type to results, if no explicit parameter was provided\n    T extends {\n        queryFn?: QueryFunction<unknown, any>\n        select: (data: any) => infer TData\n      }\n    ? UseQueryResult<TData>\n    : T extends { queryFn?: QueryFunction<infer TQueryFnData, any> }\n    ? UseQueryResult<TQueryFnData>\n    : // Fallback\n      UseQueryResult\n\n/**\n * QueriesOptions reducer recursively unwraps function arguments to infer/enforce type param\n */\nexport type QueriesOptions<\n  T extends any[],\n  Result extends any[] = [],\n  Depth extends ReadonlyArray<number> = [],\n> = Depth['length'] extends MAXIMUM_DEPTH\n  ? UseQueryOptionsForUseQueries[]\n  : T extends []\n  ? []\n  : T extends [infer Head]\n  ? [...Result, GetOptions<Head>]\n  : T extends [infer Head, ...infer Tail]\n  ? QueriesOptions<[...Tail], [...Result, GetOptions<Head>], [...Depth, 1]>\n  : unknown[] extends T\n  ? T\n  : // If T is *some* array but we couldn't assign unknown[] to it, then it must hold some known/homogenous type!\n  // use this to infer the param types in the case of Array.map() argument\n  T extends UseQueryOptionsForUseQueries<\n      infer TQueryFnData,\n      infer TError,\n      infer TData,\n      infer TQueryKey\n    >[]\n  ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData, TQueryKey>[]\n  : // Fallback\n    UseQueryOptionsForUseQueries[]\n\n/**\n * QueriesResults reducer recursively maps type param to results\n */\nexport type QueriesResults<\n  T extends any[],\n  Result extends any[] = [],\n  Depth extends ReadonlyArray<number> = [],\n> = Depth['length'] extends MAXIMUM_DEPTH\n  ? UseQueryResult[]\n  : T extends []\n  ? []\n  : T extends [infer Head]\n  ? [...Result, GetResults<Head>]\n  : T extends [infer Head, ...infer Tail]\n  ? QueriesResults<[...Tail], [...Result, GetResults<Head>], [...Depth, 1]>\n  : T extends UseQueryOptionsForUseQueries<\n      infer TQueryFnData,\n      infer TError,\n      infer TData,\n      any\n    >[]\n  ? // Dynamic-size (homogenous) UseQueryOptions array: map directly to array of results\n    UseQueryResult<unknown extends TData ? TQueryFnData : TData, TError>[]\n  : // Fallback\n    UseQueryResult[]\n\nexport function useQueries<T extends any[]>({\n  queries,\n  context,\n}: {\n  queries: readonly [...QueriesOptions<T>]\n  context?: UseQueryOptions['context']\n}): QueriesResults<T> {\n  const queryClient = useQueryClient({ context })\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n\n  const defaultedQueries = React.useMemo(\n    () =>\n      queries.map((options) => {\n        const defaultedOptions = queryClient.defaultQueryOptions(options)\n\n        // Make sure the results are already in fetching state before subscribing or updating options\n        defaultedOptions._optimisticResults = isRestoring\n          ? 'isRestoring'\n          : 'optimistic'\n\n        return defaultedOptions\n      }),\n    [queries, queryClient, isRestoring],\n  )\n\n  defaultedQueries.forEach((query) => {\n    ensureStaleTime(query)\n    ensurePreventErrorBoundaryRetry(query, errorResetBoundary)\n  })\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  const [observer] = React.useState(\n    () => new QueriesObserver(queryClient, defaultedQueries),\n  )\n\n  const optimisticResult = observer.getOptimisticResult(defaultedQueries)\n\n  useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        isRestoring\n          ? () => undefined\n          : observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer, isRestoring],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setQueries(defaultedQueries, { listeners: false })\n  }, [defaultedQueries, observer])\n\n  const shouldAtLeastOneSuspend = optimisticResult.some((result, index) =>\n    shouldSuspend(defaultedQueries[index], result, isRestoring),\n  )\n\n  const suspensePromises = shouldAtLeastOneSuspend\n    ? optimisticResult.flatMap((result, index) => {\n        const options = defaultedQueries[index]\n        const queryObserver = observer.getObservers()[index]\n\n        if (options && queryObserver) {\n          if (shouldSuspend(options, result, isRestoring)) {\n            return fetchOptimistic(options, queryObserver, errorResetBoundary)\n          } else if (willFetch(result, isRestoring)) {\n            void fetchOptimistic(options, queryObserver, errorResetBoundary)\n          }\n        }\n        return []\n      })\n    : []\n\n  if (suspensePromises.length > 0) {\n    throw Promise.all(suspensePromises)\n  }\n  const observerQueries = observer.getQueries()\n  const firstSingleResultWhichShouldThrow = optimisticResult.find(\n    (result, index) =>\n      getHasError({\n        result,\n        errorResetBoundary,\n        useErrorBoundary: defaultedQueries[index]?.useErrorBoundary ?? false,\n        query: observerQueries[index]!,\n      }),\n  )\n\n  if (firstSingleResultWhichShouldThrow?.error) {\n    throw firstSingleResultWhichShouldThrow.error\n  }\n\n  return optimisticResult as QueriesResults<T>\n}\n"],"names":["createStyled","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","root","useThemePropsDefault","useThemePropsSystem","joinChildren","children","separator","childrenArray","React","toArray","filter","Boolean","reduce","output","child","index","push","length","key","concat","style","_ref","ownerState","theme","_objectSpread","display","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","useFlexGap","gap","getValue","margin","row","column","deepmerge","mergeBreakpointsInOrder","Stack","options","arguments","undefined","createStyledComponent","useThemeProps","componentName","StackRoot","inProps","ref","themeProps","extendSxProp","component","divider","className","other","_objectWithoutProperties","_excluded","classes","composeClasses","generateUtilityClass","_jsx","as","clsx","createStack","styled","useDefaultProps","generateUtilityClasses","getChildTypeFromChildName","childName","match","getSupportedSectionFromChildName","includes","DemoItem","label","sx","sxProp","_extends","textFieldClasses","flexGrow","_jsxs","alignItems","Typography","variant","displayName","isDemoItem","type","DemoContainer","components","childrenTypes","Set","childrenSupportedSections","add","getSpacing","has","extraSx","demoItemSx","overflow","pt","xs","lg","pickersTextFieldClasses","minWidth","md","stackClasses","finalSx","map","_class","_temp2","assign","target","i","source","prototype","hasOwnProperty","call","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","exports","properties","document","body","classList","getElementById","svgNS","feGaussianBlur","createElementNS","setAttribute","appendChild","svgElem","createSVGBlurReconfirm","divTarget","targetId","console","error","createElement","id","_client","createRoot","render","_react2","default","ReactConfirmAlert","createElementReconfirm","_react","require","_interopRequireDefault","_propTypes2","obj","__esModule","_possibleConstructorReturn","self","ReferenceError","_Component","_temp","_this","instance","TypeError","_classCallCheck","this","_len","args","Array","_key","__proto__","getPrototypeOf","apply","handleClickButton","button","onClick","close","handleClickOverlay","e","_this$props","closeOnClickOutside","onClickOutside","isClickOutside","overlay","stopPropagation","afterClose","remove","unmount","removeElementReconfirm","svg","parentNode","removeChild","removeSVGBlurReconfirm","keyboard","event","_this$props2","closeOnEscape","onKeypressEscape","onkeyPress","keyCodeForClose","keyCode","isKeyCodeEscape","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","willUnmount","renderCustomUI","_this$props3","title","message","buttons","customUI","onClose","subClass","superClass","create","constructor","value","setPrototypeOf","_inherits","_this2","_props","childrenElement","overlayClassName","dom","Component","propTypes","string","array","isRequired","func","bool","arrayOf","number","defaultProps","QueriesObserver","Subscribable","client","queries","super","result","observers","observersMap","setQueries","onSubscribe","listeners","size","observer","subscribe","onUpdate","onUnsubscribe","destroy","notifyOptions","notifyManager","batch","prevObservers","newObserverMatches","findMatchingObservers","setOptions","defaultedQueryOptions","newObservers","newObserversMap","fromEntries","queryHash","newResult","getCurrentResult","hasIndexChange","some","hasListeners","difference","notify","getQueries","getCurrentQuery","getObservers","getOptimisticResult","prevObserversMap","Map","defaultQueryOptions","matchingObservers","flatMap","defaultedOptions","get","matchedQueryHashes","unmatchedQueries","matchingObserversSet","unmatchedObservers","prevObserver","getObserver","currentObserver","QueryObserver","newOrReusedObservers","keepPreviousData","previouslyUsedObserver","sort","sortMatchesByOrderOfQueries","a","b","indexOf","replaceAt","listener","useQueries","context","defaultedQueries","_optimisticResults","isRestoring","query","ensurePreventErrorBoundaryRetry","errorResetBoundary","queryClient","optimisticResult","useSyncExternalStore","onStoreChange","batchCalls","suspensePromises","queryObserver","fetchOptimistic","Promise","all","observerQueries","_defaultedQueries$ind","_defaultedQueries$ind2","getHasError","firstSingleResultWhichShouldThrow"],"sourceRoot":""}