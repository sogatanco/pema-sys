{"version":3,"file":"static/js/8876.92214040.chunk.js","mappings":"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","sources":["components/atoms/Toast.js","layouts/breadcrumbs/BreadCrumbs.js","pages/mobil/CarUsage.js","pages/mobil/Grafik.js","pages/mobil/AvailableCar.js","pages/mobil/ListPermintaan.js","pages/mobil/PermintaanMobil.js","pages/mobil/TakeNBack.js","pages/mobil/PengisianBbm.js","pages/mobil/Setting.js","pages/mobil/Mobil.js","pages/mobil/index.js"],"sourcesContent":["import React from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst notify = (type, msg) =>\r\n  type === 'success'\r\n    ? toast.success(msg)\r\n    : type === 'create'\r\n    ? toast(msg, {\r\n        icon: '🤗',\r\n      })\r\n    : type === 'start'\r\n    ? toast('Lets get started, cheer up!', {\r\n        icon: '💪',\r\n      })\r\n    : type === 'done'\r\n    ? toast('Horeee, task done!', {\r\n        icon: '👏',\r\n      })\r\n    : toast.error(msg);\r\n\r\nexport const Toast = () => {\r\n  return (\r\n    <Toaster\r\n      toastOptions={{\r\n        className: '',\r\n        style: {\r\n          //   border: '1px solid #713200',\r\n          //   padding: '16px',\r\n          //   color: '#713200',\r\n          //   width: '800px',\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const alert = (type, msg) => {\r\n  notify(type, msg);\r\n};\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = () => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  return (\r\n    <>\r\n      <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import React from \"react\";\r\nimport Timeline from 'react-calendar-timeline';\r\n// make sure you include the timeline stylesheet or the timeline will not be styled\r\nimport './CarUsage.scss';\r\nimport moment from 'moment';\r\nimport \"moment/locale/id\";\r\n\r\n\r\nconst CarUsage = () => {\r\n    moment.locale(\"id\");\r\n    const groups = [{ id: 1, title: 'Avanza BL 123 AT' },\r\n         { id: 2, title: 'INNOVA 23 BB' },\r\n         { id: 3, title: 'INNOVA 23 BB' },\r\n         { id: 4, title: 'INNOVA 23 BB' },\r\n         { id: 5, title: 'INNOVA 23 BB' }\r\n        \r\n        ];\r\n\r\n    const items = [\r\n        {\r\n            id: 1,\r\n            group: 1,\r\n            title: 'Wahyudin',\r\n            start_time: moment(\"2023-09-14 16:34:11\", \"YYYY-MM-DD HH:mm:ss\"),\r\n            end_time: moment(\"2023-09-14 17:34:11\", \"YYYY-MM-DD HH:mm:ss\"),\r\n            bgColor: 'rgba(225, 166, 244, 0.6)',\r\n        },\r\n        {\r\n            id: 2,\r\n            group: 2,\r\n            title: 'Safrian',\r\n            start_time: moment(\"2023-09-14 15:30:00\", \"YYYY-MM-DD HH:mm:ss\"),\r\n            end_time: moment(\"2023-09-14 16:30:00\", \"YYYY-MM-DD HH:mm:ss\"),\r\n            bgColor: 'rgba(100, 200, 100, 0.6)',\r\n        },\r\n        {\r\n            id: 3,\r\n            group: 1,\r\n            title: 'Syahrial',\r\n            start_time: moment(\"2023-09-14 18:00:00\", \"YYYY-MM-DD HH:mm:ss\"),\r\n            end_time: moment(\"2025-02-27 19:00:00\", \"YYYY-MM-DD HH:mm:ss\"),\r\n            bgColor: 'rgba(225, 166, 244, 0.6)',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Timeline\r\n                groups={groups}\r\n                items={items}\r\n                defaultTimeStart={moment().add(0, 'day')}\r\n                defaultTimeEnd={moment().add(12, 'hour')}\r\n                // timeSteps={{ day: 1, hour: 1 }} // Mengatur langkah waktu \r\n                headerLabelFormats={{\r\n                    yearLong: \"YYYY\", // 2023\r\n                    yearShort: \"YY\", // 23\r\n                    monthShort: \"MMM YYYY\", // Sep 2023\r\n                    monthMedium: \"MMMM YYYY\", // September 2023\r\n                    monthLong: \"MMMM YYYY\", // September 2023\r\n                    dayShort: \"DD MMM\", // 14 Sep\r\n                    dayLong: \"dddd, DD MMM YYYY\", // Kamis, 14 Sep 2023\r\n                    hourShort: \"HH:mm\", // 16:34\r\n                    hourMedium: \"HH:mm\", // 16:34\r\n                    hourLong: \"HH:mm:ss\", // 16:34:11\r\n                }}\r\n                // itemTouchSendsClick={false}\r\n            >\r\n\r\n            </Timeline>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarUsage;\r\n","import React, { useState } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { Select, MenuItem, TextField, Box, styled } from '@mui/material';\r\n\r\n// import './Grafik.css'; // Import the CSS \r\n\r\nconst colorss = ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0', '#546E7A', '#26a69a', '#D10CE8'];\r\n\r\nconst Grafik = () => {\r\n    const [state] = React.useState({\r\n        series: [{\r\n            data: [12, 22, 10, 28, 16, 21, 13, 30]\r\n        }],\r\n        options: {\r\n            chart: {\r\n                height: 350,\r\n                type: 'bar',\r\n            },\r\n            colors: colorss,\r\n            plotOptions: {\r\n                bar: {\r\n                    columnWidth: '45%',\r\n                    distributed: true,\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            xaxis: {\r\n                categories: [\r\n                    ['AVANZA', 'BL 1243 AT'],\r\n                    ['AVANZA', 'Smith'],\r\n                    ['AVANZA', 'Williams'],\r\n                    'Amber',\r\n                    ['Peter', 'Brown'],\r\n                    ['Mary', 'Evans'],\r\n                    ['David', 'Wilson'],\r\n                    ['Lily', 'Roberts'],\r\n                ],\r\n                labels: {\r\n                    style: {\r\n                        colors: colorss,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    const [selection, setSelection] = useState('all');\r\n    const [month, setMonth] = useState('');\r\n    const [year, setYear] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n\r\n    const handleSelectionChange = (event) => {\r\n        setSelection(event.target.value);\r\n        // Reset values when selection changes\r\n        setMonth('');\r\n        setYear('');\r\n        setStartDate('');\r\n        setEndDate('');\r\n    };\r\n\r\n    const RoundedSelect = styled(Select)({\r\n        borderRadius: \"17px\",\r\n        backgroundColor: \"white\",\r\n        letterSpacing: \"0.5px\",\r\n        border: \"none\",\r\n        \"& .MuiOutlinedInput-notchedOutline\": {\r\n            borderRadius: \"17px\",\r\n            border: \"none\",\r\n        },\r\n    });\r\n\r\n\r\n\r\n    return (\r\n\r\n       \r\n                <div className=\"chart-container\">\r\n                    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                        <h4 style={{ fontWeight: 'bold', color: 'black' }}>Grafik BBM Mobil Operasional</h4>\r\n\r\n                        <Box display=\"flex\" alignItems=\"center\">\r\n\r\n                            <Box className=\"me-2\">\r\n                                <RoundedSelect\r\n                                    value={selection}\r\n                                    onChange={handleSelectionChange}\r\n                                    displayEmpty\r\n                                    size=\"small\" // Ukuran lebih kecil\r\n                                >\r\n                                    <MenuItem value=\"monthly\">Bulanan</MenuItem>\r\n                                    <MenuItem value=\"yearly\">Tahunan</MenuItem>\r\n                                    <MenuItem value=\"custom\">Kustom</MenuItem>\r\n                                    <MenuItem value=\"all\">Semua</MenuItem>\r\n                                </RoundedSelect>\r\n                            </Box>\r\n\r\n                            {selection === 'monthly' && (\r\n                                <Box display=\"flex\" alignItems=\"center\">\r\n                                    <RoundedSelect\r\n                                        value={month}\r\n                                        onChange={(e) => setMonth(e.target.value)}\r\n                                        displayEmpty\r\n                                        size=\"small\" // Ukuran lebih kecil\r\n                                        sx={{ mr: 1 }} // Margin kanan untuk jarak\r\n                                    >\r\n                                        <MenuItem value=\"\"><em>Pilih Bulan</em></MenuItem>\r\n                                        {Array.from({ length: 12 }, (_, i) => (\r\n                                            <MenuItem key={i} value={i + 1}>{`Bulan ${i + 1}`}</MenuItem>\r\n                                        ))}\r\n                                    </RoundedSelect>\r\n                                    <RoundedSelect\r\n                                        value={year}\r\n                                        onChange={(e) => setYear(e.target.value)}\r\n                                        displayEmpty\r\n                                        size=\"small\" // Ukuran lebih kecil\r\n                                    >\r\n                                        <MenuItem value=\"\"><em>Pilih Tahun</em></MenuItem>\r\n                                        {Array.from({ length: 10 }, (_, i) => (\r\n                                            <MenuItem key={i} value={2023 + i}>{2023 + i}</MenuItem>\r\n                                        ))}\r\n                                    </RoundedSelect>\r\n                                </Box>\r\n                            )}\r\n\r\n                            {selection === 'yearly' && (\r\n                                <Box>\r\n                                    <RoundedSelect\r\n                                        value={year}\r\n                                        onChange={(e) => setYear(e.target.value)}\r\n                                        displayEmpty\r\n                                        size=\"small\" // Ukuran lebih kecil\r\n                                    >\r\n                                        <MenuItem value=\"\"><em>Pilih Tahun</em></MenuItem>\r\n                                        {Array.from({ length: 10 }, (_, i) => (\r\n                                            <MenuItem key={i} value={2023 + i}>{2023 + i}</MenuItem>\r\n                                        ))}\r\n                                    </RoundedSelect>\r\n                                </Box>\r\n                            )}\r\n\r\n                            {selection === 'custom' && (\r\n                                <Box display=\"flex\" alignItems=\"center\">\r\n                                    <TextField\r\n                                        label=\"Tanggal Mulai\"\r\n                                        type=\"date\"\r\n                                        value={startDate}\r\n                                        onChange={(e) => setStartDate(e.target.value)}\r\n                                        size=\"small\" // Ukuran lebih kecil\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        sx={{ mr: 1 }} // Margin kanan untuk jarak\r\n                                    />\r\n                                    <TextField\r\n\r\n                                        label=\"Tanggal Akhir\"\r\n                                        type=\"date\"\r\n                                        value={endDate}\r\n                                        onChange={(e) => setEndDate(e.target.value)}\r\n                                        size=\"small\" // Ukuran lebih kecil\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                    />\r\n                                </Box>\r\n                            )}\r\n                        </Box>\r\n\r\n\r\n\r\n                    </Box>\r\n\r\n                    <ReactApexChart options={state.options} series={state.series} type=\"bar\" height={350} />\r\n                </div>\r\n\r\n           \r\n    );\r\n};\r\n\r\nexport default Grafik;\r\n","import React, { useRef } from 'react';\r\nimport './AvailableCar.css'; // Import CSS file\r\n\r\n// Sample data for car models\r\nconst carModels = [\r\n    { name: 'Toyota Innova', sales: 'BL 2342 AT', image: 'https://agungtoyota.co.id/app/sam/assets/product_car_model/a1f5610604298e07d5b4b2c369555fda.png' },\r\n    { name: 'Totota Avsanza', sales: 'BL 3543 LW', image: 'https://www.seva.id/_next/image?url=https%3A%2F%2Fimages.prod.seva.id%2FToyota%2FAll%20New%20Avanza%2Fmain_color%2Fhitam.png&w=640&q=75' },\r\n    { name: 'Totota Avasnza', sales: 'BL 1543 LW', image: 'https://www.seva.id/_next/image?url=https%3A%2F%2Fimages.prod.seva.id%2FToyota%2FAll%20New%20Avanza%2Fmain_color%2Fhitam.png&w=640&q=75' },\r\n    { name: 'Totota Avaehwnza', sales: 'BL 1222 LH', image: 'https://www.seva.id/_next/image?url=https%3A%2F%2Fimages.prod.seva.id%2FToyota%2FAll%20New%20Avanza%2Fmain_color%2Fhitam.png&w=640&q=75' },\r\n];\r\nconst AvailableCar = () => {\r\n    const carListRef = useRef(null);\r\n\r\n    const scrollLeft = () => {\r\n        carListRef.current.scrollLeft -= 300; // Adjust scroll amount as needed\r\n    };\r\n\r\n    const scrollRight = () => {\r\n        carListRef.current.scrollLeft += 300; // Adjust scroll amount as needed\r\n    };\r\n\r\n    return (\r\n        <div className=\"available-cars\">\r\n            <button type='button' className=\"arrow-button left-arrow\" onClick={scrollLeft}>&lt;</button>\r\n            <div className=\"car-list\" ref={carListRef}>\r\n                {carModels.map((car) => (\r\n                    <div key={car.name} className=\"car-card\">\r\n                        <img src={car.image} alt={car.name} className=\"car-image\" />\r\n                        <h4>{car.name}</h4>\r\n                        <span>{car.sales}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <button type='button' className=\"arrow-button right-arrow\" onClick={scrollRight}>&gt;</button>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default AvailableCar;\r\n","import React, { useState, useEffect, forwardRef, useImperativeHandle, useCallback } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import CSS for react-confirm-alert\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth'; // Import your authentication hook\r\n\r\nconst ListPermintaan = forwardRef((props, ref) => {\r\n  const api = useAxios();\r\n  const [data, setData] = useState([]);\r\n\r\n  const { auth } = useAuth();\r\n\r\n  // Use useCallback to ensure fetchData is stable and doesn't cause unnecessary re-renders\r\n  const fetchData = useCallback(() => {\r\n    console.log(auth.user);\r\n    const endpoint = auth.user?.roles?.includes('PICMobil') \r\n        ? 'dapi/mobil/get-permintaan-all' \r\n        : 'dapi/mobil/get-permintaan';\r\n\r\n    api.get(endpoint)\r\n        .then((response) => {\r\n            const formattedData = response.data.data.map(item => ({\r\n                ...item,\r\n                displayMobil: `${item.brand} - ${item.plat}`, // Tambahkan tampilan brand - plat\r\n            }));\r\n            setData(formattedData);\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error fetching data:', error);\r\n        });\r\n  }, [auth.user, api]);\r\n\r\n  const handleDelete = (id, status) => {\r\n    if (status !== null) {\r\n      alert('error', 'Tidak bisa dihapus, permintaan sudah direview.');\r\n      return;\r\n    }\r\n\r\n    confirmAlert({\r\n      title: 'Konfirmasi Hapus',\r\n      message: 'Apakah Anda yakin ingin menghapus permintaan ini?',\r\n      buttons: [\r\n        {\r\n          label: 'Ya',\r\n          onClick: () => {\r\n            api.post(`dapi/mobil/delete-permintaan/${id}`)\r\n              .then(() => {\r\n                alert('success', 'Permintaan berhasil dihapus.');\r\n                fetchData(); // Refresh data after deletion\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error deleting data:', error);\r\n                alert('error', 'Terjadi kesalahan saat menghapus permintaan.');\r\n              });\r\n          },\r\n        },\r\n        {\r\n          label: 'Tidak',\r\n          onClick: () => {},\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const handleApprove = (id) => {\r\n    api.post(`dapi/mobil/approve-permintaan/${id}`)\r\n        .then(() => {\r\n            alert('success', 'Permintaan berhasil disetujui.');\r\n            fetchData(); // Refresh data after approval\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error approving request:', error);\r\n            alert('error', 'Terjadi kesalahan saat menyetujui permintaan.');\r\n        });\r\n  };\r\n\r\n  const handleReject = (id) => {\r\n    let reason = '';\r\n\r\n    confirmAlert({\r\n        title: 'Konfirmasi Penolakan',\r\n        message: 'Masukkan alasan penolakan:',\r\n        customUI: ({ onClose }) => (\r\n            <div className=\"custom-ui\">\r\n                <h1>Konfirmasi Penolakan</h1>\r\n                <TextField\r\n                    label=\"Alasan Penolakan\"\r\n                    fullWidth\r\n                    multiline\r\n                    rows={3}\r\n                    onChange={(e) => {\r\n                        reason = e.target.value; // Pisahkan assignment\r\n                    }}\r\n                />\r\n                <div style={{ marginTop: '20px' }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                            if (!reason.trim()) {\r\n                                alert('error', 'Harap masukkan alasan penolakan.');\r\n                                return;\r\n                            }\r\n                            api.post(`dapi/mobil/reject-permintaan/${id}`, { ket:reason })\r\n                                .then(() => {\r\n                                    alert('success', 'Permintaan berhasil ditolak.');\r\n                                    fetchData(); // Refresh data after rejection\r\n                                })\r\n                                .catch((error) => {\r\n                                    console.error('Error rejecting request:', error);\r\n                                    alert('error', 'Terjadi kesalahan saat menolak permintaan.');\r\n                                });\r\n                            onClose();\r\n                        }}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={onClose}\r\n                        style={{ marginLeft: '10px' }}\r\n                    >\r\n                        Batal\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        ),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(); // Fetch data only once when the component mounts\r\n  }, []);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    refreshData: fetchData, // Expose the fetchData method to the parent\r\n  }));\r\n\r\n  // Define the columns\r\n  const columns = [\r\n    {\r\n        name: 'Aksi',\r\n        cell: row => (\r\n            <>\r\n                {auth.user?.roles?.includes('PICMobil') && (\r\n                    <>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={() => handleApprove(row?.id)}\r\n                            style={{ marginRight: '5px' }}\r\n                        >\r\n                            Approve\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            size=\"small\"\r\n                            onClick={() => handleReject(row?.id)}\r\n                            style={{ marginRight: '5px' }}\r\n                        >\r\n                            Reject\r\n                        </Button>\r\n                    </>\r\n                )}\r\n                {!auth.user?.roles?.includes('PICMobil') && (\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"error\"\r\n                        size=\"small\"\r\n                        disabled={row?.status !== null}\r\n                        onClick={() => handleDelete(row?.id, row?.status)}\r\n                    >\r\n                        Hapus\r\n                    </Button>\r\n                )}\r\n            </>\r\n        ),\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: '250px', // Luaskan kolom aksi\r\n    },\r\n    {\r\n        name: 'Tgl Pengajuan',\r\n        selector: row => row?.created_at ? new Date(row?.created_at).toLocaleString() : 'Unknown',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Keperluan',\r\n        selector: row => row?.keperluan,\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Mobil',\r\n        selector: row => row?.displayMobil || '-',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Dari',\r\n        selector: row => new Date(row?.mulai).toLocaleString(),\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Sampai',\r\n        selector: row => new Date(row?.hingga).toLocaleString(),\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Perlu Sopir',\r\n        selector: row => (row?.sopir === 1 ? 'Ya' : 'Tidak'),\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Status',\r\n        selector: row => {\r\n            if (row?.status === null) return 'Under Review';\r\n            if (row?.status === 0) return 'Reject';\r\n            if (row?.status === 1) return 'Approve';\r\n            return 'Unknown';\r\n        },\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Keterangan',\r\n        selector: row => row?.ket || '-',\r\n        sortable: false,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <DataTable\r\n      title=\"List Permintaan Kendaraan\"\r\n      columns={columns}\r\n      data={data}\r\n      pagination\r\n      highlightOnHover\r\n      striped\r\n    />\r\n  );\r\n});\r\n\r\nexport default ListPermintaan;\r\n","import React, { useState, useRef } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Alert, Card, CardBody } from 'reactstrap';\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers';\r\nimport { Box, Button, RadioGroup, FormControlLabel, Radio } from '@mui/material';\r\nimport dayjs from 'dayjs'; // Import dayjs for date formatting\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport ListPermintaan from './ListPermintaan';\r\n\r\nconst PermintaanMobil = () => {\r\n    const api = useAxios();\r\n    const [keperluan, setKeperluan] = useState('');\r\n    const [dari, setDari] = useState(null);\r\n    const [sampai, setSampai] = useState(null);\r\n    const [perluSopir, setPerluSopir] = useState(0);\r\n    const listPermintaanRef = useRef(null); // Reference to refresh ListPermintaan\r\n\r\n    // alert\r\n    const [visible, setVisible] = React.useState(true);\r\n    const onDismiss = () => setVisible(false);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!keperluan || !dari || !sampai) {\r\n            alert('error', 'Harap isi semua field sebelum mengajukan permintaan.');\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            keperluan,\r\n            dari: dari ? dayjs(dari).format('YYYY-MM-DD HH:mm:ss') : null, // Format to MySQL datetime\r\n            sampai: sampai ? dayjs(sampai).format('YYYY-MM-DD HH:mm:ss') : null, // Format to MySQL datetime\r\n            perluSopir,\r\n        };\r\n\r\n        api.post('dapi/mobil/insert-permintaan', data)\r\n            .then((response) => {\r\n                console.log('Data submitted successfully:', response.data);\r\n                alert('success', 'Permintaan berhasil diajukan!');\r\n                setKeperluan(''); // Clear keperluan\r\n                setDari(null); // Clear dari\r\n                setSampai(null); // Clear sampai\r\n                setPerluSopir(0); // Reset perluSopir to default\r\n                if (listPermintaanRef.current) {\r\n                    listPermintaanRef.current.refreshData(); // Trigger data refresh\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error submitting data:', error);\r\n                alert('error','Terjadi kesalahan saat mengajukan permintaan.');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardBody>\r\n                    <Alert color=\"info\" isOpen={visible} toggle={onDismiss} fade={false}>\r\n                        Permintaan Mobil Minimal 1 Jam sebelum pemakaian\r\n                    </Alert>\r\n\r\n                    <Box\r\n                        component=\"form\"\r\n                        onSubmit={handleSubmit}\r\n                        sx={{\r\n                            '& .MuiTextField-root': { m: 1, width: '100%' },\r\n                            '& .MuiAutocomplete-root': { m: 1, width: '100%' },\r\n                            '& .MuiButton-root': { m: 1, width: '100%' },\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            width: '100%',\r\n                            margin: 'auto',\r\n                        }}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <TextField\r\n                            required\r\n                            id=\"keperluan\"\r\n                            label=\"Keperluan\"\r\n                            variant=\"outlined\"\r\n                            value={keperluan}\r\n                            onChange={(event) => setKeperluan(event.target.value)}\r\n                        />\r\n                        \r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                            <DateTimePicker\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                                label=\"Dari\"\r\n                                ampm={false}\r\n                                value={dari}\r\n                                onChange={setDari}\r\n                                viewRenderers={{\r\n                                    hours: renderTimeViewClock,\r\n                                    minutes: renderTimeViewClock,\r\n                                }}\r\n                            />\r\n                            <DateTimePicker\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                                label=\"Sampai\"\r\n                                ampm={false}\r\n                                value={sampai}\r\n                                onChange={setSampai}\r\n                                viewRenderers={{\r\n                                    hours: renderTimeViewClock,\r\n                                    minutes: renderTimeViewClock,\r\n                                }}\r\n                            />\r\n                        </LocalizationProvider>\r\n\r\n                        <Box\r\n                            sx={{\r\n                                '& .MuiFormLabel-root': { m: 1, width: '100%' },\r\n                                '& .MuiRadioGroup-root': { m: 1, width: '100%' },\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                border: '1px solid #ccc',\r\n                                borderRadius: '4px',\r\n                                paddingLeft: '20px',\r\n                                paddingRight: '20px',\r\n                                width: '100%',\r\n                                margin: 'auto',\r\n                                marginTop: '8px',\r\n                            }}\r\n                        >\r\n                            <RadioGroup\r\n                                row\r\n                                value={perluSopir}\r\n                                onChange={(event) => setPerluSopir(event.target.value)}\r\n                                sx={{\r\n                                    justifyContent: 'space-between',\r\n                                    width: '100%',\r\n                                }}\r\n                            >\r\n                                <FormControlLabel value=\"1\" control={<Radio />} label=\"Memerlukan Sopir\" />\r\n                                <FormControlLabel value=\"0\" control={<Radio />} label=\"Tidak Memerlukan Sopir\" />\r\n                            </RadioGroup>\r\n                        </Box>\r\n\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size='large'>\r\n                            Submit Pemintaan\r\n                        </Button>\r\n                    </Box>\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <Card>\r\n                <CardBody>\r\n                    <ListPermintaan ref={listPermintaanRef} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PermintaanMobil;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardBody, CardHeader, Alert } from \"reactstrap\";\r\nimport { Box, TextField, Autocomplete, Button, MenuItem } from \"@mui/material\";\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers';\r\nimport DataTable from 'react-data-table-component';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs'; // Import dayjs untuk date formatting\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport useAxios from \"../../hooks/useAxios\";\r\nimport { alert } from '../../components/atoms/Toast'; // Import alert\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Tambahkan CSS untuk react-confirm-alert\r\n\r\nconst TakeNBack = () => {\r\n    const api = useAxios();\r\n    const [employe, setEmploye] = useState(null);\r\n    const [employes, setEmployes] = useState([]);\r\n    const [sampai, setSampai] = useState(null);\r\n    const [mobil, setMobil] = useState('');\r\n    const [book, setBook] = useState('booking');\r\n    const [nobook, setNobook] = useState('');\r\n    const [keperluan, setKeperluan] = useState('');\r\n    const [bookings, setBookings] = useState([]); // State untuk booking data\r\n    const [mobils, setMobils] = useState([]); // State untuk mobil data\r\n    const [pengambilan, setPengambilan] = useState([]); // State untuk data pengambilan\r\n\r\n    const getKaryawan = () => {\r\n        api.get('api/employe/assignment-list?search=all').then(res => {\r\n            setEmployes(res.data.data);\r\n            console.log(res.data.data);\r\n        });\r\n    };\r\n\r\n    const getBookings = () => {\r\n        api.get('dapi/mobil/get-permintaan-by-status').then(res => {\r\n            if (res.data.success) {\r\n                console.log(res);\r\n                setBookings(res.data.data);\r\n            }\r\n        }).catch(err => {\r\n            console.error('Error fetching bookings:', err);\r\n        });\r\n    };\r\n\r\n    const getMobils = () => {\r\n        api.get('dapi/mobil/get').then(res => {\r\n            if (res.data.success) {\r\n                setMobils(res.data.data);\r\n            }\r\n        }).catch(err => {\r\n            console.error('Error fetching mobils:', err);\r\n        });\r\n    };\r\n\r\n    const getPengambilan = () => {\r\n        api.get('dapi/mobil/get-pengambilan').then(res => {\r\n            if (res.data.success) {\r\n                setPengambilan(res.data.data);\r\n            }\r\n        }).catch(err => {\r\n            console.error('Error fetching pengambilan:', err);\r\n        });\r\n    };\r\n\r\n    const handleSave = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (book === 'booking' && (!mobil )) {\r\n            alert('error', 'Harap isi semua field (Mobil dan Perkiraan Pengembalian) sebelum menyimpan.');\r\n            return;\r\n        }\r\n\r\n        if (book !== 'booking' && (!mobil || !employe || !keperluan || !sampai)) {\r\n            alert('error', 'Harap isi semua field sebelum menyimpan.');\r\n            return;\r\n        }\r\nconsole.log(employe)\r\n        const data = {\r\n            id_mobil: mobil,\r\n            booked: book === 'booking' ? nobook : null,\r\n            employe_id: book !== 'booking' ? employe?.value : null,\r\n            keperluan: book !== 'booking' ? keperluan : null,\r\n            sampai: dayjs(sampai).format('YYYY-MM-DD HH:mm:ss'),\r\n            book, // Include Booking/No Booking in the data\r\n        };\r\n\r\n        api.post('dapi/mobil/insert-pengambilan', data)\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    alert('success', 'Data pengambilan berhasil disimpan.');\r\n                    setMobil('');\r\n                    setNobook('');\r\n                    setEmploye(null);\r\n                    setKeperluan('');\r\n                    setSampai(null);\r\n                    setBook('booking'); // Reset Booking/No Booking to default\r\n                } else {\r\n                    alert('error', 'Gagal menyimpan data pengambilan.');\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error saving data:', error);\r\n                alert('error', 'Terjadi kesalahan saat menyimpan data.');\r\n            });\r\n    };\r\n\r\n    // Fungsi untuk menangani pengembalian\r\n    const handleDort = (id) => {\r\n        let latestKm = null;\r\n\r\n        confirmAlert({\r\n            title: \"Konfirmasi Pengembalian\",\r\n            message: \"Cek apakah kilometer dan minyak sesuai?\",\r\n            customUI: ({ onClose }) => (\r\n                <div className=\"custom-ui\">\r\n                    <h1>Konfirmasi Pengembalian</h1>\r\n                    <p>Cek apakah kilometer dan minyak sesuai?</p>\r\n                    <TextField\r\n                        label=\"Kilometer Terakhir\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        onChange={(e) => {\r\n                            latestKm = e.target.value; // Pisahkan assignment\r\n                        }}\r\n                    />\r\n                    <div style={{ marginTop: \"20px\" }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                                if (!latestKm) {\r\n                                    alert('error', 'Harap masukkan kilometer terbaru.');\r\n                                    return;\r\n                                }\r\n                                api.post(`dapi/mobil/pengembalian/${id}`, { last_km: latestKm })\r\n                                    .then((response) => {\r\n                                        if (response.data.success) {\r\n                                            alert('success', 'Mobil berhasil dikembalikan.');\r\n                                            getPengambilan(); // Refresh data pengambilan\r\n                                        } else {\r\n                                            alert('error', 'Gagal mengembalikan mobil.');\r\n                                        }\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        console.error('Error during return:', error);\r\n                                        alert('error', 'Terjadi kesalahan saat mengembalikan mobil.');\r\n                                    });\r\n                                onClose();\r\n                            }}\r\n                        >\r\n                            Ya\r\n                        </Button>\r\n                        <Button variant=\"outlined\" color=\"secondary\" onClick={onClose} style={{ marginLeft: \"10px\" }}>\r\n                            Tidak\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            ),\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getKaryawan();\r\n        getBookings();\r\n        getMobils();\r\n        getPengambilan(); // Panggil fetch pengambilan di useEffect\r\n    }, []);\r\n\r\n\r\n    // Gaya tombol\r\n    const buttonStyle = {\r\n        padding: '5px 10px',\r\n        backgroundColor: '#007BFF',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n    };\r\n\r\n    // Kolom tabel\r\n    const columns = [\r\n        {\r\n            name: 'Pengembalian',\r\n            cell: row => (\r\n                row.real_pengembalian \r\n                    ? <span>{dayjs(row.real_pengembalian).format('YYYY-MM-DD HH:mm')}</span> \r\n                    : <button \r\n                        type=\"button\" \r\n                        style={buttonStyle} \r\n                        onClick={() => handleDort(row.id)}>Pengembalian</button>\r\n            ),\r\n            width: '150px',\r\n            button: true,\r\n            sortable: false,\r\n        },\r\n        {\r\n            name: 'Nama Karyawan',\r\n            selector: row => row.employe_name || row.employe_name,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Pengambilan',\r\n            selector: row => row.taken_time || row.taken_time,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Perjanjian Pengembalian',\r\n            selector: row => row.pengembalian || row.pengembalian,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Nama Mobil',\r\n            selector: row => `${row.brand} - ${row.plat}`, // Gunakan template literals\r\n            sortable: true,\r\n        },\r\n    ];\r\n\r\n    // Pesan ketika data kosong\r\n    const noDataComponent = <div style={{ textAlign: 'center', padding: '20px' }}>Tidak ada data yang tersedia.</div>;\r\n\r\n    const [visible, setVisible] = React.useState(true);\r\n    const onDismiss = () => setVisible(false);\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* pengambilan Mobil */}\r\n            <Card>\r\n                <CardHeader><strong>Pengambilan Mobil</strong></CardHeader>\r\n                <CardBody>\r\n                    <Alert color=\"info\" isOpen={visible} toggle={onDismiss} fade={false}>\r\n                        Utamakan yang telah melakukan booking terlebih dahulu\r\n                    </Alert>\r\n                    <Box\r\n                        component=\"form\"\r\n                        sx={{\r\n                            '& .MuiTextField-root': { m: 1, width: '100%' },\r\n                            '& .MuiAutocomplete-root': { m: 1, width: '100%' },\r\n                            '& .MuiButton-root': { m: 1, width: '100%' },\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            width: '100%',\r\n                            margin: 'auto',\r\n                        }}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                        onSubmit={handleSave}\r\n                    >\r\n\r\n                        <TextField\r\n                            style={{ width: '100%' }}\r\n                            variant=\"outlined\"\r\n                            value={book}\r\n                            onChange={(e) => setBook(e.target.value)}\r\n                            select\r\n                            label=\"Booking / No Booking\"\r\n                        >\r\n                            <MenuItem value=\"booking\">\r\n                                Booking\r\n                            </MenuItem>\r\n                            <MenuItem value=\"no-booking\">\r\n                                No Booking\r\n                            </MenuItem>\r\n\r\n                        </TextField>\r\n\r\n                        {book === 'booking' && (\r\n                            <>\r\n                                <TextField\r\n                                    style={{ width: '100%' }}\r\n                                    variant=\"outlined\"\r\n                                    value={nobook}\r\n                                    onChange={(e) => setNobook(e.target.value)}\r\n                                    select\r\n                                    label=\"Nomor Booking\"\r\n                                >\r\n                                    {bookings.map((booking) => (\r\n                                        <MenuItem key={booking.id} value={booking.id}>\r\n                                            {`${booking.created_by_name} - ${dayjs(booking.mulai).format('YYYY-MM-DD HH:mm')} s/d ${dayjs(booking.hingga).format('YYYY-MM-DD HH:mm')}`}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n\r\n                                <TextField\r\n                                    style={{ width: '100%' }}\r\n                                    variant=\"outlined\"\r\n                                    value={mobil}\r\n                                    onChange={(e) => setMobil(e.target.value)}\r\n                                    select\r\n                                    label=\"Unit Mobil\"\r\n                                >\r\n                                    {mobils.map((unit) => (\r\n                                        <MenuItem key={unit.id} value={unit.id}>\r\n                                            {`${unit.brand} - ${unit.plat}`}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </>\r\n                        )}\r\n\r\n                        {book !== 'booking' && (<><TextField\r\n                            style={{ width: '100%' }}\r\n                            variant=\"outlined\"\r\n                            value={mobil}\r\n                            onChange={(e) => setMobil(e.target.value)}\r\n                            select\r\n                            label=\"Unit Mobil\"\r\n                        >\r\n                            {mobils.map((unit) => (\r\n                                <MenuItem key={unit.id} value={unit.id}>\r\n                                    {`${unit.brand} - ${unit.plat}`}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n\r\n                            {employes.length > 0 && (\r\n                                <Autocomplete\r\n                                    style={{ marginLeft: -10 }}\r\n                                    disablePortal\r\n                                    id=\"combo-box-demo\"\r\n                                    options={employes || []}\r\n                                    value={employe}\r\n                                    onChange={(event, newValue) => {\r\n                                        if (typeof newValue === 'string') {\r\n                                            setEmploye({\r\n                                                label: newValue,\r\n                                            });\r\n                                        } else if (newValue && newValue.inputValue) {\r\n                                            setEmploye({\r\n                                                label: newValue.inputValue,\r\n                                            });\r\n                                        } else {\r\n                                            setEmploye(newValue);\r\n                                        }\r\n                                    }}\r\n                                    getOptionLabel={(option) => {\r\n                                        if (typeof option === 'string') {\r\n                                            return option;\r\n                                        }\r\n                                        if (option.inputValue) {\r\n                                            return option.inputValue;\r\n                                        }\r\n                                        return option.label;\r\n                                    }}\r\n                                    renderOption={(props, option) => {\r\n                                        const { key, ...otherProps } = props;\r\n                                        return <li key={key} {...otherProps}>{option.label}</li>;\r\n                                    }}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Nama Karyawan\" />}\r\n                                />\r\n                            )}\r\n\r\n                            <TextField\r\n                                required\r\n                                id=\"keperluan\"\r\n                                label=\"Keperluan\"\r\n                                variant=\"outlined\"\r\n                                value={keperluan}\r\n                                onChange={(event) => setKeperluan(event.target.value)}\r\n                            />\r\n\r\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                <DateTimePicker\r\n                                    renderInput={(params) => <TextField {...params} />}\r\n                                    label=\"Perkiraan Pengembalian\"\r\n                                    ampm={false}\r\n                                    value={sampai}\r\n                                    onChange={setSampai}\r\n                                    viewRenderers={{\r\n                                        hours: renderTimeViewClock,\r\n                                        minutes: renderTimeViewClock,\r\n                                    }}\r\n                                />\r\n                            </LocalizationProvider>\r\n                        </>)}\r\n\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size='large'>\r\n                            Simpan\r\n                        </Button>\r\n                    </Box>\r\n                </CardBody>\r\n            </Card>\r\n\r\n            {/* pengembalian Mobil */}\r\n            <Card>\r\n                <CardHeader><strong>Pengembalian Mobil</strong></CardHeader>\r\n                <CardBody>\r\n                    <DataTable\r\n                        columns={columns}\r\n                        data={pengambilan} // Ganti data dummy dengan data dari API\r\n                        noDataComponent={noDataComponent}\r\n                        pagination\r\n                        fixedHeader\r\n                        sortable\r\n                        fixedHeaderScrollHeight=\"300px\"\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n};\r\nTakeNBack.propTypes = {\r\n    key: PropTypes.string,\r\n};\r\n\r\nexport default TakeNBack;","// Import necessary React and MUI components\r\nimport React, { useState, useEffect } from 'react';\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    Typography,\r\n} from '@mui/material';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs'; // Tambahkan import untuk dayjs\r\nimport { alert } from '../../components/atoms/Toast'; \r\nimport useAxios from '../../hooks/useAxios';\r\n\r\n// Define the PengisianBbm functional component\r\nconst PengisianBbm = () => {\r\n    // State hooks for form fields\r\n    const api = useAxios();\r\n    const [unitMobil, setUnitMobil] = useState('');\r\n    const [jenisBbm, setJenisBbm] = useState('');\r\n    const [jumlahBiaya, setJumlahBiaya] = useState('');\r\n    const [tanggal, setTanggal] = useState(null);\r\n    const [employe, setEmploye] = useState(null);\r\n    const [employes, setEmployes] = useState([]);\r\n    const [unitMobilOptions, setUnitMobilOptions] = useState([]); // State untuk unit mobil\r\n\r\n    // State hook for form validation\r\n    const [errors, setErrors] = useState({});\r\n\r\n    // Options for Jenis BBM dropdown with RON and jenis in lowercase\r\n    const jenisBbmOptions = [\r\n        { label: 'Solar (CN 48)', value: 'bio_solar', ron: '48', jenis: 'diesel' },\r\n        { label: 'Dexlite (CN 51)', value: 'dexlite', ron: '51', jenis: 'diesel' },\r\n        { label: 'Pertalite (RON 90)', value: 'pertalite', ron: '90', jenis: 'bensin' },\r\n        { label: 'Pertamax (RON 92)', value: 'pertamax', ron: '92', jenis: 'bensin' },\r\n        { label: 'Pertamax Green (RON 95)', value: 'pertamax_green', ron: '95', jenis: 'bensin' },\r\n        { label: 'Pertamax Turbo (RON 98)', value: 'pertamax_turbo', ron: '98', jenis: 'bensin' },\r\n        { label: 'Dex (CN 53)', value: 'dex', ron: '53', jenis: 'diesel' },\r\n    ];\r\n\r\n    // Function to handle form submission\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Basic validation\r\n        const validationErrors = {};\r\n        if (!unitMobil) validationErrors.unitMobil = 'Unit Mobil is required';\r\n        if (!jenisBbm) validationErrors.jenisBbm = 'Jenis BBM is required';\r\n        if (!jumlahBiaya || Number.isNaN(Number(jumlahBiaya)) || Number(jumlahBiaya) <= 0) {\r\n            validationErrors.jumlahBiaya = 'Jumlah Biaya must be a positive number';\r\n        }\r\n        if (!tanggal) validationErrors.tanggal = 'Tanggal Pengisian is required';\r\n        if (!employe) validationErrors.employe = 'Pengisian oleh is required';\r\n\r\n        // If there are validation errors, set them and return\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            setErrors(validationErrors);\r\n            return;\r\n        }\r\n\r\n        // Format tanggal sesuai MySQL datetime format\r\n        const formattedTanggal = dayjs(tanggal).format('YYYY-MM-DD HH:mm:ss');\r\n\r\n        // Prepare data for submission\r\n        const requestData = {\r\n            id_mobil: unitMobil,\r\n            jenis_bbm: jenisBbm,\r\n            jumlah: jumlahBiaya,\r\n            w_pengisian: formattedTanggal, // Gunakan format MySQL\r\n            oleh: employe?.value,\r\n        };\r\n\r\n        // Submit data to backend\r\n        api.post('dapi/mobil/insert-bbm', requestData)\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    alert('success', 'Data pengisian BBM berhasil disimpan.');\r\n                    // Reset form fields\r\n                    setUnitMobil('');\r\n                    setJenisBbm('');\r\n                    setJumlahBiaya('');\r\n                    setTanggal(null);\r\n                    setEmploye(null);\r\n                    setErrors({});\r\n                } else {\r\n                    alert('error', 'Gagal menyimpan data pengisian BBM.');\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error submitting data:', error);\r\n                alert('error', 'Terjadi kesalahan saat menyimpan data pengisian BBM.');\r\n            });\r\n    };\r\n\r\n    const getKaryawan = () => {\r\n        api.get('api/employe/assignment-list?search=all').then(res => {\r\n            setEmployes(res.data.data);\r\n            console.log(res.data.data)\r\n        })\r\n    }\r\n\r\n    const getUnitMobil = () => {\r\n        api.get('dapi/mobil/get').then(res => {\r\n            if (res.data.success) {\r\n                const options = res.data.data.map(unit => ({\r\n                    value: unit.id, // Gunakan id sebagai value\r\n                    label: `${unit.brand} - ${unit.plat}`, // Tampilkan brand - plat\r\n                }));\r\n                setUnitMobilOptions(options);\r\n            }\r\n        }).catch(err => {\r\n            console.error('Error fetching unit mobil:', err);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getKaryawan();\r\n        getUnitMobil(); // Panggil API untuk unit mobil\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <Box\r\n                    component=\"form\"\r\n                    onSubmit={handleSubmit}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                    sx={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        gap: 2,\r\n                        margin: 'auto',\r\n                        padding: 2,\r\n                    }}\r\n                >\r\n\r\n\r\n                    {/* Unit Mobil Dropdown */}\r\n                    <FormControl fullWidth error={Boolean(errors.unitMobil)}>\r\n                        <InputLabel id=\"unit-mobil-label\">Unit Kendaraan</InputLabel>\r\n                        <Select\r\n                            labelId=\"unit-mobil-label\"\r\n                            id=\"unit-mobil\"\r\n                            value={unitMobil}\r\n                            onChange={(e) => setUnitMobil(e.target.value)}\r\n                            label=\"Unit Kendaraan\"\r\n                        >\r\n                            {unitMobilOptions.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        {errors.unitMobil && <Typography color=\"error\">{errors.unitMobil}</Typography>}\r\n                    </FormControl>\r\n\r\n                    {/* Jenis BBM Dropdown */}\r\n                    <FormControl fullWidth error={Boolean(errors.jenisBbm)}>\r\n                        <InputLabel id=\"jenis-bbm-label\">Jenis BBM</InputLabel>\r\n                        <Select\r\n                            labelId=\"jenis-bbm-label\"\r\n                            id=\"jenis-bbm\"\r\n                            value={jenisBbm}\r\n                            onChange={(e) => setJenisBbm(e.target.value)}\r\n                            label=\"Jenis BBM\"\r\n                        >\r\n                            {jenisBbmOptions.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        {errors.jenisBbm && <Typography color=\"error\">{errors.jenisBbm}</Typography>}\r\n                    </FormControl>\r\n\r\n                    {/* Jumlah Biaya Numeric Input */}\r\n                    <TextField\r\n                        label=\"Jumlah Biaya (Rp)\"\r\n                        variant=\"outlined\"\r\n                        type=\"number\"\r\n                        value={jumlahBiaya}\r\n                        onChange={(e) => setJumlahBiaya(e.target.value)}\r\n                        error={Boolean(errors.jumlahBiaya)}\r\n                        helperText={errors.jumlahBiaya}\r\n                        fullWidth\r\n                    />\r\n\r\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                        <DateTimePicker\r\n                            renderInput={(params) => <TextField {...params} />}\r\n                            label=\"Tgl Pengisian\"\r\n                            ampm={false}\r\n                            value={tanggal}\r\n                            onChange={setTanggal}\r\n                            viewRenderers={{\r\n                                hours: renderTimeViewClock,\r\n                                minutes: renderTimeViewClock,\r\n                            }}\r\n                        />\r\n                    </LocalizationProvider>\r\n\r\n                    {employes.length > 0 && (\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            options={employes || []}\r\n                            value={employe}\r\n                            onChange={(event, newValue) => {\r\n                                if (typeof newValue === 'string') {\r\n                                    setEmploye({\r\n                                        label: newValue,\r\n                                    });\r\n                                } else if (newValue && newValue.inputValue) {\r\n                                    setEmploye({\r\n                                        label: newValue.inputValue,\r\n                                    });\r\n                                } else {\r\n                                    setEmploye(newValue);\r\n                                }\r\n                            }}\r\n                            getOptionLabel={(option) => {\r\n                                if (typeof option === 'string') {\r\n                                    return option;\r\n                                }\r\n                                if (option.inputValue) {\r\n                                    return option.inputValue;\r\n                                }\r\n                                return option.label;\r\n                            }}\r\n                            renderOption={(props, option) => {\r\n                                const { key, ...otherProps } = props;\r\n                                return <li key={key} {...otherProps}>{option.label}</li>;\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Pengisian oleh\" />}\r\n                        />\r\n                    )}\r\n                    {/* Submit Button */}\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </Box>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nPengisianBbm.propTypes = {\r\n    key: PropTypes.string,\r\n    // Add other props if necessary\r\n};\r\n\r\nexport default PengisianBbm;\r\n","import React, { useState } from \"react\";\r\nimport { Card, CardBody, CardHeader } from \"reactstrap\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { TextField, Box, Button, MenuItem, Typography, FormControl, InputLabel, Select } from \"@mui/material\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import CSS for react-confirm-alert\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport useAxios from \"../../hooks/useAxios\";\r\n\r\n\r\n\r\nconst Setting = () => {\r\n\r\n    const api = useAxios();\r\n\r\n    const [kendaraans, setKendaraans] = useState([]);\r\n\r\n    const [brand, setBrand] = React.useState(\"\");\r\n    const [plat, setPlat] = React.useState(\"\");\r\n    const [status, setStatus] = React.useState(\"\");\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const getKendaraan = () => {\r\n        api.get('dapi/mobil/get').then(res => {\r\n            if (res.data.success) {\r\n                setKendaraans(res.data.data);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const validationErrors = {};\r\n        if (!brand) validationErrors.brand = 'Brand Kendaraan is required';\r\n        if (!plat) validationErrors.plat = 'Plat Kendaraan is required';\r\n        if (!status) validationErrors.status = 'Status Kendaraan is required';\r\n\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            setErrors(validationErrors);\r\n            return;\r\n        }\r\n\r\n        await api.post('dapi/mobil/insert', { brand, plat, status }).then(res => {\r\n            if (res.data.success) {\r\n                alert('success', 'Data berhasil disimpan');\r\n                setBrand('');\r\n                setPlat('');\r\n                setStatus('');\r\n                getKendaraan();\r\n            } else {\r\n                alert('error', 'Data gagal disimpan');\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n            alert('error', 'Terjadi kesalahan saat menyimpan data');\r\n        });\r\n        setErrors({}); // Reset errors after submission\r\n    }\r\n\r\n    const handleChange = (id, st) => {\r\n        api.post(`dapi/mobil/update/${id}`, { status: st === 'aktif' ? 'non-aktif' : 'aktif' }).then(res => {\r\n            if (res.data.success) {\r\n                alert('success', 'Status berhasil diubah');\r\n                getKendaraan();\r\n            } else {\r\n                alert('error', 'Status gagal diubah');\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n            alert('error', 'Terjadi kesalahan saat mengubah status');\r\n        });\r\n    }\r\n\r\n    const del = (id) => {\r\n        confirmAlert({\r\n            title: 'Konfirmasi Hapus',\r\n            message: 'Apakah Anda yakin ingin menghapus data ini?',\r\n            buttons: [\r\n                {\r\n                    label: 'Ya',\r\n                    onClick: () => {\r\n                        api.post(`dapi/mobil/delete/${id}`).then(res => {\r\n                            if (res.data.success) {\r\n                                alert('success', 'Data berhasil dihapus');\r\n                                getKendaraan();\r\n                            } else {\r\n                                alert('error', 'Data gagal dihapus');\r\n                            }\r\n                        }).catch(err => {\r\n                            console.log(err);\r\n                            alert('error', 'Terjadi kesalahan saat menghapus data');\r\n                        });\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Tidak',\r\n                    onClick: () => {}\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        getKendaraan();\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            name: \"No\",\r\n            selector: (row, index) => index + 1,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: \"Brand Kendaraan\",\r\n            selector: (row) => row.brand,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: \"Plat Kendaraan\",\r\n            selector: (row) => row.plat,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: \"Status\",\r\n            selector: (row) => (\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={row.status === 'aktif'}\r\n                            onChange={() => handleChange(row.id, row.status)}\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                    label={row.status === 'aktif' ? 'Aktif' : 'Nonaktif'}\r\n                />\r\n            ),\r\n        },\r\n\r\n        {\r\n            name: \"Action\",\r\n            selector: (row) => (\r\n                <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        del(row.id);\r\n                    }}\r\n                >\r\n                    Hapus\r\n                </Button>\r\n            ),\r\n        }\r\n    ];\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <strong>Management Kendaraan Operasional</strong>\r\n                </CardHeader>\r\n                <CardBody>\r\n\r\n                    <Box\r\n                        component=\"form\"\r\n                        onSubmit={handleSubmit}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            gap: 2,\r\n                            margin: 'auto',\r\n                            padding: 2,\r\n                        }}\r\n                    >\r\n                        <TextField\r\n                            label=\"Merek Kendaraan\"\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            value={brand}\r\n                            onChange={(e) => setBrand(e.target.value)}\r\n                            error={Boolean(errors.brand)}\r\n                            helperText={errors.brand}\r\n                            fullWidth\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Plat Kendaraan\"\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            value={plat}\r\n                            onChange={(e) => setPlat(e.target.value)}\r\n                            error={Boolean(errors.plat)}\r\n                            helperText={errors.plat}\r\n                            fullWidth\r\n                        />\r\n\r\n                        <FormControl fullWidth error={Boolean(errors.status)}>\r\n                            <InputLabel id=\"unit-kendaraan-label\">Status</InputLabel>\r\n                            <Select\r\n                                labelId=\"unit-kendaraan-label\"\r\n                                id=\"unit-kendaraan\"\r\n                                value={status}\r\n                                onChange={(e) => setStatus(e.target.value)}\r\n                                label=\"Unit Kendaraan\"\r\n                            >\r\n\r\n                                <MenuItem value=\"aktif\">\r\n                                    Aktif\r\n                                </MenuItem>\r\n                                <MenuItem value=\"non-aktif\">\r\n                                    Non-Aktif\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                            {errors.status && <Typography color=\"error\">{errors.status}</Typography>}\r\n                        </FormControl>\r\n\r\n\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                            Tambah Data Kendaraan\r\n                        </Button>\r\n                    </Box>\r\n\r\n                    <DataTable\r\n                        className=\"mt-3\"\r\n                        columns={columns}\r\n                        data={kendaraans}\r\n                        pagination\r\n                        highlightOnHover\r\n                        pointerOnHover\r\n                        striped\r\n                        responsive\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Setting;","import React, { useState } from \"react\";\r\nimport { TabContext, TabList, TabPanel } from '@mui/lab';\r\nimport Tab from '@mui/material/Tab';\r\nimport Badge from '@mui/material/Badge';\r\nimport { Card, CardBody, CardHeader } from 'reactstrap';\r\nimport CarUsage from \"./CarUsage\";\r\nimport Grafik from \"./Grafik\";\r\nimport AvailableCar from \"./AvailableCar\";\r\nimport PermintaanMobil from \"./PermintaanMobil\";\r\nimport TakeNBack from \"./TakeNBack\";\r\nimport PengisianBbm from \"./PengisianBbm\";\r\nimport Setting from \"./Setting\";\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst Mobil = () => {\r\n    const [value, setValue] = useState('1');\r\n    const { auth } = useAuth();\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const isPICMobil = auth?.user?.roles?.includes('PICMobil');\r\n\r\n    return (\r\n        <>\r\n            <TabContext value={value}>\r\n                <Card className=\"mb-1\">\r\n                    <TabList\r\n                        onChange={handleChange}\r\n                        aria-label=\"lab API tabs example\"\r\n                        vertical=\"sm\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        <Tab\r\n                            label={\r\n                                <Badge\r\n                                    badgeContent={0}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    color=\"primary\"\r\n                                >\r\n                                    <strong>DASHBOARD</strong> &nbsp;&nbsp;\r\n                                </Badge>\r\n                            }\r\n                            value=\"1\"\r\n                        />\r\n                        <Tab\r\n                            label={\r\n                                <Badge\r\n                                    badgeContent={0}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    color=\"primary\"\r\n                                >\r\n                                    <strong>BOOKING</strong> &nbsp;&nbsp;\r\n                                </Badge>\r\n                            }\r\n                            value=\"2\"\r\n                        />\r\n                        {isPICMobil && (\r\n                            <Tab\r\n                                label={\r\n                                    <Badge\r\n                                        badgeContent={0}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        <strong>PENGAMBILAN & PENGEMBALIAN</strong> &nbsp;&nbsp;\r\n                                    </Badge>\r\n                                }\r\n                                value=\"3\"\r\n                            />\r\n                        )}\r\n                        {isPICMobil && (\r\n                            <Tab\r\n                                label={\r\n                                    <Badge\r\n                                        badgeContent={0}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        <strong>PENGISIAN BBM</strong> &nbsp;&nbsp;\r\n                                    </Badge>\r\n                                }\r\n                                value=\"4\"\r\n                            />\r\n                        )}\r\n                        {isPICMobil && (\r\n                            <Tab\r\n                                label={\r\n                                    <Badge\r\n                                        badgeContent={0}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        <strong>SETTING</strong> &nbsp;&nbsp;\r\n                                    </Badge>\r\n                                }\r\n                                value=\"5\"\r\n                            />\r\n                        )}\r\n                    </TabList>\r\n                </Card>\r\n\r\n                <TabPanel value=\"1\" className=\"ps-0 pe-0\">\r\n                    {/* Grafik BBM */}\r\n                    <Card className=\"mt-4\">\r\n                        <CardBody>\r\n                            <Grafik />\r\n                        </CardBody>\r\n\r\n                    </Card>\r\n\r\n                    {/* Available Car */}\r\n                    <Card className=\"mt-4\">\r\n                        <CardHeader><strong>Mobil Operasional yang Tersedia</strong></CardHeader>\r\n                        <CardBody>\r\n                            <AvailableCar />\r\n                        </CardBody>\r\n                    </Card>\r\n\r\n                    {/* Table Car Usage */}\r\n                    <Card>\r\n                        <CardHeader><strong>Daftar Penggunaan Mobil</strong></CardHeader>\r\n                        <CardBody className=\"px-4\">\r\n                            <CarUsage />\r\n                        </CardBody>\r\n                    </Card>\r\n                </TabPanel>\r\n\r\n                <TabPanel value=\"2\" className=\"ps-0 pe-0\">\r\n                    <PermintaanMobil />\r\n                </TabPanel>\r\n\r\n                {isPICMobil && (\r\n                    <TabPanel value=\"3\" className=\"ps-0 pe-0\">\r\n                        <TakeNBack />\r\n                    </TabPanel>\r\n                )}\r\n\r\n                {isPICMobil && (\r\n                    <TabPanel value=\"4\" className=\"ps-0 pe-0\">\r\n                        <PengisianBbm />\r\n                    </TabPanel>\r\n                )}\r\n\r\n                {isPICMobil && (\r\n                    <TabPanel value=\"5\" className=\"ps-0 pe-0\">\r\n                        <Setting />\r\n                    </TabPanel>\r\n                )}\r\n            </TabContext>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Mobil;","import React from 'react';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport Mobil from './Mobil';\r\n\r\n\r\nconst Index = () => {\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <Mobil />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"names":["Toast","_jsx","Toaster","toastOptions","className","style","alert","type","msg","notify","toast","success","icon","error","BreadCrumbs","location","useLocation","firstUrl","pathname","split","secondUrl","_jsxs","_Fragment","children","concat","Breadcrumb","BreadcrumbItem","to","tag","Link","active","CarUsage","moment","items","id","group","title","start_time","end_time","bgColor","Timeline","groups","defaultTimeStart","add","defaultTimeEnd","headerLabelFormats","yearLong","yearShort","monthShort","monthMedium","monthLong","dayShort","dayLong","hourShort","hourMedium","hourLong","colorss","Grafik","state","React","series","data","options","chart","height","colors","plotOptions","bar","columnWidth","distributed","dataLabels","enabled","legend","show","xaxis","categories","labels","fontSize","selection","setSelection","useState","month","setMonth","year","setYear","startDate","setStartDate","endDate","setEndDate","RoundedSelect","styled","Select","borderRadius","backgroundColor","letterSpacing","border","Box","display","justifyContent","alignItems","fontWeight","color","value","onChange","event","target","displayEmpty","size","MenuItem","e","sx","mr","Array","from","length","_","i","TextField","label","InputLabelProps","shrink","ReactApexChart","carModels","name","sales","image","AvailableCar","carListRef","useRef","onClick","scrollLeft","current","ref","map","car","src","alt","scrollRight","ListPermintaan","forwardRef","props","api","useAxios","setData","auth","useAuth","fetchData","useCallback","_auth$user","_auth$user$roles","console","log","user","endpoint","roles","includes","get","then","response","formattedData","item","_objectSpread","displayMobil","brand","plat","catch","useEffect","useImperativeHandle","refreshData","columns","cell","row","_auth$user2","_auth$user2$roles","_auth$user3","_auth$user3$roles","Button","variant","post","handleApprove","marginRight","reason","confirmAlert","message","customUI","_ref","onClose","fullWidth","multiline","rows","marginTop","trim","ket","marginLeft","handleReject","disabled","status","handleDelete","buttons","ignoreRowClick","allowOverflow","button","width","selector","created_at","Date","toLocaleString","sortable","keperluan","mulai","hingga","sopir","DataTable","pagination","highlightOnHover","striped","PermintaanMobil","setKeperluan","dari","setDari","sampai","setSampai","perluSopir","setPerluSopir","listPermintaanRef","visible","setVisible","Card","CardBody","Alert","isOpen","toggle","onDismiss","fade","component","onSubmit","preventDefault","dayjs","format","m","flexDirection","margin","noValidate","autoComplete","required","LocalizationProvider","dateAdapter","AdapterDayjs","DateTimePicker","renderInput","params","ampm","viewRenderers","hours","renderTimeViewClock","minutes","paddingLeft","paddingRight","RadioGroup","FormControlLabel","control","Radio","TakeNBack","employe","setEmploye","employes","setEmployes","mobil","setMobil","book","setBook","nobook","setNobook","bookings","setBookings","mobils","setMobils","pengambilan","setPengambilan","getPengambilan","res","err","buttonStyle","padding","cursor","real_pengembalian","latestKm","last_km","handleDort","employe_name","taken_time","pengembalian","noDataComponent","textAlign","CardHeader","id_mobil","booked","employe_id","select","booking","created_by_name","unit","Autocomplete","disablePortal","newValue","inputValue","getOptionLabel","option","renderOption","key","otherProps","_objectWithoutProperties","_excluded","fixedHeader","fixedHeaderScrollHeight","PengisianBbm","unitMobil","setUnitMobil","jenisBbm","setJenisBbm","jumlahBiaya","setJumlahBiaya","tanggal","setTanggal","unitMobilOptions","setUnitMobilOptions","errors","setErrors","validationErrors","Number","isNaN","Object","keys","formattedTanggal","requestData","jenis_bbm","jumlah","w_pengisian","oleh","gap","FormControl","Boolean","InputLabel","labelId","Typography","ron","jenis","helperText","Setting","kendaraans","setKendaraans","setBrand","setPlat","setStatus","getKendaraan","index","Switch","checked","handleChange","st","del","async","pointerOnHover","responsive","Mobil","setValue","isPICMobil","TabContext","TabList","vertical","scrollButtons","Tab","Badge","badgeContent","anchorOrigin","horizontal","TabPanel","Index"],"sourceRoot":""}