{"version":3,"file":"static/js/5604.e9d92861.chunk.js","mappings":"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","sources":["pages/mobil/CarUsage.js","pages/mobil/Grafik.js","pages/mobil/AvailableCar.js","pages/mobil/ListPermintaan.js","pages/mobil/ListAfterReview.js","pages/mobil/PermintaanMobil.js","pages/mobil/TakeNBack.js","pages/mobil/ListBbm.js","pages/mobil/PengisianBbm.js","pages/mobil/Setting.js","pages/mobil/Mobil.js","pages/mobil/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Timeline from 'react-calendar-timeline';\r\n// make sure you include the timeline stylesheet or the timeline will not be styled\r\nimport './CarUsage.scss';\r\nimport moment from 'moment';\r\nimport \"moment/locale/id\";\r\nimport useAxios from '../../hooks/useAxios';\r\n\r\n\r\nconst CarUsage = () => {\r\n    moment.locale(\"id\");\r\n    const api = useAxios();\r\n    const [groups, setGroups] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        api.get('dapi/mobil/get')\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    const newGroups = response.data.data.map((car) => ({\r\n                        id: car.id,\r\n                        title: `${car.brand} ${car.plat}`\r\n                    }));\r\n                    setGroups(newGroups);\r\n                    console.log('Available cars:', newGroups);\r\n\r\n                    // Setelah groups sudah ada, baru get pengambilan-calendar\r\n                    api.get('dapi/mobil/pengambilan-calendar')\r\n                        .then((calendarResponse) => {\r\n                            if (calendarResponse.data.success) {\r\n                                // Buat mapping group title ke id\r\n                                const groupMap = {};\r\n                                newGroups.forEach(g => {\r\n                                    groupMap[g.title] = g.id;\r\n                                });\r\n\r\n                                const newItems = calendarResponse.data.data.map((item, idx) => {\r\n                                    let groupId = item.group || item.group_id;\r\n                                    if (!groupId && item.brand && item.plat) {\r\n                                        const key = `${item.brand} ${item.plat}`;\r\n                                        groupId = groupMap[key] || 1;\r\n                                    }\r\n                                    return {\r\n                                        id: item.id || idx + 1,\r\n                                        group: groupId || 1,\r\n                                        title: item.title || item.user || '-',\r\n                                        start_time: moment(item.start_time),\r\n                                        end_time: moment(item.end_time),\r\n                                        bgColor: item.bgColor || 'rgba(225, 166, 244, 0.6)'\r\n                                    };\r\n                                });\r\n                                setItems(newItems);\r\n\r\n                                console.log('Pengambilan calendar:', newItems);\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            console.error('Error fetching pengambilan calendar:', error);\r\n                        });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching available cars:', error);\r\n            });\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Timeline\r\n                groups={groups}\r\n                items={items}\r\n                defaultTimeStart={moment().add(0, 'day')}\r\n                defaultTimeEnd={moment().add(12, 'hour')}\r\n                // timeSteps={{ day: 1, hour: 1 }} // Mengatur langkah waktu \r\n                headerLabelFormats={{\r\n                    yearLong: \"YYYY\", // 2023\r\n                    yearShort: \"YY\", // 23\r\n                    monthShort: \"MMM YYYY\", // Sep 2023\r\n                    monthMedium: \"MMMM YYYY\", // September 2023\r\n                    monthLong: \"MMMM YYYY\", // September 2023\r\n                    dayShort: \"DD MMM\", // 14 Sep\r\n                    dayLong: \"dddd, DD MMM YYYY\", // Kamis, 14 Sep 2023\r\n                    hourShort: \"HH:mm\", // 16:34\r\n                    hourMedium: \"HH:mm\", // 16:34\r\n                    hourLong: \"HH:mm:ss\", // 16:34:11\r\n                }}\r\n                // itemTouchSendsClick={false}\r\n            >\r\n\r\n            </Timeline>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarUsage;\r\n","import React, { useState } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { Select, MenuItem, TextField, Box, styled } from '@mui/material';\r\nimport { Button } from 'reactstrap';\r\nimport useAxios from '../../hooks/useAxios'; // tambahkan import useAxios\r\n\r\n// import './Grafik.css'; // Import the CSS \r\n\r\nconst colorss = [];\r\n\r\nfunction getRandomColor() {\r\n    const letters = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\nfunction generateRandomColors(length) {\r\n    return Array.from({ length }, () => getRandomColor());\r\n}\r\n\r\nconst Grafik = () => {\r\n    const api = useAxios();\r\n    const currentYear = new Date().getFullYear();\r\n    const yearOptions = [currentYear - 2, currentYear - 1, currentYear];\r\n    const [state, setState] = useState({\r\n        series: [{\r\n            data: []\r\n        }],\r\n        options: {\r\n            chart: {\r\n                height: 350,\r\n                type: 'bar',\r\n            },\r\n            colors: colorss,\r\n            plotOptions: {\r\n                bar: {\r\n                    columnWidth: '45%',\r\n                    distributed: true,\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            xaxis: {\r\n                categories: [\r\n                ],\r\n                labels: {\r\n                    style: {\r\n                        colors: colorss,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    const [selection, setSelection] = useState('yearly');\r\n    const [month, setMonth] = useState('');\r\n    const [year, setYear] = useState(currentYear);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n\r\n    const handleSelectionChange = (event) => {\r\n        setSelection(event.target.value);\r\n        // Reset values when selection changes\r\n        setMonth('');\r\n        setYear(currentYear);\r\n        setStartDate('');\r\n        setEndDate('');\r\n    };\r\n\r\n    const RoundedSelect = styled(Select)({\r\n        borderRadius: \"17px\",\r\n        backgroundColor: \"white\",\r\n        letterSpacing: \"0.5px\",\r\n        border: \"none\",\r\n        \"& .MuiOutlinedInput-notchedOutline\": {\r\n            borderRadius: \"17px\",\r\n            border: \"none\",\r\n        },\r\n    });\r\n\r\n\r\n\r\n    // Fungsi untuk mendapatkan startDate dan endDate sesuai opsi\r\n    const getDateRange = () => {\r\n        if (selection === 'yearly' && year) {\r\n            return {\r\n                start: `${year}-01-01 00:00:00`,\r\n                end: `${year}-12-31 23:59:59`\r\n            };\r\n        }\r\n        if (selection === 'monthly' && year && month) {\r\n            const lastDay = new Date(year, month, 0).getDate();\r\n            return {\r\n                start: `${year}-${String(month).padStart(2, '0')}-01 00:00:00`,\r\n                end: `${year}-${String(month).padStart(2, '0')}-${lastDay} 23:59:59`\r\n            };\r\n        }\r\n        if (selection === 'custom' && startDate && endDate) {\r\n            return {\r\n                start: `${startDate} 00:00:00`,\r\n                end: `${endDate} 23:59:59`\r\n            };\r\n        }\r\n        // Default: tahun ini\r\n        return {\r\n            start: `${currentYear}-01-01 00:00:00`,\r\n            end: `${currentYear}-12-31 23:59:59`\r\n        };\r\n    };\r\n\r\n    const fetchData = () => {\r\n        const { start, end } = getDateRange();\r\n        api.get('dapi/mobil/bbm-laporan', {\r\n            params: {\r\n                startdate: start,\r\n                enddate: end\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.data.success) {\r\n                const categories = response.data.data.categories || [];\r\n                const data = response.data.data.data || [];\r\n                const randomColors = generateRandomColors(categories.length);\r\n                setState(prev => ({\r\n                    ...prev,\r\n                    series: [{\r\n                        data\r\n                    }],\r\n                    options: {\r\n                        ...prev.options,\r\n                        colors: randomColors,\r\n                        xaxis: {\r\n                            ...prev.options.xaxis,\r\n                            categories\r\n                        }\r\n                    }\r\n                }));\r\n            } else {\r\n                setState(prev => ({\r\n                    ...prev,\r\n                    series: [{ data: [] }],\r\n                    options: {\r\n                        ...prev.options,\r\n                        xaxis: {\r\n                            ...prev.options.xaxis,\r\n                            categories: []\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error fetching BBM data:', error);\r\n            setState(prev => ({\r\n                ...prev,\r\n                series: [{ data: [] }],\r\n                options: {\r\n                    ...prev.options,\r\n                    xaxis: {\r\n                        ...prev.options.xaxis,\r\n                        categories: []\r\n                    }\r\n                }\r\n            }));\r\n        });\r\n    };\r\n\r\n    // Fetch data tahun ini saat komponen mount\r\n    React.useEffect(() => {\r\n        const start = `${currentYear}-01-01 00:00:00`;\r\n        const end = `${currentYear}-12-31 23:59:59`;\r\n        api.get('dapi/mobil/bbm-laporan', {\r\n            params: {\r\n                startdate: start,\r\n                enddate: end\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.data.success) {\r\n                const categories = response.data.data.categories || [];\r\n                const data = response.data.data.data || [];\r\n                const randomColors = generateRandomColors(categories.length);\r\n                setState(prev => ({\r\n                    ...prev,\r\n                    series: [{\r\n                        data\r\n                    }],\r\n                    options: {\r\n                        ...prev.options,\r\n                        colors: randomColors,\r\n                        xaxis: {\r\n                            ...prev.options.xaxis,\r\n                            categories\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        })\r\n        .catch(() => {\r\n            setState(prev => ({\r\n                ...prev,\r\n                series: [{ data: [] }],\r\n                options: {\r\n                    ...prev.options,\r\n                    xaxis: {\r\n                        ...prev.options.xaxis,\r\n                        categories: []\r\n                    }\r\n                }\r\n            }));\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"chart-container\">\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                flexWrap=\"wrap\"\r\n                sx={{\r\n                    gap: 2,\r\n                    flexDirection: { xs: 'column', sm: 'row' },\r\n                    alignItems: { xs: 'stretch', sm: 'center' },\r\n                }}\r\n            >\r\n                <h4 style={{ fontWeight: 'bold', color: 'black', marginBottom: 8 }}>Grafik BBM Mobil Operasional</h4>\r\n\r\n                {/* Mulai Box filter & tombol */}\r\n                <Box\r\n                    sx={{\r\n                        borderRadius: 3,\r\n                        background: '#f8f9fa',\r\n                        boxShadow: '0 1px 6px rgba(60,60,60,0.07)',\r\n                        p: { xs: 1, sm: 1.5 },\r\n                        display: 'flex',\r\n                        flexDirection: { xs: 'column', sm: 'row' },\r\n                        alignItems: { xs: 'stretch', sm: 'center' },\r\n                        gap: 1,\r\n                        minWidth: { xs: 'unset', sm: 320 },\r\n                        width: { xs: '100%', sm: 'auto' },\r\n                        mb: { xs: 1, sm: 0 }\r\n                    }}\r\n                >\r\n                    <Box className=\"me-2\" sx={{ minWidth: 80, maxWidth: 120 }}>\r\n                        <RoundedSelect\r\n                            value={selection}\r\n                            onChange={handleSelectionChange}\r\n                            displayEmpty\r\n                            size=\"small\"\r\n                            fullWidth\r\n                            sx={{ fontSize: 13, height: 36 }}\r\n                        >\r\n                            <MenuItem value=\"monthly\" sx={{ fontSize: 13 }}>Bulanan</MenuItem>\r\n                            <MenuItem value=\"yearly\" sx={{ fontSize: 13 }}>Tahunan</MenuItem>\r\n                            <MenuItem value=\"custom\" sx={{ fontSize: 13 }}>Kustom</MenuItem>\r\n                        </RoundedSelect>\r\n                    </Box>\r\n\r\n                    {/* Bulanan */}\r\n                    {selection === 'monthly' && (\r\n                        <Box display=\"flex\" alignItems=\"center\" sx={{ gap: 1, flexWrap: 'wrap' }}>\r\n                            <RoundedSelect\r\n                                value={month}\r\n                                onChange={(e) => setMonth(e.target.value)}\r\n                                displayEmpty\r\n                                size=\"small\"\r\n                                sx={{ minWidth: 80, maxWidth: 110, fontSize: 13, height: 36 }}\r\n                                fullWidth\r\n                            >\r\n                                <MenuItem value=\"\" sx={{ fontSize: 13 }}><em>Pilih Bulan</em></MenuItem>\r\n                                {Array.from({ length: 12 }, (_, i) => (\r\n                                    <MenuItem key={i} value={i + 1} sx={{ fontSize: 13 }}>{`Bulan ${i + 1}`}</MenuItem>\r\n                                ))}\r\n                            </RoundedSelect>\r\n                            <RoundedSelect\r\n                                value={year}\r\n                                onChange={(e) => setYear(e.target.value)}\r\n                                displayEmpty\r\n                                size=\"small\"\r\n                                sx={{ minWidth: 80, maxWidth: 110, fontSize: 13, height: 36 }}\r\n                                fullWidth\r\n                            >\r\n                                <MenuItem value=\"\" sx={{ fontSize: 13 }}><em>Pilih Tahun</em></MenuItem>\r\n                                {yearOptions.map((y) => (\r\n                                    <MenuItem key={y} value={y} sx={{ fontSize: 13 }}>{y}</MenuItem>\r\n                                ))}\r\n                            </RoundedSelect>\r\n                        </Box>\r\n                    )}\r\n\r\n                    {/* Tahunan */}\r\n                    {selection === 'yearly' && (\r\n                        <Box sx={{ minWidth: 80, maxWidth: 110 }}>\r\n                            <RoundedSelect\r\n                                value={year}\r\n                                onChange={(e) => setYear(e.target.value)}\r\n                                displayEmpty\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                sx={{ fontSize: 13, height: 36 }}\r\n                            >\r\n                                <MenuItem value=\"\" sx={{ fontSize: 13 }}><em>Pilih Tahun</em></MenuItem>\r\n                                {yearOptions.map((y) => (\r\n                                    <MenuItem key={y} value={y} sx={{ fontSize: 13 }}>{y}</MenuItem>\r\n                                ))}\r\n                            </RoundedSelect>\r\n                        </Box>\r\n                    )}\r\n\r\n                    {/* Kustom */}\r\n                    {selection === 'custom' && (\r\n                        <Box display=\"flex\" alignItems=\"center\" sx={{ gap: 1, flexWrap: 'wrap' }}>\r\n                            <TextField\r\n                                label=\"Tanggal Mulai\"\r\n                                type=\"date\"\r\n                                value={startDate}\r\n                                onChange={(e) => setStartDate(e.target.value)}\r\n                                size=\"small\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                sx={{ minWidth: 110, maxWidth: 140, fontSize: 13, height: 36 }}\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                label=\"Tanggal Akhir\"\r\n                                type=\"date\"\r\n                                value={endDate}\r\n                                onChange={(e) => setEndDate(e.target.value)}\r\n                                size=\"small\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                sx={{ minWidth: 110, maxWidth: 140, fontSize: 13, height: 36 }}\r\n                                fullWidth\r\n                            />\r\n                        </Box>\r\n                    )}\r\n\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size='sm'\r\n                        style={{\r\n                            padding: '4px 12px',\r\n                            borderRadius: '17px',\r\n                            fontWeight: 'bold',\r\n                            marginTop: 2,\r\n                            fontSize: 13,\r\n                            height: 32,\r\n                            minWidth: 70\r\n                        }}\r\n                        onClick={fetchData}\r\n                    >\r\n                        Tampilkan\r\n                    </Button>\r\n                </Box>\r\n                {/* Selesai Box filter & tombol */}\r\n            </Box>\r\n\r\n            <ReactApexChart options={state.options} series={state.series} type=\"bar\" height={350} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Grafik;\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport './AvailableCar.css'; // Import CSS file\r\n\r\nconst AVANZA_IMAGE = 'https://www.seva.id/_next/image?url=https%3A%2F%2Fimages.prod.seva.id%2FToyota%2FAll%20New%20Avanza%2Fmain_color%2Fhitam.png&w=640&q=75';\r\nconst DEFAULT_IMAGE = 'https://agungtoyota.co.id/app/sam/assets/product_car_model/a1f5610604298e07d5b4b2c369555fda.png';\r\nconst SCOOPY_IMAGE = 'https://i.imgur.com/6N80uyd.png';\r\nconst FORTUNER_IMAGE='https://omnispace.blob.core.windows.net/strapi-prod/2022-09-19/TRAC_SUV_Car_Toyota_Fortuner_2_ffd7275fdf.png';\r\nconst ZENIX_IMAGE='https://www.kallatoyota.co.id/storage/images/thumbnail/car-types/1673314489-hybrid-20-v-hv-cvt-modelista.png';\r\n\r\nconst AvailableCar = () => {\r\n    const carListRef = useRef(null);\r\n    const api = useAxios();\r\n    const [carModels, setCarModels] = useState([]);\r\n\r\n    useEffect(() => {\r\n        api.get('dapi/mobil/available')\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    setCarModels(response.data.data);\r\n                    console.log('Available cars:', response.data.data);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching available cars:', error);\r\n            });\r\n    }, []);\r\n\r\n    const scrollLeft = () => {\r\n        carListRef.current.scrollLeft -= 300; // Adjust scroll amount as needed\r\n    };\r\n\r\n    const scrollRight = () => {\r\n        carListRef.current.scrollLeft += 300; // Adjust scroll amount as needed\r\n    };\r\n\r\n    return (\r\n        <div className=\"available-cars\">\r\n            <button type='button' className=\"arrow-button left-arrow\" onClick={scrollLeft}>&lt;</button>\r\n            <div className=\"car-list\" ref={carListRef}>\r\n                {carModels.map((car) => {\r\n                    const brand = car.brand ? car.brand.toLowerCase() : '';\r\n                    let image = DEFAULT_IMAGE;\r\n                    if (brand.includes('scoopy')) {\r\n                        image = SCOOPY_IMAGE;\r\n                    } else if (brand.includes('vanza')) {\r\n                        image = AVANZA_IMAGE;\r\n                    }else if (brand.includes('fourtuner')) {\r\n                        image = FORTUNER_IMAGE;\r\n                    }else if (brand.includes('zenix')) {\r\n                        image = ZENIX_IMAGE;\r\n                    }\r\n                    return (\r\n                        <div key={car.plat} className=\"car-card\">\r\n                            <img src={image} alt={car.name} className=\"car-image\" />\r\n                            <h4>{car.brand}</h4>\r\n                            <span>{car.plat}</span>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <button type='button' className=\"arrow-button right-arrow\" onClick={scrollRight}>&gt;</button>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default AvailableCar;\r\n","import React, { useState, useEffect, forwardRef, useImperativeHandle, useCallback } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import CSS for react-confirm-alert\r\nimport PropTypes from 'prop-types';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth'; // Import your authentication hook\r\n\r\nconst ListPermintaan = forwardRef((props, ref) => {\r\n  const api = useAxios();\r\n  const [data, setData] = useState([]);\r\n  // const { auth } = useAuth(); // Hapus jika tidak digunakan di bawah\r\n  const {auth} = useAuth(); // Gunakan langsung jika hanya butuh auth.user\r\n\r\n  // Tambahkan validasi props.afterReviewRef agar tidak ada warning\r\n  const afterReviewRef = props.afterReviewRef || null;\r\n\r\n  // Use useCallback to ensure fetchData is stable and doesn't cause unnecessary re-renders\r\n  const fetchData = useCallback(() => {\r\n    console.log(auth.user);\r\n    const endpoint = auth.user?.roles?.includes('PICMobil') \r\n        ? 'dapi/mobil/get-permintaan-all' \r\n        : 'dapi/mobil/get-permintaan';\r\n\r\n    api.get(endpoint)\r\n        .then((response) => {\r\n            const formattedData = response.data.data.map(item => ({\r\n                ...item,\r\n                displayMobil: `${item.brand} - ${item.plat}`, // Tambahkan tampilan brand - plat\r\n            }));\r\n            setData(formattedData);\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error fetching data:', error);\r\n        });\r\n  }, [auth.user, api]);\r\n\r\n  const handleDelete = (id, status) => {\r\n    if (status !== null) {\r\n      alert('error', 'Tidak bisa dihapus, permintaan sudah direview.');\r\n      return;\r\n    }\r\n\r\n    confirmAlert({\r\n      title: 'Konfirmasi Hapus',\r\n      message: 'Apakah Anda yakin ingin menghapus permintaan ini?',\r\n      buttons: [\r\n        {\r\n          label: 'Ya',\r\n          onClick: () => {\r\n            api.post(`dapi/mobil/delete-permintaan/${id}`)\r\n              .then(() => {\r\n                alert('success', 'Permintaan berhasil dihapus.');\r\n                fetchData(); // Refresh data after deletion\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error deleting data:', error);\r\n                alert('error', 'Terjadi kesalahan saat menghapus permintaan.');\r\n              });\r\n          },\r\n        },\r\n        {\r\n          label: 'Tidak',\r\n          onClick: () => {},\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const handleApprove = (id) => {\r\n    api.post(`dapi/mobil/approve-permintaan/${id}`)\r\n        .then(() => {\r\n            alert('success', 'Permintaan berhasil disetujui.');\r\n            fetchData(); // Refresh data after approval\r\n            if (afterReviewRef && afterReviewRef.current && afterReviewRef.current.refreshData) {\r\n                afterReviewRef.current.refreshData();\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error approving request:', error);\r\n            alert('error', 'Terjadi kesalahan saat menyetujui permintaan.');\r\n        });\r\n  };\r\n\r\n  const handleReject = (id) => {\r\n    let reason = '';\r\n\r\n    confirmAlert({\r\n        title: 'Konfirmasi Penolakan',\r\n        message: 'Masukkan alasan penolakan:',\r\n        customUI: ({ onClose }) => (\r\n            <div className=\"custom-ui\">\r\n                <h1>Konfirmasi Penolakan</h1>\r\n                <TextField\r\n                    label=\"Alasan Penolakan\"\r\n                    fullWidth\r\n                    multiline\r\n                    rows={3}\r\n                    onChange={(e) => {\r\n                        reason = e.target.value;\r\n                    }}\r\n                />\r\n                <div style={{ marginTop: '20px' }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                            if (!reason.trim()) {\r\n                                alert('error', 'Harap masukkan alasan penolakan.');\r\n                                return;\r\n                            }\r\n                            api.post(`dapi/mobil/reject-permintaan/${id}`, { ket:reason })\r\n                                .then(() => {\r\n                                    alert('success', 'Permintaan berhasil ditolak.');\r\n                                    fetchData(); // Refresh data after rejection\r\n                                    if (afterReviewRef && afterReviewRef.current && afterReviewRef.current.refreshData) {\r\n                                        afterReviewRef.current.refreshData();\r\n                                    }\r\n                                })\r\n                                .catch((error) => {\r\n                                    console.error('Error rejecting request:', error);\r\n                                    alert('error', 'Terjadi kesalahan saat menolak permintaan.');\r\n                                });\r\n                            onClose();\r\n                        }}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={onClose}\r\n                        style={{ marginLeft: '10px' }}\r\n                    >\r\n                        Batal\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        ),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(); // Fetch data only once when the component mounts\r\n  }, []);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    refreshData: fetchData, // Expose the fetchData method to the parent\r\n  }));\r\n\r\n  // Define the columns\r\n  const columns = [\r\n    {\r\n        name: 'Aksi',\r\n        cell: row => (\r\n            <>\r\n                {auth.user?.roles?.includes('PICMobil') && (\r\n                    <>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"success\"\r\n                            size=\"small\"\r\n                            onClick={() => handleApprove(row?.id)}\r\n                            style={{ marginRight: '5px' }}\r\n                        >\r\n                            Approve\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            size=\"small\"\r\n                            onClick={() => handleReject(row?.id)}\r\n                            style={{ marginRight: '5px' }}\r\n                        >\r\n                            Reject\r\n                        </Button>\r\n                    </>\r\n                )}\r\n                {!auth.user?.roles?.includes('PICMobil') && (\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"error\"\r\n                        size=\"small\"\r\n                        disabled={row?.status !== null}\r\n                        onClick={() => handleDelete(row?.id, row?.status)}\r\n                    >\r\n                        Hapus\r\n                    </Button>\r\n                )}\r\n            </>\r\n        ),\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width: '250px', // Luaskan kolom aksi\r\n    },\r\n    {\r\n        name: 'Tgl Pengajuan',\r\n        selector: row => row?.created_at ? new Date(row?.created_at).toLocaleString() : 'Unknown',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Keperluan',\r\n        selector: row => row?.keperluan,\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Mobil',\r\n        selector: row => row?.displayMobil || '-',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Dari',\r\n        selector: row => new Date(row?.mulai).toLocaleString(),\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Sampai',\r\n        selector: row => new Date(row?.hingga).toLocaleString(),\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Perlu Sopir',\r\n        selector: row => (row?.sopir === 1 ? 'Ya' : 'Tidak'),\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Status',\r\n        selector: row => {\r\n            if (row?.status === null) return 'Under Review';\r\n            if (row?.status === 0) return 'Reject';\r\n            if (row?.status === 1) return 'Approve';\r\n            return 'Unknown';\r\n        },\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Keterangan',\r\n        selector: row => row?.ket || '-',\r\n        sortable: false,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <DataTable\r\n      title=\"List Permintaan Kendaraan\"\r\n      columns={columns}\r\n      data={data}\r\n      pagination\r\n      highlightOnHover\r\n      striped\r\n    />\r\n  );\r\n});\r\n\r\nListPermintaan.propTypes = {\r\n  afterReviewRef: PropTypes.object, // Perbaiki propTypes agar sesuai warning\r\n};\r\n\r\nexport default ListPermintaan;\r\n","import React, { useEffect, useState } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport useAxios from '../../hooks/useAxios';\r\n\r\nconst ListAfterReview = React.forwardRef((props, ref) => {\r\n    const api = useAxios();\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchData = () => {\r\n        api.get('dapi/mobil/get-permintaan-after')\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    setData(response.data.data);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching after review data:', error);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Allow parent to trigger refresh\r\n    React.useImperativeHandle(ref, () => ({\r\n        refreshData: fetchData\r\n    }));\r\n\r\n    const columns = [\r\n        { name: 'Keperluan', selector: row => row.keperluan, sortable: true },\r\n        { name: 'Dibuat', selector: row => row.created_by_name, sortable: true },\r\n        { name: 'Dari', selector: row => new Date(row.mulai).toLocaleString(), sortable: true }, // Convert to local date-time string using toLocaleStringrow.mulai, sortable: true },\r\n        { name: 'Sampai', selector: row => new Date(row.hingga).toLocaleString(), sortable: true }, // Convert to local date-time string using toLocaleStringrow.hingga, sortable: true },\r\n        { name: 'Status', selector: row => row.status===1?'Disetujui':'Ditolak', sortable: true },\r\n        {name:'Direview',selector:row=>row.review_by_name,sortable:true},\r\n        {name:'Keterangan',selector:row=>row.ket,sortable:true},\r\n        // Tambahkan kolom lain sesuai kebutuhan\r\n    ];\r\n\r\n    return (\r\n        <DataTable\r\n            title=\"Permintaan Setelah Review\"\r\n            columns={columns}\r\n            data={data}\r\n            pagination\r\n            highlightOnHover\r\n            striped\r\n        />\r\n    );\r\n});\r\n\r\nexport default ListAfterReview;\r\n","import React, { useState, useRef } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Alert, Card, CardBody } from 'reactstrap';\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers';\r\nimport { Box, Button, RadioGroup, FormControlLabel, Radio } from '@mui/material';\r\nimport dayjs from 'dayjs'; // Import dayjs for date formatting\r\nimport { alert } from '../../components/atoms/Toast';\r\n// import useAuth from '../../hooks/useAuth'; // Import your authentication hook\r\nimport useAxios from '../../hooks/useAxios';\r\nimport ListPermintaan from './ListPermintaan';\r\nimport ListAfterReview from './ListAfterReview';\r\n\r\nconst PermintaanMobil = () => {\r\n    // const { auth } = useAuth(); // Assuming you have a custom hook for authentication\r\n    const api = useAxios();\r\n    const [keperluan, setKeperluan] = useState('');\r\n    const [dari, setDari] = useState(null);\r\n    const [sampai, setSampai] = useState(null);\r\n    const [perluSopir, setPerluSopir] = useState(0);\r\n    const listPermintaanRef = useRef(null);\r\n    const listAfterReviewRef = useRef(null);\r\n\r\n    // alert\r\n    const [visible, setVisible] = React.useState(true);\r\n    const onDismiss = () => setVisible(false);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!keperluan || !dari || !sampai) {\r\n            alert('error', 'Harap isi semua field sebelum mengajukan permintaan.');\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            keperluan,\r\n            dari: dari ? dayjs(dari).format('YYYY-MM-DD HH:mm:ss') : null, // Format to MySQL datetime\r\n            sampai: sampai ? dayjs(sampai).format('YYYY-MM-DD HH:mm:ss') : null, // Format to MySQL datetime\r\n            perluSopir,\r\n        };\r\n\r\n        api.post('dapi/mobil/insert-permintaan', data)\r\n            .then((response) => {\r\n                console.log('Data submitted successfully:', response.data);\r\n                alert('success', 'Permintaan berhasil diajukan!');\r\n                setKeperluan(''); // Clear keperluan\r\n                setDari(null); // Clear dari\r\n                setSampai(null); // Clear sampai\r\n                setPerluSopir(0); // Reset perluSopir to default\r\n                if (listPermintaanRef.current) {\r\n                    listPermintaanRef.current.refreshData(); // Trigger data refresh\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error submitting data:', error);\r\n                alert('error','Terjadi kesalahan saat mengajukan permintaan.');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardBody>\r\n                    <Alert color=\"info\" isOpen={visible} toggle={onDismiss} fade={false}>\r\n                        Permintaan Mobil Minimal 1 Jam sebelum pemakaian\r\n                    </Alert>\r\n\r\n                    <Box\r\n                        component=\"form\"\r\n                        onSubmit={handleSubmit}\r\n                        sx={{\r\n                            '& .MuiTextField-root': { m: 1, width: '100%' },\r\n                            '& .MuiAutocomplete-root': { m: 1, width: '100%' },\r\n                            '& .MuiButton-root': { m: 1, width: '100%' },\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            width: '100%',\r\n                            margin: 'auto',\r\n                        }}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <TextField\r\n                            required\r\n                            id=\"keperluan\"\r\n                            label=\"Keperluan\"\r\n                            variant=\"outlined\"\r\n                            value={keperluan}\r\n                            onChange={(event) => setKeperluan(event.target.value)}\r\n                        />\r\n                        \r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                            <DateTimePicker\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                                label=\"Dari\"\r\n                                ampm={false}\r\n                                value={dari}\r\n                                onChange={setDari}\r\n                                viewRenderers={{\r\n                                    hours: renderTimeViewClock,\r\n                                    minutes: renderTimeViewClock,\r\n                                }}\r\n                            />\r\n                            <DateTimePicker\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                                label=\"Sampai\"\r\n                                ampm={false}\r\n                                value={sampai}\r\n                                onChange={setSampai}\r\n                                viewRenderers={{\r\n                                    hours: renderTimeViewClock,\r\n                                    minutes: renderTimeViewClock,\r\n                                }}\r\n                            />\r\n                        </LocalizationProvider>\r\n\r\n                        <Box\r\n                            sx={{\r\n                                '& .MuiFormLabel-root': { m: 1, width: '100%' },\r\n                                '& .MuiRadioGroup-root': { m: 1, width: '100%' },\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                border: '1px solid #ccc',\r\n                                borderRadius: '4px',\r\n                                paddingLeft: '20px',\r\n                                paddingRight: '20px',\r\n                                width: '100%',\r\n                                margin: 'auto',\r\n                                marginTop: '8px',\r\n                            }}\r\n                        >\r\n                            <RadioGroup\r\n                                row\r\n                                value={perluSopir}\r\n                                onChange={(event) => setPerluSopir(event.target.value)}\r\n                                sx={{\r\n                                    justifyContent: 'space-between',\r\n                                    width: '100%',\r\n                                }}\r\n                            >\r\n                                <FormControlLabel value=\"1\" control={<Radio />} label=\"Memerlukan Sopir\" />\r\n                                <FormControlLabel value=\"0\" control={<Radio />} label=\"Tidak Memerlukan Sopir\" />\r\n                            </RadioGroup>\r\n                        </Box>\r\n\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size='large'>\r\n                            Submit Pemintaan\r\n                        </Button>\r\n                    </Box>\r\n                </CardBody>\r\n            </Card>\r\n\r\n            \r\n\r\n            <Card>\r\n                <CardBody>\r\n                    <ListPermintaan ref={listPermintaanRef} afterReviewRef={listAfterReviewRef} />\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <Card>\r\n                <CardBody>\r\n                    <ListAfterReview ref={listAfterReviewRef} />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PermintaanMobil;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardBody, CardHeader, Alert } from \"reactstrap\";\r\nimport { Box, TextField, Autocomplete, Button, MenuItem } from \"@mui/material\";\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers';\r\nimport DataTable from 'react-data-table-component';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs'; // Import dayjs untuk date formatting\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport useAxios from \"../../hooks/useAxios\";\r\nimport { alert } from '../../components/atoms/Toast'; // Import alert\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Tambahkan CSS untuk react-confirm-alert\r\n\r\nconst TakeNBack = () => {\r\n    const api = useAxios();\r\n    const [employe, setEmploye] = useState(null);\r\n    const [employes, setEmployes] = useState([]);\r\n    const [sampai, setSampai] = useState(null);\r\n    const [mobil, setMobil] = useState('');\r\n    const [book, setBook] = useState('booking');\r\n    const [nobook, setNobook] = useState('');\r\n    const [keperluan, setKeperluan] = useState('');\r\n    const [bookings, setBookings] = useState([]); // State untuk booking data\r\n    const [mobils, setMobils] = useState([]); // State untuk mobil data\r\n    const [pengambilan, setPengambilan] = useState([]); // State untuk data pengambilan\r\n\r\n    const getKaryawan = () => {\r\n        api.get('api/employe/assignment-list?search=all').then(res => {\r\n            setEmployes(res.data.data);\r\n            console.log(res.data.data);\r\n        });\r\n    };\r\n\r\n    const getBookings = () => {\r\n        api.get('dapi/mobil/get-permintaan-by-status').then(res => {\r\n            if (res.data.success) {\r\n                console.log(res);\r\n                setBookings(res.data.data);\r\n            }\r\n        }).catch(err => {\r\n            console.error('Error fetching bookings:', err);\r\n        });\r\n    };\r\n\r\n    const getMobils = () => {\r\n        api.get('dapi/mobil/get').then(res => {\r\n            if (res.data.success) {\r\n                setMobils(res.data.data);\r\n            }\r\n        }).catch(err => {\r\n            console.error('Error fetching mobils:', err);\r\n        });\r\n    };\r\n\r\n    const getPengambilan = () => {\r\n        api.get('dapi/mobil/get-pengambilan').then(res => {\r\n            if (res.data.success) {\r\n                setPengambilan(res.data.data);\r\n            }\r\n        }).catch(err => {\r\n            console.error('Error fetching pengambilan:', err);\r\n        });\r\n    };\r\n\r\n    const handleSave = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (book === 'booking' && (!mobil )) {\r\n            alert('error', 'Harap isi semua field (Mobil dan Perkiraan Pengembalian) sebelum menyimpan.');\r\n            return;\r\n        }\r\n\r\n        if (book !== 'booking' && (!mobil || !employe || !keperluan || !sampai)) {\r\n            alert('error', 'Harap isi semua field sebelum menyimpan.');\r\n            return;\r\n        }\r\nconsole.log(employe)\r\n        const data = {\r\n            id_mobil: mobil,\r\n            booked: book === 'booking' ? nobook : null,\r\n            employe_id: book !== 'booking' ? employe?.value : null,\r\n            keperluan: book !== 'booking' ? keperluan : null,\r\n            sampai: dayjs(sampai).format('YYYY-MM-DD HH:mm:ss'),\r\n            book, // Include Booking/No Booking in the data\r\n        };\r\n\r\n        api.post('dapi/mobil/insert-pengambilan', data)\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    alert('success', 'Data pengambilan berhasil disimpan.');\r\n                    setMobil('');\r\n                    setNobook('');\r\n                    setEmploye(null);\r\n                    setKeperluan('');\r\n                    setSampai(null);\r\n                    setBook('booking'); // Reset Booking/No Booking to default\r\n                } else {\r\n                    alert('error', 'Gagal menyimpan data pengambilan.');\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error saving data:', error);\r\n                alert('error', 'Terjadi kesalahan saat menyimpan data.');\r\n            });\r\n    };\r\n\r\n    // Fungsi untuk menangani pengembalian\r\n    const handleDort = (id) => {\r\n        let latestKm = null;\r\n\r\n        confirmAlert({\r\n            title: \"Konfirmasi Pengembalian\",\r\n            message: \"Cek apakah kilometer dan minyak sesuai?\",\r\n            customUI: ({ onClose }) => (\r\n                <div className=\"custom-ui\">\r\n                    <h1>Konfirmasi Pengembalian</h1>\r\n                    <p>Cek apakah kilometer dan minyak sesuai?</p>\r\n                    <TextField\r\n                        label=\"Kilometer Terakhir\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        onChange={(e) => {\r\n                            latestKm = e.target.value; // Pisahkan assignment\r\n                        }}\r\n                    />\r\n                    <div style={{ marginTop: \"20px\" }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                                if (!latestKm) {\r\n                                    alert('error', 'Harap masukkan kilometer terbaru.');\r\n                                    return;\r\n                                }\r\n                                api.post(`dapi/mobil/pengembalian/${id}`, { last_km: latestKm })\r\n                                    .then((response) => {\r\n                                        if (response.data.success) {\r\n                                            alert('success', 'Mobil berhasil dikembalikan.');\r\n                                            getPengambilan(); // Refresh data pengambilan\r\n                                        } else {\r\n                                            alert('error', 'Gagal mengembalikan mobil.');\r\n                                        }\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        console.error('Error during return:', error);\r\n                                        alert('error', 'Terjadi kesalahan saat mengembalikan mobil.');\r\n                                    });\r\n                                onClose();\r\n                            }}\r\n                        >\r\n                            Ya\r\n                        </Button>\r\n                        <Button variant=\"outlined\" color=\"secondary\" onClick={onClose} style={{ marginLeft: \"10px\" }}>\r\n                            Tidak\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            ),\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getKaryawan();\r\n        getBookings();\r\n        getMobils();\r\n        getPengambilan(); // Panggil fetch pengambilan di useEffect\r\n    }, []);\r\n\r\n\r\n    // Gaya tombol\r\n    const buttonStyle = {\r\n        padding: '5px 10px',\r\n        backgroundColor: '#007BFF',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n    };\r\n\r\n    // Kolom tabel\r\n    const columns = [\r\n        {\r\n            name: 'Pengembalian',\r\n            cell: row => (\r\n                row.real_pengembalian \r\n                    ? <span>{dayjs(row.real_pengembalian).format('YYYY-MM-DD HH:mm')}</span> \r\n                    : <button \r\n                        type=\"button\" \r\n                        style={buttonStyle} \r\n                        onClick={() => handleDort(row.id)}>Pengembalian</button>\r\n            ),\r\n            width: '150px',\r\n            button: true,\r\n            sortable: false,\r\n        },\r\n        {\r\n            name: 'Nama Karyawan',\r\n            selector: row => row.employe_name || row.employe_name,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Pengambilan',\r\n            selector: row => row.taken_time || row.taken_time,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Perjanjian Pengembalian',\r\n            selector: row => row.pengembalian || row.pengembalian,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Nama Mobil',\r\n            selector: row => `${row.brand} - ${row.plat}`, // Gunakan template literals\r\n            sortable: true,\r\n        },\r\n    ];\r\n\r\n    // Pesan ketika data kosong\r\n    const noDataComponent = <div style={{ textAlign: 'center', padding: '20px' }}>Tidak ada data yang tersedia.</div>;\r\n\r\n    const [visible, setVisible] = React.useState(true);\r\n    const onDismiss = () => setVisible(false);\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* pengambilan Mobil */}\r\n            <Card>\r\n                <CardHeader><strong>Pengambilan Mobil</strong></CardHeader>\r\n                <CardBody>\r\n                    <Alert color=\"info\" isOpen={visible} toggle={onDismiss} fade={false}>\r\n                        Utamakan yang telah melakukan booking terlebih dahulu\r\n                    </Alert>\r\n                    <Box\r\n                        component=\"form\"\r\n                        sx={{\r\n                            '& .MuiTextField-root': { m: 1, width: '100%' },\r\n                            '& .MuiAutocomplete-root': { m: 1, width: '100%' },\r\n                            '& .MuiButton-root': { m: 1, width: '100%' },\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            width: '100%',\r\n                            margin: 'auto',\r\n                        }}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                        onSubmit={handleSave}\r\n                    >\r\n\r\n                        <TextField\r\n                            style={{ width: '100%' }}\r\n                            variant=\"outlined\"\r\n                            value={book}\r\n                            onChange={(e) => setBook(e.target.value)}\r\n                            select\r\n                            label=\"Booking / No Booking\"\r\n                        >\r\n                            <MenuItem value=\"booking\">\r\n                                Booking\r\n                            </MenuItem>\r\n                            <MenuItem value=\"no-booking\">\r\n                                No Booking\r\n                            </MenuItem>\r\n\r\n                        </TextField>\r\n\r\n                        {book === 'booking' && (\r\n                            <>\r\n                                <TextField\r\n                                    style={{ width: '100%' }}\r\n                                    variant=\"outlined\"\r\n                                    value={nobook}\r\n                                    onChange={(e) => setNobook(e.target.value)}\r\n                                    select\r\n                                    label=\"Nomor Booking\"\r\n                                >\r\n                                    {bookings.map((booking) => (\r\n                                        <MenuItem key={booking.id} value={booking.id}>\r\n                                            {`${booking.created_by_name} - ${dayjs(booking.mulai).format('YYYY-MM-DD HH:mm')} s/d ${dayjs(booking.hingga).format('YYYY-MM-DD HH:mm')}`}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n\r\n                                <TextField\r\n                                    style={{ width: '100%' }}\r\n                                    variant=\"outlined\"\r\n                                    value={mobil}\r\n                                    onChange={(e) => setMobil(e.target.value)}\r\n                                    select\r\n                                    label=\"Unit Mobil\"\r\n                                >\r\n                                    {mobils.map((unit) => (\r\n                                        <MenuItem key={unit.id} value={unit.id}>\r\n                                            {`${unit.brand} - ${unit.plat}`}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </>\r\n                        )}\r\n\r\n                        {book !== 'booking' && (<><TextField\r\n                            style={{ width: '100%' }}\r\n                            variant=\"outlined\"\r\n                            value={mobil}\r\n                            onChange={(e) => setMobil(e.target.value)}\r\n                            select\r\n                            label=\"Unit Mobil\"\r\n                        >\r\n                            {mobils.map((unit) => (\r\n                                <MenuItem key={unit.id} value={unit.id}>\r\n                                    {`${unit.brand} - ${unit.plat}`}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n\r\n                            {employes.length > 0 && (\r\n                                <Autocomplete\r\n                                    style={{ marginLeft: -10 }}\r\n                                    disablePortal\r\n                                    id=\"combo-box-demo\"\r\n                                    options={employes || []}\r\n                                    value={employe}\r\n                                    onChange={(event, newValue) => {\r\n                                        if (typeof newValue === 'string') {\r\n                                            setEmploye({\r\n                                                label: newValue,\r\n                                            });\r\n                                        } else if (newValue && newValue.inputValue) {\r\n                                            setEmploye({\r\n                                                label: newValue.inputValue,\r\n                                            });\r\n                                        } else {\r\n                                            setEmploye(newValue);\r\n                                        }\r\n                                    }}\r\n                                    getOptionLabel={(option) => {\r\n                                        if (typeof option === 'string') {\r\n                                            return option;\r\n                                        }\r\n                                        if (option.inputValue) {\r\n                                            return option.inputValue;\r\n                                        }\r\n                                        return option.label;\r\n                                    }}\r\n                                    renderOption={(props, option) => {\r\n                                        const { key, ...otherProps } = props;\r\n                                        return <li key={key} {...otherProps}>{option.label}</li>;\r\n                                    }}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Nama Karyawan\" />}\r\n                                />\r\n                            )}\r\n\r\n                            <TextField\r\n                                required\r\n                                id=\"keperluan\"\r\n                                label=\"Keperluan\"\r\n                                variant=\"outlined\"\r\n                                value={keperluan}\r\n                                onChange={(event) => setKeperluan(event.target.value)}\r\n                            />\r\n\r\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                <DateTimePicker\r\n                                    renderInput={(params) => <TextField {...params} />}\r\n                                    label=\"Perkiraan Pengembalian\"\r\n                                    ampm={false}\r\n                                    value={sampai}\r\n                                    onChange={setSampai}\r\n                                    viewRenderers={{\r\n                                        hours: renderTimeViewClock,\r\n                                        minutes: renderTimeViewClock,\r\n                                    }}\r\n                                />\r\n                            </LocalizationProvider>\r\n                        </>)}\r\n\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size='large'>\r\n                            Simpan\r\n                        </Button>\r\n                    </Box>\r\n                </CardBody>\r\n            </Card>\r\n\r\n            {/* pengembalian Mobil */}\r\n            <Card>\r\n                <CardHeader><strong>Pengembalian Mobil</strong></CardHeader>\r\n                <CardBody>\r\n                    <DataTable\r\n                        columns={columns}\r\n                        data={pengambilan} // Ganti data dummy dengan data dari API\r\n                        noDataComponent={noDataComponent}\r\n                        pagination\r\n                        fixedHeader\r\n                        sortable\r\n                        fixedHeaderScrollHeight=\"300px\"\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    )\r\n};\r\nTakeNBack.propTypes = {\r\n    key: PropTypes.string,\r\n};\r\n\r\nexport default TakeNBack;","import React, { useState, useEffect } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport useAxios from '../../hooks/useAxios';\r\n\r\nconst ListBbm = () => {\r\n    const api = useAxios();\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchData = () => {\r\n        api.get('dapi/mobil/get-bbm')\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    console.log( response.data.data);\r\n                    setData(response.data.data);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching BBM data:', error);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Unit Kendaraan',\r\n            selector: row => `${row.name}`,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Jenis BBM',\r\n            selector: row => row.jenis_bbm,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Jumlah Biaya (Rp)',\r\n            selector: row => row.jumlah,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Tanggal Pengisian',\r\n            selector: row => row.w_pengisian,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Pengisian Oleh',\r\n            selector: row => row.oleh_name,\r\n            sortable: true,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <DataTable\r\n            title=\"Daftar Pengisian BBM\"\r\n            columns={columns}\r\n            data={data}\r\n            pagination\r\n            highlightOnHover\r\n            striped\r\n        />\r\n    );\r\n};\r\n\r\nexport default ListBbm;\r\n","// Import necessary React and MUI components\r\nimport React, { useState, useEffect } from 'react';\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    Typography,\r\n} from '@mui/material';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs'; // Tambahkan import untuk dayjs\r\nimport { alert } from '../../components/atoms/Toast'; \r\nimport useAxios from '../../hooks/useAxios';\r\nimport ListBbm from './ListBbm'; // Import ListBbm\r\n\r\n// Define the PengisianBbm functional component\r\nconst PengisianBbm = () => {\r\n    // State hooks for form fields\r\n    const api = useAxios();\r\n    const [unitMobil, setUnitMobil] = useState('');\r\n    const [jenisBbm, setJenisBbm] = useState('');\r\n    const [jumlahBiaya, setJumlahBiaya] = useState('');\r\n    const [tanggal, setTanggal] = useState(null);\r\n    const [employe, setEmploye] = useState(null);\r\n    const [employes, setEmployes] = useState([]);\r\n    const [unitMobilOptions, setUnitMobilOptions] = useState([]); // State untuk unit mobil\r\n    const [bbmRefreshKey, setBbmRefreshKey] = useState(0); // Tambahkan state untuk trigger refresh ListBbm\r\n\r\n    // State hook for form validation\r\n    const [errors, setErrors] = useState({});\r\n\r\n    // Options for Jenis BBM dropdown with RON and jenis in lowercase\r\n    const jenisBbmOptions = [\r\n        { label: 'Solar (CN 48)', value: 'bio_solar', ron: '48', jenis: 'diesel' },\r\n        { label: 'Dexlite (CN 51)', value: 'dexlite', ron: '51', jenis: 'diesel' },\r\n        { label: 'Pertalite (RON 90)', value: 'pertalite', ron: '90', jenis: 'bensin' },\r\n        { label: 'Pertamax (RON 92)', value: 'pertamax', ron: '92', jenis: 'bensin' },\r\n        { label: 'Pertamax Green (RON 95)', value: 'pertamax_green', ron: '95', jenis: 'bensin' },\r\n        { label: 'Pertamax Turbo (RON 98)', value: 'pertamax_turbo', ron: '98', jenis: 'bensin' },\r\n        { label: 'Dex (CN 53)', value: 'dex', ron: '53', jenis: 'diesel' },\r\n    ];\r\n\r\n    // Function to handle form submission\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Basic validation\r\n        const validationErrors = {};\r\n        if (!unitMobil) validationErrors.unitMobil = 'Unit Mobil is required';\r\n        if (!jenisBbm) validationErrors.jenisBbm = 'Jenis BBM is required';\r\n        if (!jumlahBiaya || Number.isNaN(Number(jumlahBiaya)) || Number(jumlahBiaya) <= 0) {\r\n            validationErrors.jumlahBiaya = 'Jumlah Biaya must be a positive number';\r\n        }\r\n        if (!tanggal) validationErrors.tanggal = 'Tanggal Pengisian is required';\r\n        if (!employe) validationErrors.employe = 'Pengisian oleh is required';\r\n\r\n        // If there are validation errors, set them and return\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            setErrors(validationErrors);\r\n            return;\r\n        }\r\n\r\n        // Format tanggal sesuai MySQL datetime format\r\n        const formattedTanggal = dayjs(tanggal).format('YYYY-MM-DD HH:mm:ss');\r\n\r\n        // Prepare data for submission\r\n        const requestData = {\r\n            id_mobil: unitMobil,\r\n            jenis_bbm: jenisBbm,\r\n            jumlah: jumlahBiaya,\r\n            w_pengisian: formattedTanggal, // Gunakan format MySQL\r\n            oleh: employe?.value,\r\n        };\r\n\r\n        // Submit data to backend\r\n        api.post('dapi/mobil/insert-bbm', requestData)\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    alert('success', 'Data pengisian BBM berhasil disimpan.');\r\n                    // Reset form fields\r\n                    setUnitMobil('');\r\n                    setJenisBbm('');\r\n                    setJumlahBiaya('');\r\n                    setTanggal(null);\r\n                    setEmploye(null);\r\n                    setErrors({});\r\n                    setBbmRefreshKey(prev => prev + 1); // Trigger refresh ListBbm\r\n                } else {\r\n                    alert('error', 'Gagal menyimpan data pengisian BBM.');\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error submitting data:', error);\r\n                alert('error', 'Terjadi kesalahan saat menyimpan data pengisian BBM.');\r\n            });\r\n    };\r\n\r\n    const getKaryawan = () => {\r\n        api.get('api/employe/assignment-list?search=all').then(res => {\r\n            setEmployes(res.data.data);\r\n            console.log(res.data.data)\r\n        })\r\n    }\r\n\r\n    const getUnitMobil = () => {\r\n        api.get('dapi/mobil/get').then(res => {\r\n            if (res.data.success) {\r\n                const options = res.data.data.map(unit => ({\r\n                    value: unit.id, // Gunakan id sebagai value\r\n                    label: `${unit.brand} - ${unit.plat}`, // Tampilkan brand - plat\r\n                }));\r\n                setUnitMobilOptions(options);\r\n            }\r\n        }).catch(err => {\r\n            console.error('Error fetching unit mobil:', err);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getKaryawan();\r\n        getUnitMobil(); // Panggil API untuk unit mobil\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <Box\r\n                    component=\"form\"\r\n                    onSubmit={handleSubmit}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                    sx={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        gap: 2,\r\n                        margin: 'auto',\r\n                        padding: 2,\r\n                    }}\r\n                >\r\n\r\n\r\n                    {/* Unit Mobil Dropdown */}\r\n                    <FormControl fullWidth error={Boolean(errors.unitMobil)}>\r\n                        <InputLabel id=\"unit-mobil-label\">Unit Kendaraan</InputLabel>\r\n                        <Select\r\n                            labelId=\"unit-mobil-label\"\r\n                            id=\"unit-mobil\"\r\n                            value={unitMobil}\r\n                            onChange={(e) => setUnitMobil(e.target.value)}\r\n                            label=\"Unit Kendaraan\"\r\n                        >\r\n                            {unitMobilOptions.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        {errors.unitMobil && <Typography color=\"error\">{errors.unitMobil}</Typography>}\r\n                    </FormControl>\r\n\r\n                    {/* Jenis BBM Dropdown */}\r\n                    <FormControl fullWidth error={Boolean(errors.jenisBbm)}>\r\n                        <InputLabel id=\"jenis-bbm-label\">Jenis BBM</InputLabel>\r\n                        <Select\r\n                            labelId=\"jenis-bbm-label\"\r\n                            id=\"jenis-bbm\"\r\n                            value={jenisBbm}\r\n                            onChange={(e) => setJenisBbm(e.target.value)}\r\n                            label=\"Jenis BBM\"\r\n                        >\r\n                            {jenisBbmOptions.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        {errors.jenisBbm && <Typography color=\"error\">{errors.jenisBbm}</Typography>}\r\n                    </FormControl>\r\n\r\n                    {/* Jumlah Biaya Numeric Input */}\r\n                    <TextField\r\n                        label=\"Jumlah Biaya (Rp)\"\r\n                        variant=\"outlined\"\r\n                        type=\"number\"\r\n                        value={jumlahBiaya}\r\n                        onChange={(e) => setJumlahBiaya(e.target.value)}\r\n                        error={Boolean(errors.jumlahBiaya)}\r\n                        helperText={errors.jumlahBiaya}\r\n                        fullWidth\r\n                    />\r\n\r\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                        <DateTimePicker\r\n                            renderInput={(params) => <TextField {...params} />}\r\n                            label=\"Tgl Pengisian\"\r\n                            ampm={false}\r\n                            value={tanggal}\r\n                            onChange={setTanggal}\r\n                            viewRenderers={{\r\n                                hours: renderTimeViewClock,\r\n                                minutes: renderTimeViewClock,\r\n                            }}\r\n                        />\r\n                    </LocalizationProvider>\r\n\r\n                    {employes.length > 0 && (\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            options={employes || []}\r\n                            value={employe}\r\n                            onChange={(event, newValue) => {\r\n                                if (typeof newValue === 'string') {\r\n                                    setEmploye({\r\n                                        label: newValue,\r\n                                    });\r\n                                } else if (newValue && newValue.inputValue) {\r\n                                    setEmploye({\r\n                                        label: newValue.inputValue,\r\n                                    });\r\n                                } else {\r\n                                    setEmploye(newValue);\r\n                                }\r\n                            }}\r\n                            getOptionLabel={(option) => {\r\n                                if (typeof option === 'string') {\r\n                                    return option;\r\n                                }\r\n                                if (option.inputValue) {\r\n                                    return option.inputValue;\r\n                                }\r\n                                return option.label;\r\n                            }}\r\n                            renderOption={(props, option) => {\r\n                                const { key, ...otherProps } = props;\r\n                                return <li key={key} {...otherProps}>{option.label}</li>;\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Pengisian oleh\" />}\r\n                        />\r\n                    )}\r\n                    {/* Submit Button */}\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </Box>\r\n\r\n                {/* List BBM */}\r\n                <Box mt={4}>\r\n                    <ListBbm key={bbmRefreshKey} />\r\n                </Box>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nPengisianBbm.propTypes = {\r\n    key: PropTypes.string,\r\n    // Add other props if necessary\r\n};\r\n\r\nexport default PengisianBbm;\r\n","import React, { useState } from \"react\";\r\nimport { Card, CardBody, CardHeader } from \"reactstrap\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { TextField, Box, Button, MenuItem, Typography, FormControl, InputLabel, Select } from \"@mui/material\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import CSS for react-confirm-alert\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport useAxios from \"../../hooks/useAxios\";\r\n\r\n\r\n\r\nconst Setting = () => {\r\n\r\n    const api = useAxios();\r\n\r\n    const [kendaraans, setKendaraans] = useState([]);\r\n\r\n    const [brand, setBrand] = React.useState(\"\");\r\n    const [plat, setPlat] = React.useState(\"\");\r\n    const [status, setStatus] = React.useState(\"\");\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const getKendaraan = () => {\r\n        api.get('dapi/mobil/get').then(res => {\r\n            if (res.data.success) {\r\n                setKendaraans(res.data.data);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const validationErrors = {};\r\n        if (!brand) validationErrors.brand = 'Brand Kendaraan is required';\r\n        if (!plat) validationErrors.plat = 'Plat Kendaraan is required';\r\n        if (!status) validationErrors.status = 'Status Kendaraan is required';\r\n\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            setErrors(validationErrors);\r\n            return;\r\n        }\r\n\r\n        await api.post('dapi/mobil/insert', { brand, plat, status }).then(res => {\r\n            if (res.data.success) {\r\n                alert('success', 'Data berhasil disimpan');\r\n                setBrand('');\r\n                setPlat('');\r\n                setStatus('');\r\n                getKendaraan();\r\n            } else {\r\n                alert('error', 'Data gagal disimpan');\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n            alert('error', 'Terjadi kesalahan saat menyimpan data');\r\n        });\r\n        setErrors({}); // Reset errors after submission\r\n    }\r\n\r\n    const handleChange = (id, st) => {\r\n        api.post(`dapi/mobil/update/${id}`, { status: st === 'aktif' ? 'non-aktif' : 'aktif' }).then(res => {\r\n            if (res.data.success) {\r\n                alert('success', 'Status berhasil diubah');\r\n                getKendaraan();\r\n            } else {\r\n                alert('error', 'Status gagal diubah');\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n            alert('error', 'Terjadi kesalahan saat mengubah status');\r\n        });\r\n    }\r\n\r\n    const del = (id) => {\r\n        confirmAlert({\r\n            title: 'Konfirmasi Hapus',\r\n            message: 'Apakah Anda yakin ingin menghapus data ini?',\r\n            buttons: [\r\n                {\r\n                    label: 'Ya',\r\n                    onClick: () => {\r\n                        api.post(`dapi/mobil/delete/${id}`).then(res => {\r\n                            if (res.data.success) {\r\n                                alert('success', 'Data berhasil dihapus');\r\n                                getKendaraan();\r\n                            } else {\r\n                                alert('error', 'Data gagal dihapus');\r\n                            }\r\n                        }).catch(err => {\r\n                            console.log(err);\r\n                            alert('error', 'Terjadi kesalahan saat menghapus data');\r\n                        });\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Tidak',\r\n                    onClick: () => {}\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        getKendaraan();\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            name: \"No\",\r\n            selector: (row, index) => index + 1,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: \"Brand Kendaraan\",\r\n            selector: (row) => row.brand,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: \"Plat Kendaraan\",\r\n            selector: (row) => row.plat,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: \"Status\",\r\n            selector: (row) => (\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={row.status === 'aktif'}\r\n                            onChange={() => handleChange(row.id, row.status)}\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                    label={row.status === 'aktif' ? 'Aktif' : 'Nonaktif'}\r\n                />\r\n            ),\r\n        },\r\n\r\n        {\r\n            name: \"Action\",\r\n            selector: (row) => (\r\n                <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        del(row.id);\r\n                    }}\r\n                >\r\n                    Hapus\r\n                </Button>\r\n            ),\r\n        }\r\n    ];\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <strong>Management Kendaraan Operasional</strong>\r\n                </CardHeader>\r\n                <CardBody>\r\n\r\n                    <Box\r\n                        component=\"form\"\r\n                        onSubmit={handleSubmit}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            gap: 2,\r\n                            margin: 'auto',\r\n                            padding: 2,\r\n                        }}\r\n                    >\r\n                        <TextField\r\n                            label=\"Merek Kendaraan\"\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            value={brand}\r\n                            onChange={(e) => setBrand(e.target.value)}\r\n                            error={Boolean(errors.brand)}\r\n                            helperText={errors.brand}\r\n                            fullWidth\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Plat Kendaraan\"\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            value={plat}\r\n                            onChange={(e) => setPlat(e.target.value)}\r\n                            error={Boolean(errors.plat)}\r\n                            helperText={errors.plat}\r\n                            fullWidth\r\n                        />\r\n\r\n                        <FormControl fullWidth error={Boolean(errors.status)}>\r\n                            <InputLabel id=\"unit-kendaraan-label\">Status</InputLabel>\r\n                            <Select\r\n                                labelId=\"unit-kendaraan-label\"\r\n                                id=\"unit-kendaraan\"\r\n                                value={status}\r\n                                onChange={(e) => setStatus(e.target.value)}\r\n                                label=\"Unit Kendaraan\"\r\n                            >\r\n\r\n                                <MenuItem value=\"aktif\">\r\n                                    Aktif\r\n                                </MenuItem>\r\n                                <MenuItem value=\"non-aktif\">\r\n                                    Non-Aktif\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                            {errors.status && <Typography color=\"error\">{errors.status}</Typography>}\r\n                        </FormControl>\r\n\r\n\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                            Tambah Data Kendaraan\r\n                        </Button>\r\n                    </Box>\r\n\r\n                    <DataTable\r\n                        className=\"mt-3\"\r\n                        columns={columns}\r\n                        data={kendaraans}\r\n                        pagination\r\n                        highlightOnHover\r\n                        pointerOnHover\r\n                        striped\r\n                        responsive\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Setting;","import React, { useState, useEffect } from \"react\";\r\nimport { TabContext, TabList, TabPanel } from '@mui/lab';\r\nimport Tab from '@mui/material/Tab';\r\nimport Badge from '@mui/material/Badge';\r\nimport { Card, CardBody, CardHeader } from 'reactstrap';\r\nimport CarUsage from \"./CarUsage\";\r\nimport Grafik from \"./Grafik\";\r\nimport AvailableCar from \"./AvailableCar\";\r\nimport PermintaanMobil from \"./PermintaanMobil\";\r\nimport TakeNBack from \"./TakeNBack\";\r\nimport PengisianBbm from \"./PengisianBbm\";\r\nimport Setting from \"./Setting\";\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst Mobil = () => {\r\n    const [value, setValue] = useState('1');\r\n    const { auth } = useAuth();\r\n\r\n    // Sync tab with hash in URL\r\n    useEffect(() => {\r\n        const handleHashChange = () => {\r\n            const hash = window.location.hash.replace('#', '');\r\n            if (['1', '2', '3', '4', '5'].includes(hash)) {\r\n                setValue(hash);\r\n            }\r\n        };\r\n        handleHashChange();\r\n        window.addEventListener('hashchange', handleHashChange);\r\n        return () => window.removeEventListener('hashchange', handleHashChange);\r\n    }, []);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        window.location.hash = `#${newValue}`;\r\n    };\r\n\r\n    const isPICMobil = auth?.user?.roles?.includes('PICMobil');\r\n\r\n    return (\r\n        <>\r\n            <TabContext value={value}>\r\n                <Card className=\"mb-1\">\r\n                    <TabList\r\n                        onChange={handleChange}\r\n                        aria-label=\"lab API tabs example\"\r\n                        vertical=\"sm\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        <Tab\r\n                            label={\r\n                                <Badge\r\n                                    badgeContent={0}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    color=\"primary\"\r\n                                >\r\n                                    <strong>DASHBOARD</strong> &nbsp;&nbsp;\r\n                                </Badge>\r\n                            }\r\n                            value=\"1\"\r\n                        />\r\n                        <Tab\r\n                            label={\r\n                                <Badge\r\n                                    badgeContent={0}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    color=\"primary\"\r\n                                >\r\n                                    <strong>BOOKING</strong> &nbsp;&nbsp;\r\n                                </Badge>\r\n                            }\r\n                            value=\"2\"\r\n                        />\r\n                        {isPICMobil && (\r\n                            <Tab\r\n                                label={\r\n                                    <Badge\r\n                                        badgeContent={0}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        <strong>PENGAMBILAN & PENGEMBALIAN</strong> &nbsp;&nbsp;\r\n                                    </Badge>\r\n                                }\r\n                                value=\"3\"\r\n                            />\r\n                        )}\r\n                        {isPICMobil && (\r\n                            <Tab\r\n                                label={\r\n                                    <Badge\r\n                                        badgeContent={0}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        <strong>PENGISIAN BBM</strong> &nbsp;&nbsp;\r\n                                    </Badge>\r\n                                }\r\n                                value=\"4\"\r\n                            />\r\n                        )}\r\n                        {isPICMobil && (\r\n                            <Tab\r\n                                label={\r\n                                    <Badge\r\n                                        badgeContent={0}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        <strong>SETTING</strong> &nbsp;&nbsp;\r\n                                    </Badge>\r\n                                }\r\n                                value=\"5\"\r\n                            />\r\n                        )}\r\n                    </TabList>\r\n                </Card>\r\n\r\n                <TabPanel value=\"1\" className=\"ps-0 pe-0\">\r\n                    {/* Grafik BBM */}\r\n                    <Card className=\"mt-4\">\r\n                        <CardBody>\r\n                            <Grafik />\r\n                        </CardBody>\r\n\r\n                    </Card>\r\n\r\n                    {/* Available Car */}\r\n                    <Card className=\"mt-4\">\r\n                        <CardHeader><strong>Mobil Operasional yang Tersedia</strong></CardHeader>\r\n                        <CardBody>\r\n                            <AvailableCar />\r\n                        </CardBody>\r\n                    </Card>\r\n\r\n                    {/* Table Car Usage */}\r\n                    <Card>\r\n                        <CardHeader><strong>Daftar Penggunaan Mobil</strong></CardHeader>\r\n                        <CardBody className=\"px-4\">\r\n                            <CarUsage />\r\n                        </CardBody>\r\n                    </Card>\r\n                </TabPanel>\r\n\r\n                <TabPanel value=\"2\" className=\"ps-0 pe-0\">\r\n                    <PermintaanMobil />\r\n                </TabPanel>\r\n\r\n                {isPICMobil && (\r\n                    <TabPanel value=\"3\" className=\"ps-0 pe-0\">\r\n                        <TakeNBack />\r\n                    </TabPanel>\r\n                )}\r\n\r\n                {isPICMobil && (\r\n                    <TabPanel value=\"4\" className=\"ps-0 pe-0\">\r\n                        <PengisianBbm />\r\n                    </TabPanel>\r\n                )}\r\n\r\n                {isPICMobil && (\r\n                    <TabPanel value=\"5\" className=\"ps-0 pe-0\">\r\n                        <Setting />\r\n                    </TabPanel>\r\n                )}\r\n            </TabContext>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Mobil;","import React from 'react';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport Mobil from './Mobil';\r\n\r\n\r\nconst Index = () => {\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <Mobil />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"names":["CarUsage","moment","api","useAxios","groups","setGroups","useState","items","setItems","useEffect","get","then","response","data","success","newGroups","map","car","id","title","concat","brand","plat","console","log","calendarResponse","groupMap","forEach","g","newItems","item","idx","groupId","group","group_id","key","user","start_time","end_time","bgColor","catch","error","_jsx","children","Timeline","defaultTimeStart","add","defaultTimeEnd","headerLabelFormats","yearLong","yearShort","monthShort","monthMedium","monthLong","dayShort","dayLong","hourShort","hourMedium","hourLong","colorss","generateRandomColors","length","Array","from","color","i","Math","floor","random","getRandomColor","Grafik","currentYear","Date","getFullYear","yearOptions","state","setState","series","options","chart","height","type","colors","plotOptions","bar","columnWidth","distributed","dataLabels","enabled","legend","show","xaxis","categories","labels","style","fontSize","selection","setSelection","month","setMonth","year","setYear","startDate","setStartDate","endDate","setEndDate","RoundedSelect","styled","Select","borderRadius","backgroundColor","letterSpacing","border","React","start","end","params","startdate","enddate","randomColors","prev","_objectSpread","_jsxs","className","Box","display","justifyContent","alignItems","flexWrap","sx","gap","flexDirection","xs","sm","fontWeight","marginBottom","background","boxShadow","p","minWidth","width","mb","maxWidth","value","onChange","event","target","displayEmpty","size","fullWidth","MenuItem","e","_","y","TextField","label","InputLabelProps","shrink","Button","padding","marginTop","onClick","fetchData","getDateRange","lastDay","getDate","String","padStart","ReactApexChart","AvailableCar","carListRef","useRef","carModels","setCarModels","scrollLeft","current","ref","toLowerCase","image","includes","src","alt","name","scrollRight","ListPermintaan","forwardRef","props","setData","auth","useAuth","afterReviewRef","useCallback","_auth$user","_auth$user$roles","endpoint","roles","formattedData","displayMobil","useImperativeHandle","refreshData","columns","cell","row","_auth$user2","_auth$user2$roles","_auth$user3","_auth$user3$roles","_Fragment","variant","post","alert","handleApprove","marginRight","reason","confirmAlert","message","customUI","_ref","onClose","multiline","rows","trim","ket","marginLeft","handleReject","disabled","status","handleDelete","buttons","ignoreRowClick","allowOverflow","button","selector","created_at","toLocaleString","sortable","keperluan","mulai","hingga","sopir","DataTable","pagination","highlightOnHover","striped","created_by_name","review_by_name","PermintaanMobil","setKeperluan","dari","setDari","sampai","setSampai","perluSopir","setPerluSopir","listPermintaanRef","listAfterReviewRef","visible","setVisible","Card","CardBody","Alert","isOpen","toggle","onDismiss","fade","component","onSubmit","preventDefault","dayjs","format","m","margin","noValidate","autoComplete","required","LocalizationProvider","dateAdapter","AdapterDayjs","DateTimePicker","renderInput","ampm","viewRenderers","hours","renderTimeViewClock","minutes","paddingLeft","paddingRight","RadioGroup","FormControlLabel","control","Radio","ListAfterReview","TakeNBack","employe","setEmploye","employes","setEmployes","mobil","setMobil","book","setBook","nobook","setNobook","bookings","setBookings","mobils","setMobils","pengambilan","setPengambilan","getPengambilan","res","err","buttonStyle","cursor","real_pengembalian","latestKm","last_km","handleDort","employe_name","taken_time","pengembalian","noDataComponent","textAlign","CardHeader","id_mobil","booked","employe_id","select","booking","unit","Autocomplete","disablePortal","newValue","inputValue","getOptionLabel","option","renderOption","otherProps","_objectWithoutProperties","_excluded","fixedHeader","fixedHeaderScrollHeight","ListBbm","jenis_bbm","jumlah","w_pengisian","oleh_name","PengisianBbm","unitMobil","setUnitMobil","jenisBbm","setJenisBbm","jumlahBiaya","setJumlahBiaya","tanggal","setTanggal","unitMobilOptions","setUnitMobilOptions","bbmRefreshKey","setBbmRefreshKey","errors","setErrors","validationErrors","Number","isNaN","Object","keys","formattedTanggal","requestData","oleh","FormControl","Boolean","InputLabel","labelId","Typography","ron","jenis","helperText","mt","Setting","kendaraans","setKendaraans","setBrand","setPlat","setStatus","getKendaraan","index","Switch","checked","handleChange","st","del","async","pointerOnHover","responsive","Mobil","setValue","handleHashChange","hash","window","location","replace","addEventListener","removeEventListener","isPICMobil","TabContext","TabList","vertical","scrollButtons","Tab","Badge","badgeContent","anchorOrigin","horizontal","TabPanel","Index","BreadCrumbs"],"sourceRoot":""}