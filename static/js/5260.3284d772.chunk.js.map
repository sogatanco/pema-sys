{"version":3,"file":"static/js/5260.3284d772.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/node_modules/@mui/system/esm/useThemeWithoutDefault/useThemeWithoutDefault.js","../node_modules/@mui/material/node_modules/@mui/system/esm/useTheme/useTheme.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/isHostComponent/isHostComponent.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/appendOwnerState/appendOwnerState.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/debounce/debounce.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/extractEventHandlers/extractEventHandlers.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/omitEventHandlers/omitEventHandlers.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/mergeSlotProps/mergeSlotProps.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/resolveComponentProps/resolveComponentProps.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/setRef/setRef.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/useLazyRef/useLazyRef.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/useOnMount/useOnMount.js","../node_modules/@mui/material/node_modules/@mui/utils/esm/useTimeout/useTimeout.js","../node_modules/@mui/material/styles/useTheme.js","../node_modules/@mui/material/utils/createSimplePaletteValueFilter.js","../node_modules/@mui/material/utils/debounce.js","../node_modules/@mui/material/utils/ownerDocument.js","../node_modules/@mui/material/utils/ownerWindow.js","../node_modules/@mui/material/utils/useForkRef.js","../node_modules/@mui/material/utils/useSlot.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { ThemeContext } from '@mui/styled-engine';\nfunction isObjectEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\nfunction useTheme(defaultTheme = null) {\n  const contextTheme = React.useContext(ThemeContext);\n  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;\n}\nexport default useTheme;","'use client';\n\nimport createTheme from \"../createTheme/index.js\";\nimport useThemeWithoutDefault from \"../useThemeWithoutDefault/index.js\";\nexport const systemDefaultTheme = createTheme();\nfunction useTheme(defaultTheme = systemDefaultTheme) {\n  return useThemeWithoutDefault(defaultTheme);\n}\nexport default useTheme;","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nfunction isHostComponent(element) {\n  return typeof element === 'string';\n}\nexport default isHostComponent;","import isHostComponent from \"../isHostComponent/index.js\";\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return {\n    ...otherProps,\n    ownerState: {\n      ...otherProps.ownerState,\n      ...ownerState\n    }\n  };\n}\nexport default appendOwnerState;","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func, wait = 166) {\n  let timeout;\n  function debounced(...args) {\n    const later = () => {\n      // @ts-ignore\n      func.apply(this, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n  debounced.clear = () => {\n    clearTimeout(timeout);\n  };\n  return debounced;\n}","/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nfunction extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default extractEventHandlers;","/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nfunction omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default omitEventHandlers;","import clsx from 'clsx';\nimport extractEventHandlers from \"../extractEventHandlers/index.js\";\nimport omitEventHandlers from \"../omitEventHandlers/index.js\";\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nfunction mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n    const mergedStyle = {\n      ...additionalProps?.style,\n      ...externalForwardedProps?.style,\n      ...externalSlotProps?.style\n    };\n    const props = {\n      ...additionalProps,\n      ...externalForwardedProps,\n      ...externalSlotProps\n    };\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers({\n    ...externalForwardedProps,\n    ...externalSlotProps\n  });\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps?.className, additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n  const mergedStyle = {\n    ...internalSlotProps?.style,\n    ...additionalProps?.style,\n    ...externalForwardedProps?.style,\n    ...externalSlotProps?.style\n  };\n  const props = {\n    ...internalSlotProps,\n    ...additionalProps,\n    ...otherPropsWithoutEventHandlers,\n    ...componentsPropsWithoutEventHandlers\n  };\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}\nexport default mergeSlotProps;","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import ownerDocument from \"../ownerDocument/index.js\";\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}","/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nfunction resolveComponentProps(componentProps, ownerState, slotState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState, slotState);\n  }\n  return componentProps;\n}\nexport default resolveComponentProps;","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from \"../useEnhancedEffect/index.js\";\n\n/**\n * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892\n * See RFC in https://github.com/reactjs/rfcs/pull/220\n */\n\nfunction useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useRef((...args) =>\n  // @ts-expect-error hide `this`\n  (0, ref.current)(...args)).current;\n}\nexport default useEventCallback;","'use client';\n\nimport * as React from 'react';\nimport setRef from \"../setRef/index.js\";\n\n/**\n * Takes an array of refs and returns a new ref which will apply any modification to all of the refs.\n * This is useful when you want to have the ref used in multiple places.\n *\n * ```tsx\n * const rootRef = React.useRef<Instance>(null);\n * const refFork = useForkRef(rootRef, props.ref);\n *\n * return (\n *   <Root {...props} ref={refFork} />\n * );\n * ```\n *\n * @param {Array<React.Ref<Instance> | undefined>} refs The ref array.\n * @returns {React.RefCallback<Instance> | null} The new ref callback.\n */\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useLazyRef(sortColumns, columns)\n */\nexport default function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","'use client';\n\nimport * as React from 'react';\nconst EMPTY = [];\n\n/**\n * A React.useEffect equivalent that runs once, when the component is mounted.\n */\nexport default function useOnMount(fn) {\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- no need to put `fn` in the dependency array\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","'use client';\n\nimport useLazyRef from \"../useLazyRef/useLazyRef.js\";\nimport useOnMount from \"../useOnMount/useOnMount.js\";\nexport class Timeout {\n  static create() {\n    return new Timeout();\n  }\n  currentId = null;\n\n  /**\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(() => {\n      this.currentId = null;\n      fn();\n    }, delay);\n  }\n  clear = () => {\n    if (this.currentId !== null) {\n      clearTimeout(this.currentId);\n      this.currentId = null;\n    }\n  };\n  disposeEffect = () => {\n    return this.clear;\n  };\n}\nexport default function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","'use client';\n\nimport * as React from 'react';\nimport { useTheme as useThemeSystem } from '@mui/system';\nimport defaultTheme from \"./defaultTheme.js\";\nimport THEME_ID from \"./identifier.js\";\nexport default function useTheme() {\n  const theme = useThemeSystem(defaultTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme[THEME_ID] || theme;\n}","/**\n * Type guard to check if the object has a \"main\" property of type string.\n *\n * @param obj - the object to check\n * @returns boolean\n */\nfunction hasCorrectMainProperty(obj) {\n  return typeof obj.main === 'string';\n}\n/**\n * Checks if the object conforms to the SimplePaletteColorOptions type.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param obj - The object to check\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns boolean\n */\nfunction checkSimplePaletteColorValues(obj, additionalPropertiesToCheck = []) {\n  if (!hasCorrectMainProperty(obj)) {\n    return false;\n  }\n  for (const value of additionalPropertiesToCheck) {\n    if (!obj.hasOwnProperty(value) || typeof obj[value] !== 'string') {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Creates a filter function used to filter simple palette color options.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns ([, value]: [any, PaletteColorOptions]) => boolean\n */\nexport default function createSimplePaletteValueFilter(additionalPropertiesToCheck = []) {\n  return ([, value]) => value && checkSimplePaletteColorValues(value, additionalPropertiesToCheck);\n}","import debounce from '@mui/utils/debounce';\nexport default debounce;","import ownerDocument from '@mui/utils/ownerDocument';\nexport default ownerDocument;","import ownerWindow from '@mui/utils/ownerWindow';\nexport default ownerWindow;","'use client';\n\nimport useForkRef from '@mui/utils/useForkRef';\nexport default useForkRef;","'use client';\n\nimport useForkRef from '@mui/utils/useForkRef';\nimport appendOwnerState from '@mui/utils/appendOwnerState';\nimport resolveComponentProps from '@mui/utils/resolveComponentProps';\nimport mergeSlotProps from '@mui/utils/mergeSlotProps';\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nexport default function useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n    className,\n    elementType: initialElementType,\n    ownerState,\n    externalForwardedProps,\n    internalForwardedProps,\n    shouldForwardComponentProp = false,\n    ...useSlotPropsParams\n  } = parameters;\n  const {\n    component: rootComponent,\n    slots = {\n      [name]: undefined\n    },\n    slotProps = {\n      [name]: undefined\n    },\n    ...other\n  } = externalForwardedProps;\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n  const {\n    props: {\n      component: slotComponent,\n      ...mergedProps\n    },\n    internalRef\n  } = mergeSlotProps({\n    className,\n    ...useSlotPropsParams,\n    externalForwardedProps: name === 'root' ? other : undefined,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.ref);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = appendOwnerState(elementType, {\n    ...(name === 'root' && !rootComponent && !slots[name] && internalForwardedProps),\n    ...(name !== 'root' && !slots[name] && internalForwardedProps),\n    ...mergedProps,\n    ...(LeafComponent && !shouldForwardComponentProp && {\n      as: LeafComponent\n    }),\n    ...(LeafComponent && shouldForwardComponentProp && {\n      component: LeafComponent\n    }),\n    ref\n  }, ownerState);\n  return [elementType, props];\n}"],"names":["defaultTheme","arguments","length","undefined","contextTheme","React","ThemeContext","obj","Object","keys","systemDefaultTheme","createTheme","useThemeWithoutDefault","element","elementType","otherProps","ownerState","isHostComponent","_objectSpread","debounce","func","timeout","wait","debounced","_len","args","Array","_key","clearTimeout","setTimeout","later","apply","this","clear","object","excludeKeys","result","filter","prop","match","includes","forEach","parameters","getSlotProps","additionalProps","externalSlotProps","externalForwardedProps","className","joinedClasses","clsx","mergedStyle","style","props","internalRef","eventHandlers","extractEventHandlers","componentsPropsWithoutEventHandlers","omitEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","ref","ownerDocument","node","document","ownerWindow","defaultView","window","componentProps","slotState","setRef","value","current","fn","useEnhancedEffect","useForkRef","refs","every","instance","UNINITIALIZED","useLazyRef","init","initArg","EMPTY","Timeout","constructor","_defineProperty","currentId","create","start","delay","useTimeout","disposeEffect","useTheme","theme","useThemeSystem","THEME_ID","createSimplePaletteValueFilter","additionalPropertiesToCheck","_ref","main","hasCorrectMainProperty","hasOwnProperty","checkSimplePaletteColorValues","_excluded","_excluded2","_excluded3","useSlot","name","initialElementType","internalForwardedProps","shouldForwardComponentProp","useSlotPropsParams","_objectWithoutProperties","component","rootComponent","slots","slotProps","other","resolvedComponentsProps","resolveComponentProps","_mergeSlotProps","mergeSlotProps","slotComponent","mergedProps","LeafComponent","appendOwnerState","as"],"sourceRoot":""}